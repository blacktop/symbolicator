{
    "target": "com.apple.security.AppleImage4",
    "total": 252,
    "version": {
        "max": "23.6.0",
        "min": "23.0.0"
    },
    "signatures": [
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: length not expressible as ssize_t: %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx"
                }
            ],
            "symbol": "_buff_get_length_signed",
            "prototype": "",
            "backtrace": [
                "__vn_measure"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: length not expressible as unsigned 32-bit integer: %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx"
                }
            ],
            "symbol": "_buff_get_length_uint32",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: attempt to deallocate static buffer",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx"
                }
            ],
            "symbol": "__buff_destructor_static_call",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: attempt to deallocate loaned buffer",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx"
                }
            ],
            "symbol": "__buff_destructor_loanee_call",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: attempt to deallocate loaned buffer without returning",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx"
                }
            ],
            "symbol": "__buff_destructor_loan_call",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: attempt to destroy already destroyed buffer",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx"
                }
            ],
            "symbol": "__buff_destructor_panic_call",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "boot manifest",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__expert_assert"
                },
                {
                    "string": "failed to parse manifest for boot: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "failed to impose manifest for boot: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_boot_expert_boot_manifest",
            "prototype": "",
            "backtrace": [
                "_image4_trust_evaluate_boot"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: illegal chip definition: anti-replay and static lifetime policies defined: %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_1"
                }
            ],
            "symbol": "__boot_static_enforceable",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: pmap and kext data length inconsistency: actual = %lu, expected >= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_2"
                },
                {
                    "string": "panic: pmap data misaligned: p = %p, aligned = %#lx",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_2"
                }
            ],
            "symbol": "_kmod_pmap_data_init",
            "prototype": "",
            "backtrace": [
                "_image4_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: illegal chip configuration: %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_6"
                }
            ],
            "symbol": "__boot_ephemeral_enforceable",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: insufficient memory for platform: actual = %lu, expected >= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_7"
                },
                {
                    "string": "generic",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_7"
                }
            ],
            "symbol": "_generic_expert_map",
            "prototype": "",
            "backtrace": [
                "_image4_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "set specialist",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__expert_assert"
                }
            ],
            "symbol": "_generic_expert_set_specialist",
            "prototype": "",
            "backtrace": [
                "_image4_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "set resolver",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__expert_assert"
                }
            ],
            "symbol": "_generic_expert_set_current_resolver",
            "prototype": "",
            "backtrace": [
                "_image4_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "set supervisor",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__expert_assert"
                }
            ],
            "symbol": "_generic_expert_set_supervisor",
            "prototype": "",
            "backtrace": [
                "_image4_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "get chip instance",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__expert_assert"
                }
            ],
            "symbol": "_generic_expert_get_chip_instance",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: failed to query expert: expert = %s, p = %s, fourcc = %s, code = %llu: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_7"
                }
            ],
            "symbol": "__generic_expert_init",
            "prototype": "",
            "backtrace": [
                "_generic_expert_map",
                "_image4_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: MAC policy init failed: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_vsnprintf"
                }
            ],
            "symbol": "___panic_npx_8",
            "prototype": "",
            "backtrace": [
                "_kmod_macf_init",
                "_image4_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "kern.osreleasetype",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strcmp"
                },
                {
                    "string": "failed to copy in os release type: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "failed to set os release type: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__hook_image4_check_sysctlbyname",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: object overflows buffer: object = firmware, length = %lu, required = %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_9"
                }
            ],
            "symbol": "_img4_firmware_init_from_buff",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "cannot select chip with first-stage boots",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "no manifest with which to select chip",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "chip has no static decode implementation: %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_Img4DecodePerformManifestTrustEvaluationWithCallbacks"
                }
            ],
            "symbol": "_img4_firmware_select_chip",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: failed to resolve expert for runtime",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_9"
                }
            ],
            "symbol": "_img4_firmware_evaluate",
            "prototype": "",
            "backtrace": [
                "_img4_firmware_execute"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "failed to query mix-n-match identifier: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "failed to query manifest hash identifier: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__img4_firmware_prepare",
            "prototype": "",
            "backtrace": [
                "_img4_firmware_evaluate",
                "_img4_firmware_execute"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "com.apple.security.",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strprefix"
                },
                {
                    "string": "panic: expert boot failed: %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_10"
                },
                {
                    "string": "panic: kmod expert type unsupported: %#llx",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_10"
                }
            ],
            "symbol": "_image4_start",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: illegal nonce descriptor configuration",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_vsnprintf"
                }
            ],
            "symbol": "___panic_npx_11",
            "prototype": "",
            "backtrace": [
                "_nonce_descriptor_select_chip"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "generic error",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                }
            ],
            "symbol": "_strdr",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: illegal chip definition: sideload and pivot policies defined: %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_12"
                }
            ],
            "symbol": "__chain_sideload_enforceable",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "failed to parse payload: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "failed to parse manifest: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_image4_trust_evaluate_leaf",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "booter environment not supported: %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "manifest boot failed: %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_image4_trust_evaluate_boot",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: trust chaining not supported for evaluation: %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_14"
                }
            ],
            "symbol": "_image4_trust_set_booter",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "trust evaluation failed: coprocessor = %s, sequence number = %lu, chain length = %lu: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_image4_trust_evaluate",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: critical trust evaluation failure: chip = %s, p = %s, payload = %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_14"
                }
            ],
            "symbol": "__image4_trust_violation",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: unsupported container for posting",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_14"
                }
            ],
            "symbol": "__image4_trust_post_properties",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: trust chain length exceeded: %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_14"
                }
            ],
            "symbol": "__image4_trust_add_link",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: no more property record slots",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_14"
                }
            ],
            "symbol": "__image4_trust_init_next_record",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: illegal chip definition: anti-reply and sideload policies defined: %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_15"
                }
            ],
            "symbol": "__boot_sideload_enforceable",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_pmap_cs_runtime_init",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_16"
                }
            ],
            "symbol": "__pmap_cs_runtime_init",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_pmap_cs_runtime_alloc",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_16"
                }
            ],
            "symbol": "__pmap_cs_runtime_alloc",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_pmap_cs_runtime_dealloc",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_16"
                }
            ],
            "symbol": "__pmap_cs_runtime_dealloc",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_pmap_cs_runtime_log",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_16"
                }
            ],
            "symbol": "__pmap_cs_runtime_log",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_pmap_cs_runtime_log_handle",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_16"
                }
            ],
            "symbol": "__pmap_cs_runtime_log_handle",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_pmap_cs_runtime_get_identifier_bool",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_16"
                }
            ],
            "symbol": "__pmap_cs_runtime_get_identifier_bool",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_pmap_cs_runtime_get_identifier_uint32",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_16"
                }
            ],
            "symbol": "__pmap_cs_runtime_get_identifier_uint32",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_pmap_cs_runtime_get_identifier_uint64",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_16"
                }
            ],
            "symbol": "__pmap_cs_runtime_get_identifier_uint64",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_pmap_cs_runtime_get_identifier_digest",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_16"
                }
            ],
            "symbol": "__pmap_cs_runtime_get_identifier_digest",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_pmap_cs_runtime_get_identifier_cstr",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_16"
                }
            ],
            "symbol": "__pmap_cs_runtime_get_identifier_cstr",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: failed to activate image: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__pmap_cs_runtime_execute_object",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_pmap_cs_runtime_alloc_type",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_16"
                }
            ],
            "symbol": "__pmap_cs_runtime_alloc_type",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_pmap_cs_runtime_dealloc_type",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_16"
                }
            ],
            "symbol": "__pmap_cs_runtime_dealloc_type",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: failed to get secure boot: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_17"
                }
            ],
            "symbol": "_image4_coprocessor_get_secure_boot_host",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: incomplete coprocessor map: handle = %lld, expected < %lld",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_17"
                },
                {
                    "string": "panic: illegal alias handle: %llx",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_17"
                }
            ],
            "symbol": "_image4_coprocessor_select",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "no options node: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "failed to read nvram property: %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_darwin_read_nvram_bootstrap",
            "prototype": "",
            "backtrace": [
                "__darwin_gl2_read_storage"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IONVRAM",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN9IOService16resourceMatchingEPKcP12OSDictionary"
                },
                {
                    "string": "IONVRAM-DELETE-PROPERTY",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "p_len",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz"
                },
                {
                    "string": "IODTNVRAM::setProperties: 0x%lx",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__Z18darwin_write_nvramPK7_expertPKcPKvm",
            "prototype": "",
            "backtrace": [
                "__ZL25_darwin_el2_write_storagePK7_expertPKcPKvm"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: thread call already pending",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz"
                },
                {
                    "string": "IONVRAM-SYNCNOW-PROPERTY",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_thread_call_allocate_with_options"
                },
                {
                    "string": "IONVRAM-FORCESYNCNOW-PROPERTY",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN9IOService15serviceMatchingEPKcP12OSDictionary"
                },
                {
                    "string": "panic: invalid sync type: %#llx",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz"
                }
            ],
            "symbol": "__Z17darwin_sync_nvramPK7_expert22expert_sync_strategy_t",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: failed to free thread call",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz"
                }
            ],
            "symbol": "__ZL27_darwin_sync_nvram_continuePvS_",
            "prototype": "",
            "backtrace": [
                "__Z17darwin_sync_nvramPK7_expert22expert_sync_strategy_t"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: bogus digest length: %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_vsnprintf"
                }
            ],
            "symbol": "___panic_npx_21",
            "prototype": "",
            "backtrace": [
                "_sprintdgst_npx"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: object overflows buffer: object = chip, length = %lu, required = %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_23"
                }
            ],
            "symbol": "_img4_chip_init_from_buff",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "custom chip",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___stack_chk_fail"
                }
            ],
            "symbol": "_img4_chip_custom",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: failed to init ignition blob: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_24"
                },
                {
                    "string": "failed to get secure boot level: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "failed to instantiate expert chip: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "failed to query original ecid: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_darwin_trap_init",
            "prototype": "",
            "backtrace": [
                "_image4_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s.%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_snprintf"
                }
            ],
            "symbol": "_darwin_trap_proc_desc",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: failed to allocate mutex",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_24"
                },
                {
                    "string": "panic: failed to allocate thread: 0x%lx",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_24"
                },
                {
                    "string": "panic: msleep: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_24"
                }
            ],
            "symbol": "_darwin_trap_async_and_wait",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "trap output has unexpected length: actual = %lu, expected = %lu, trap = %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "copyout failed: trap = %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__darwin_trap_copyout_argv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "slot[%s]: caller not entitled to copy nonce hash: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__darwin_trap_nonce_copy_hash",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "trap input has unexpected length: actual = %lu, expected = %lu, trap = %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "copyin failed: trap = %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__darwin_trap_copyin_argv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "slot[%s]: caller not entitled to peek at nonce hash: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__darwin_trap_nonce_peek_hash",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "slot[%s]: caller not entitled to roll nonce: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "magazine[%s]: failed to roll supervisor nonce: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__darwin_trap_nonce_roll",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "magazine[%s]: failed to write slot after rolling: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "magazine[%s]: failed retry write of magazine: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "magazine[%s]: failed retry write of slot: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__darwin_trap_demand_magazine_io",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "slot[%s]: caller not entitled to generate proposal nonce: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "nonce proposal generate",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_darwin_trap_async_and_wait"
                },
                {
                    "string": "d_len",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_24"
                }
            ],
            "symbol": "__darwin_trap_nonce_generate_proposal",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "caller not entitled to activate: image = %s, entitlement = %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "supervisor activation failed: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "failed to activate: image = %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__darwin_trap_image_activate",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "user buffer is null: trap = %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "user buffer length is zero: trap = %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "user buffer exceeds maximum bounds: actual = %lu, expected <= %lu, trap = %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "failed to allocate buffer: length = %lu, trap = %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "copyin failed: length = %lu, trap = %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__darwin_trap_copyin_buff",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "actbf.bf_len",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_24"
                },
                {
                    "string": "user output buffer is null: trap = %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "user output buffer length is zero: trap = %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "user buffer insufficient for payload: actual = %lu, expected >= %lu, trap = %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "copyout failed: length = %lu, trap = %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__darwin_trap_image_copy_active",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "caller not entitled to get ignition blob: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__darwin_trap_ignition_get_blob",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "caller not entitled to set failure blob: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "failed to write ignition failure key: %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_write_storage"
                },
                {
                    "string": "failed to forcibly sync nvram: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__darwin_trap_ignition_set_failure",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "release type already set: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__image4_gl2_cs_trap_kmod_set_release_type",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "no image for handle: %llx: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__image4_gl2_cs_trap_image_activate",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "user buffer is null: trap = %#llx: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "user buffer length is zero: trap = %#llx: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "user buffer exceeds maximum bounds: actual = %lu, expected <= %lu, trap = %#llx: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__pmap_cs_trap_copyin_buff",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "boot uuid already set: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__image4_gl2_cs_trap_kmod_set_boot_uuid",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: invalid pmap trap number: %llx",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_27"
                }
            ],
            "symbol": "_cs_syscall_get",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "trap failed: %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_cs_syscall_image_activate",
            "prototype": "",
            "backtrace": [
                "__darwin_trap_image_activate"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: illegal chip/expert configuration",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_30"
                },
                {
                    "string": "odometer[%s:%s]: failed to query boot nonce hash: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__boot_enforce",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "vnode_ref: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_img4_firmware_new_from_vnode_4xnu",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: vnode_getwithref: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "%s: vnode_getattr: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "va.va_data_size",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_31"
                },
                {
                    "string": "%s: vn_rdwr: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "%s: stalled out: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "%s: read: bad read: actual = %d, requested = %d, chunk length = %lu: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "panic: buffer not sufficient for digest: actual = %lu, expected >= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_31"
                }
            ],
            "symbol": "__vn_measure",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_xnu_runtime_init",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_32"
                }
            ],
            "symbol": "__xnu_runtime_init",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_xnu_runtime_log",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_32"
                }
            ],
            "symbol": "__xnu_runtime_log",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_xnu_runtime_log_handle",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_32"
                }
            ],
            "symbol": "__xnu_runtime_log_handle",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_xnu_runtime_get_identifier_bool",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_32"
                }
            ],
            "symbol": "__xnu_runtime_get_identifier_bool",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_xnu_runtime_get_identifier_uint32",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_32"
                }
            ],
            "symbol": "__xnu_runtime_get_identifier_uint32",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_xnu_runtime_get_identifier_uint64",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_32"
                }
            ],
            "symbol": "__xnu_runtime_get_identifier_uint64",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_xnu_runtime_get_identifier_digest",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_32"
                }
            ],
            "symbol": "__xnu_runtime_get_identifier_digest",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_xnu_runtime_get_identifier_cstr",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_32"
                }
            ],
            "symbol": "__xnu_runtime_get_identifier_cstr",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_xnu_runtime_execute_object",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_32"
                }
            ],
            "symbol": "__xnu_runtime_execute_object",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_xnu_runtime_copy_object",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_32"
                }
            ],
            "symbol": "__xnu_runtime_copy_object",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_xnu_runtime_alloc_type",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_32"
                }
            ],
            "symbol": "__xnu_runtime_alloc_type",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_xnu_runtime_dealloc_type",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_32"
                }
            ],
            "symbol": "__xnu_runtime_dealloc_type",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_xnu_runtime_set_nonce",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_32"
                }
            ],
            "symbol": "__xnu_runtime_set_nonce",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_xnu_runtime_roll_nonce",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_32"
                }
            ],
            "symbol": "__xnu_runtime_roll_nonce",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_xnu_runtime_copy_nonce",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_32"
                }
            ],
            "symbol": "__xnu_runtime_copy_nonce",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: iteration underflow: idx = 0x%lx, %ld",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_34"
                },
                {
                    "string": "panic: iteration overflow: idx = 0x%lx, %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_34"
                }
            ],
            "symbol": "_property_iterator_next",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "panic: nonce digest length overflow: actual = %lu, expected <= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_35"
                }
            ],
            "symbol": "_image4_nonce_digest_init",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: failed to get secure boot level: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_35"
                },
                {
                    "string": "panic: invalid secure boot level: actual = %llu, expected <= %llu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_35"
                }
            ],
            "symbol": "_image4_environment_get_secure_boot",
            "prototype": "",
            "backtrace": [
                "_image4_coprocessor_get_secure_boot"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: null coprocessor handle",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_35"
                },
                {
                    "string": "panic: invalid coprocessor handle: actual = %llu, expected < %u",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_35"
                }
            ],
            "symbol": "__image4_environment_init",
            "prototype": "",
            "backtrace": [
                "_image4_environment_new"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: version property iterated during identification: p = %s, fourcc = %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_35"
                }
            ],
            "symbol": "_image4_environment_identify",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "failed to set boot uuid in supervisor: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "failed to get boot uuid: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "magazine[%s]: failed to get nonce: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_nonce_slot_get_descriptor"
                },
                {
                    "string": "magazine[%s]: failed to entangle nonce: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_nonce_slot_get_descriptor"
                },
                {
                    "string": "magazine[%s]: failed to set supervisor nonce: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_nonce_slot_get_descriptor"
                }
            ],
            "symbol": "__Z31_darwin_el2_finalize_supervisorPK7_expert",
            "prototype": "",
            "backtrace": [
                "_kmod_expert_finalize"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "finalize",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__expert_assert"
                },
                {
                    "string": "panic: multiple expert finalizations",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz_0"
                },
                {
                    "string": "panic: failed to match crypto accelerator",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz_0"
                }
            ],
            "symbol": "_kmod_expert_finalize",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "magazine[%s]: failed to nuke legacy nonce blob: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "magazine[%s]: magazine write failed; may be expected: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_kmod_expert_uncork_userspace",
            "prototype": "",
            "backtrace": [
                "__ZN11AppleImage45startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "get lock group",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__expert_assert"
                }
            ],
            "symbol": "_kmod_expert_get_lock_group",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "get slot lock",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__expert_assert"
                }
            ],
            "symbol": "_kmod_expert_get_nonce_slot_lock",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "get magazine",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__expert_assert"
                }
            ],
            "symbol": "_kmod_expert_get_magazine_deconst",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "/defaults",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15IORegistryEntry8fromPathEPKcPK15IORegistryPlanePcPiPS_"
                },
                {
                    "string": "%s.%s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_snprintf"
                },
                {
                    "string": "panic: failed to get chosen node",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz_0"
                },
                {
                    "string": "panic: failed to get options node",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz_0"
                },
                {
                    "string": "panic: failed to get defaults node",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz_0"
                },
                {
                    "string": "panic: failed to get product node",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz_0"
                },
                {
                    "string": "panic: failed to get manifest properties",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz_0"
                }
            ],
            "symbol": "__ZL16_darwin_el2_initPK7_expert",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "boot-type",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__Z22darwin_read_iokit_nodeP15IORegistryEntryPKcPvPm"
                },
                {
                    "string": "remote",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strcmp"
                },
                {
                    "string": "failed to read boot command: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "osenvironment",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__Z22darwin_read_iokit_nodeP15IORegistryEntryPKcPvPm"
                },
                {
                    "string": "darwinos-ramdisk",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strcmp"
                },
                {
                    "string": "failed to read os environment: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "boot-command",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__Z22darwin_read_iokit_nodeP15IORegistryEntryPKcPvPm"
                },
                {
                    "string": "entangle-nonce",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__Z22darwin_read_iokit_boolP15IORegistryEntryPKcPb"
                }
            ],
            "symbol": "__ZL16_darwin_el2_bootPK7_expert",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s:%s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%s:%s%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZL16_darwin_el2_logvPK7_expert18expert_log_level_tPKcPc",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "stack exhaustion failsafe",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "monitor type",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "word size",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "boot command",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "%6s  %-36s : %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "boot type",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "os environment",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "i/o strategy",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "allow hacktivation",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "entangle nonces",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__ZL16_darwin_el2_dumpPK7_expert18expert_log_level_t",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "crypto-hash-method",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__Z22darwin_read_iokit_cstrP15IORegistryEntryPKcPc"
                },
                {
                    "string": "sha2-384",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strncmp"
                },
                {
                    "string": "panic: non-sensical crypto hash method: %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz_0"
                }
            ],
            "symbol": "__ZL22_darwin_el2_query_chipPK7_expert20expert_secure_boot_t",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "crypto accelerator not yet available: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "panic: IOAESAccelerator",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz_0"
                },
                {
                    "string": "panic: nonce length not appropriate for entanglement: length = %lu, expected %% 16 == 0",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz_0"
                },
                {
                    "string": "panic: failed to allocate memory descriptor: len = %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz_0"
                },
                {
                    "string": "panic: failed to prepare memory descriptor: 0x%lx",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz_0"
                },
                {
                    "string": "panic: encryption failed: 0x%lx",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz_0"
                },
                {
                    "string": "panic: failed to complete memory descriptor: 0x%lx",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz_0"
                },
                {
                    "string": "%s: no nonce slot for chip",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__ZL26_darwin_el2_entangle_noncePK7_expertPK5_chipjPK6_noncePS5_",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 2,
            "anchors": [
                {
                    "string": "buff_len",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz_0"
                }
            ],
            "symbol": "__ZL23_darwin_el2_read_randomPK7_expertPvm",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "/IOPowerConnection/IOPMrootDomain",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15IORegistryEntry8fromPathEPKcPK15IORegistryPlanePcPiPS_"
                },
                {
                    "string": "root power domain not yet available: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "BootSessionUUID",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "no boot uuid available: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "boot uuid not a string: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "panic: failed to parse uuid string: %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz_0"
                }
            ],
            "symbol": "__ZL25_darwin_el2_get_boot_uuidPK7_expertP7_digest",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "panic: nonce too large: actual = %lu, expected <= %ld",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_36"
                }
            ],
            "symbol": "_nonce_init",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 2,
            "anchors": [
                {
                    "string": "panic: nonce length overflow: actual = %lu, expected >= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_36"
                }
            ],
            "symbol": "_nonce_copy_out",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: nonce cannot fit into 64-bit integer: actual = %lu, expected <= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_36"
                }
            ],
            "symbol": "_nonce_get_uint64",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "panic: bogus nonce length: actual = %lu, expected <= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_36"
                }
            ],
            "symbol": "_nonce_print_cstr",
            "prototype": "",
            "backtrace": [
                "__darwin_trap_nonce_generate_proposal_continue",
                "__darwin_trap_nonce_generate_proposal"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "slot[%s]: slot data too small for slot version: actual = %lu, expected >= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "slot[%s]: future slot is bogus: version = %u, actual = %lu, expected >= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "slot[%s]: slot data has incorrect length: version = %u, actual = %lu, expected = %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_nonce_slot_set_data",
            "prototype": "",
            "backtrace": [
                "_nonce_magazine_read_slots"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: buffer too small for nonce slot data: actual = %lu, expected >= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_37"
                }
            ],
            "symbol": "_nonce_slot_copy_data",
            "prototype": "",
            "backtrace": [
                "_nonce_magazine_write_slot"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "failed to derive nonce digest: nonce = %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_nonce_slot_compute_hash",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "caller not entitled: %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "entitlement value is not Boolean: %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__ZN21AppleImage4UserClient23_check_entitlement_boolEPKc",
            "prototype": "",
            "backtrace": [
                "__ZN21AppleImage4UserClient12initWithTaskEP4taskPvjP12OSDictionary"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "sysctlbyname: %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "argv_out_len",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL11__panic_npxPKcz_1"
                }
            ],
            "symbol": "__ZN21AppleImage4UserClient18_method_trampolineEPvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "com.apple.private.security.AppleImage4.user-client",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN21AppleImage4UserClient23_check_entitlement_boolEPKc"
                }
            ],
            "symbol": "__ZN21AppleImage4UserClient12initWithTaskEP4taskPvjP12OSDictionary",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "invalid user client selector: p = %s, actual = %#x, expected < %#x",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "external method dispatch failure: p = %s, selector = %u, expected argument size = %u, actual argument size = %u: 0x%lx",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__ZN21AppleImage4UserClient14externalMethodEjP25IOExternalMethodArgumentsP24IOExternalMethodDispatchP8OSObjectPv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: enforcing[%s %s %s]: 0x%llx %s 0x%llx: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_property_constrain_uint64",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: non-sensical property digest specification: %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_38"
                },
                {
                    "string": "%s: enforcing length[%s %s %s]: %lu %s %lu: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_property_constrain_digest",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: insufficient memory for expert: actual = %lu, expected >= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_39"
                }
            ],
            "symbol": "_expert_map",
            "prototype": "",
            "backtrace": [
                "_generic_expert_map",
                "_image4_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: unexpected expert: op = %s, actual = %s, expected = %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_39"
                }
            ],
            "symbol": "__expert_assert",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%#llx",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_query_property_bool"
                }
            ],
            "symbol": "_expert_dump",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "chip environment not booted: %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "failed to prepare anti-replay: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "trust evaluation failed: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "manifest replay denied: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__manifest_impose_internal",
            "prototype": "",
            "backtrace": [
                "_manifest_impose"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: Img4DecodeRestoreInfoExists: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_40"
                }
            ],
            "symbol": "_manifest_get_restore_info",
            "prototype": "",
            "backtrace": [
                "_odometer_query_nonce"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: Img4DecodeGetManifest: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_40"
                }
            ],
            "symbol": "_manifest_get_bytes",
            "prototype": "",
            "backtrace": [
                "_activator_activate"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: unsupported container for posting: %u",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_40"
                },
                {
                    "string": "failed to check for %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "%s does not exist",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "failed to decode property: container = %s, type = %x, p = %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_manifest_post_property_callback",
            "prototype": "",
            "backtrace": [
                "__image4_trust_post_properties"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: Img4DecodeCopyManifestDigest: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_40"
                }
            ],
            "symbol": "_manifest_measure",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "Img4DecodePerformTrustEvaluationWithCallbacks: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__manifest_evaluate_trust_payload",
            "prototype": "",
            "backtrace": [
                "__manifest_impose_internal",
                "_manifest_impose"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "trust evaluation: dr = %d, ct = 0x%x, error = %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__manifest_record_trust_evaluation_error",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "Img4DecodePerformManifestTrustEvaluationWithCallbacks: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__manifest_evaluate_trust_manifest",
            "prototype": "",
            "backtrace": [
                "__manifest_impose_internal",
                "_manifest_impose"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: bogus property container input: actual = %u, expected < %u",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_40"
                },
                {
                    "string": "property failed to impose on environment: %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "object property failed to impose on environment: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__manifest_validate_property",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "Img4DecodeGetPropertyBoolean: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "%s constraint violated: property = %s, type = %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "Img4DecodeGetPropertyInteger: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "Img4DecodeGetPropertyInteger64: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "Img4DecodeGetPropertyData: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__manifest_impose_property",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "Img4DecodeGetPropertyBoolean: %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "Img4DecodeGetPropertyInteger64: %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "Img4DecodeGetPropertyData: %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__manifest_property_callback",
            "prototype": "",
            "backtrace": [
                "__manifest_validate_property"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: invalid min/max: min = %u, max = %u",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_vsnprintf"
                }
            ],
            "symbol": "___panic_npx_41",
            "prototype": "",
            "backtrace": [
                "__strtou_bounded"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "panic: nonce slot prefix overflow: actual = %lu, expected <= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_42"
                }
            ],
            "symbol": "_nonce_magazine_set_prefix",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "magazine[%s]: failed to query boot manifest hash: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "panic: failed to query mix-n-match policy: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_42"
                },
                {
                    "string": "magazine[%s]: failed to query storage for nonce magazine: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "magazine[%s]: magazine data too small for version: actual = %lu, expected >= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "magazine[%s]: future magazine is bogus: version = %u, actual = %lu, expected >= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "magazine[%s]: magazine data has incorrect length: version = %u, actual = %lu, expected = %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "magazine[%s]: failed to read legacy nonce blob header: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "magazine[%s]: magazine data has invalid manifest hash length: actual = %u, expected <= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_nonce_magazine_read_data",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "magazine[%s]: failed to read nonce slot data: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_nonce_slot_get_descriptor"
                },
                {
                    "string": "magazine[%s]: invalid nonce slot data: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_nonce_magazine_read_slots",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "magazine[%s]: failed to nuke legacy blob: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_nonce_magazine_demand_io",
            "prototype": "",
            "backtrace": [
                "__darwin_trap_demand_magazine_io"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "magazine[%s]: failed to write nonce magazine data: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_nonce_magazine_write_data",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "magazine[%s]: failed to write priority slot: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "magazine[%s]: magazine data cannot be written: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "magazine[%s]: failed to write slot: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_nonce_magazine_write_slot"
                },
                {
                    "string": "magazine[%s]: failed to write magazine data: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_nonce_magazine_write",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "magazine[%s]: failed to write nonce data: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_nonce_magazine_write_slot",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "magazine[%s]: failed to sync storage: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_nonce_magazine_sync",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: illegal magazine slot: %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_42"
                }
            ],
            "symbol": "_nonce_magazine_find_slot_index",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "panic: digest length overflow: actual = %lu, expected >= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_44"
                }
            ],
            "symbol": "_digest_copy_out",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "panic: digest length overflow: actual = %u, expected >= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_44"
                },
                {
                    "string": "d->d_len",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_44"
                }
            ],
            "symbol": "_digest_copy_out32",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: version property iterated during instantiation: p = %s, fourcc = %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_45"
                }
            ],
            "symbol": "_chip_instance_instantiate",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: Img4DecodeGetPayloadType: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "%s: unexpected payload type: actual = %s, expected = %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_payload_parse",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: Img4DecodeInitAsPayload: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__payload_parse_internal",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: Img4DecodeCopyPayloadDigest: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_47"
                }
            ],
            "symbol": "__payload_im4p_measure",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: Img4DecodeGetPayload: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_47"
                }
            ],
            "symbol": "__payload_im4p_get_verified_bytes",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: buffer not large enough for digest: actual = %lu, expected >= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_48"
                }
            ],
            "symbol": "_odometer_compute_nonce_hash",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "failed to entangle nonce: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_odometer_derive_nonce_hash",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "odometer[%s]: failed to query chip boot: %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_odometer_query_chip_boot",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "odometer[%s:%s]: constraint violation: %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_odometer_enforce_property",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "odometer[%s]: failed to query odometer cylinder: %s: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_odometer_prepare",
            "prototype": "",
            "backtrace": [
                "__manifest_impose_internal",
                "_manifest_impose"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "odometer[%s]: restore info has no boot nonce",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "odometer[%s]: failed to query restore info for boot nonce: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_odometer_query_nonce",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "odometer[%s]: Img4DecodeGetPropertyInteger64: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__odometer_decode_property",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: illegal odometer consumption configuration",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_48"
                }
            ],
            "symbol": "_odometer_update",
            "prototype": "",
            "backtrace": [
                "__manifest_validate_property"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: no anti-replay policy selected",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_48"
                }
            ],
            "symbol": "___odometer_select_policy",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: cstring is not a fourcc: length = %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_vsnprintf"
                }
            ],
            "symbol": "___panic_npx_49",
            "prototype": "",
            "backtrace": [
                "_fourcc_init_cstring"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: failed to get chosen node: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_50"
                },
                {
                    "string": "panic: failed to get options node: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_50"
                },
                {
                    "string": "panic: failed to get product node: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_50"
                },
                {
                    "string": "panic: failed to get manifest properties: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_50"
                }
            ],
            "symbol": "__darwin_gl2_init",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "image4_gl2_log_level",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_kmod_parse_boot_arg_int"
                },
                {
                    "string": "pmap_cs_log_level",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_kmod_parse_boot_arg_int"
                }
            ],
            "symbol": "__darwin_gl2_boot",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "supervisor",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "pmap log level",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__darwin_gl2_dump",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "kernel supervisor has no boot nonce: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "magazine[%s]: cannot entangle nonce; value inconsistent: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__darwin_gl2_entangle_nonce",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "no boot uuid set: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__darwin_gl2_query_property_digest",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: no random number generator in guarded context",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_50"
                }
            ],
            "symbol": "__darwin_gl2_read_random",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: unsupported digest type: oid len = %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_51"
                }
            ],
            "symbol": "_CTImg4GetDigestType",
            "prototype": "",
            "backtrace": [
                "__chip_decode_select_trust_store"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: illegal chip definition: no static decode implementation: %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_52"
                }
            ],
            "symbol": "__chip_decode_select_static",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "panic: illegal chip definition: trust store cannot override static decode implementation: %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "___panic_npx_52"
                },
                {
                    "string": "%s: failed to query anchor: 0x%llx: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "%s: DERDecodeItem: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "%s: failed to parse root: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "__chip_decode_select_trust_store",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "legacy nonce blob length cannot accommodate header: actual = %lu, expected >= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "legacy nonce blob has no Cryptex1 boot nonce: v = %hx, length = %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "legacy blob manifest hash length overflow: actual = %lu, expected <= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "read legacy blob header: version = %u, length = %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_nonce_blob_read_header",
            "prototype": "",
            "backtrace": [
                "_nonce_magazine_read_data"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "legacy nonce blob length insufficient: actual = %lu, expected >= %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "legacy blob version unsupported: actual = %u, expected = %u",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "read legacy blob: version = %u, length = %lu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_nonce_blob_read",
            "prototype": "",
            "backtrace": [
                "_nonce_magazine_read_slots"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: failed to initialize image: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_activator_init_images",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: failed to parse payload: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "%s: failed to parse manifest: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "%s: failed to execute object: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "%s: failed to impose manifest for activation: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                },
                {
                    "string": "%s: decoded payload too large: actual = %lu, expected <= %lu, manifest as payload = %d: %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_expert_log"
                }
            ],
            "symbol": "_activator_activate",
            "prototype": "",
            "backtrace": []
        }
    ]
}