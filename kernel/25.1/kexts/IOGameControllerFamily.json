{
    "target": "com.apple.iokit.IOGameControllerFamily",
    "total": 94,
    "version": {
        "max": "25.2.0",
        "min": "25.1.0"
    },
    "signatures": [
        {
            "args": 0,
            "anchors": [
                {
                    "string": "application-identifier",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN12IOUserClient21copyClientEntitlementEP4taskPKc"
                },
                {
                    "string": "com.apple.arkitd",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN12IOUserClient21copyClientEntitlementEP4taskPKc"
                },
                {
                    "string": "com.apple.arkitd-objecttracking",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN12IOUserClient21copyClientEntitlementEP4taskPKc"
                }
            ],
            "symbol": "sub_13CB8",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "PSVR2HeldInHand",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                }
            ],
            "symbol": "sub_13F58",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "com.apple.gamecontroller",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_os_log_create"
                },
                {
                    "string": "Debug",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_os_log_create"
                }
            ],
            "symbol": "__gc_log_debug",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "com.sony.playstation.vr2-sense.left",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "com.sony.playstation.vr2-sense.right",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "com.sony.playstation.vr2-sense",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "InputReportElements",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "HIDVirtualDevice",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "TimeSyncEnabled",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "[%#010llx] PSVR2SenseDevice::handleStart(<IOHIDInterface %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Could not determine connection type!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Started PSVR2 %s {\n    isVirtual = %d\n    isProxied = %d\n    transport = %d\n    connection = %d\n    reportInterval = %uus\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_5A90",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%#0.2x",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_snprintf"
                },
                {
                    "string": "_PSVR2FirmwareInfo",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_OUTLINED_FUNCTION_5"
                }
            ],
            "symbol": "sub_1487C",
            "prototype": "",
            "backtrace": [
                "sub_8874",
                "sub_7F0C"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_PSVR2MotionCalibrationInfo",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_OUTLINED_FUNCTION_5"
                },
                {
                    "string": "[%#010llx] Missing motion correction data pages.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_18"
                },
                {
                    "string": "[%#010llx] Missing motion correction data page %u.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_18"
                },
                {
                    "string": "[%#010llx] Motion correction data page out of order.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_18"
                },
                {
                    "string": "[%#010llx] Missing one or more motion correction data pages after %u.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_18"
                },
                {
                    "string": "[%#010llx] Missing some motion correction data pages.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_18"
                }
            ],
            "symbol": "sub_1505C",
            "prototype": "",
            "backtrace": [
                "sub_8D64",
                "sub_7668"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": " (bad CRC)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Get feature report %#0.2x error: Response [%#0.2x] has length %{bytes}zu.  Expected at least %zu bytes.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Get feature report %#0.2x: [%#0.2x] | %#0.8x%{public}s (%zu bytes)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Get feature report %#0.2x: [%#0.2x] | (%zu bytes)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Get feature report %#0.2x #NOTE: Response [%#0.2x] (%zu bytes) has invalid checksum '%#0.8x'; expected '%#0.8x'.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_AC4C",
            "prototype": "",
            "backtrace": [
                "sub_17A58"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": " (skipped CRC)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__gc_log_psvr2"
                },
                {
                    "string": "[%#010llx] Set feature report %#0.2x | %{private}.*P | %{public}.*P%{public}s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Set feature report %#0.2x | %{private}.*P",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_17C30",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "HasDeviceSequenceIdentifiers",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_OUTLINED_FUNCTION_0_2"
                },
                {
                    "string": "[%#010llx] PSVR2SenseDeviceFastPathUserClientInputQueue::start(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_1C300",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "com.apple.gamecontroller.driver",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_os_log_create"
                },
                {
                    "string": "PSVR2",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_os_log_create"
                }
            ],
            "symbol": "__gc_log_psvr2",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDeviceFastPathUserClient::start(<PSVR2SenseDevice %#010llx>) for pid %i, %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_48B4",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Create control queue (%llx): Not permitted",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_146F0",
            "prototype": "",
            "backtrace": [
                "sub_4618"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Could not determine device type!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_185AC",
            "prototype": "",
            "backtrace": [
                "sub_5A90"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDevice::handleStop(<IOHIDInterface %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_6EAC",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDevice::didTerminate(<IOHIDInterface %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_6FE0",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDevice::handleProviderOpened(%llu)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_70D4",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] [!] Refresh accessory info failed: %#x. The service will not be registered.  Disconnect and reconnect the accessory.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Registering service with IOKit...",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_7340",
            "prototype": "",
            "backtrace": [
                "sub_71D8",
                "sub_70D4"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDevice::handleProviderClosed(%llu)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_74B8",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Refresh accessory motion correction data completed with status (Attempt 1/2): %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] WARNING: Refresh accessory motion correction data failed (Attempt 1/2): %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_7C64",
            "prototype": "",
            "backtrace": [
                "sub_75D0",
                "sub_7260",
                "sub_71D8",
                "sub_70D4"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Refresh accessory motion correction data completed with status (Attempt 2/2): %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] ERROR: Refresh accessory motion correction data failed (Attempt 2/2): %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_7D9C",
            "prototype": "",
            "backtrace": [
                "sub_7C64",
                "sub_75D0",
                "sub_7260",
                "sub_71D8",
                "sub_70D4"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Refresh accessory firmware info completed with status (Attempt 1/2): %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] WARNING: Refresh accessory firmware info failed (Attempt 1/2): %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_83D0",
            "prototype": "",
            "backtrace": [
                "sub_7E70"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Refresh accessory firmware info completed with status (Attempt 2/2): %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] ERROR: Refresh accessory firmware info failed (Attempt 2/2): %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_8508",
            "prototype": "",
            "backtrace": [
                "sub_83D0",
                "sub_7E70"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] #INPUT Queue Reset failed: %x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_18884",
            "prototype": "",
            "backtrace": [
                "sub_9130",
                "sub_17360"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] #INPUT Queue Enqueue failed.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_1893C",
            "prototype": "",
            "backtrace": [
                "sub_9130",
                "sub_17360"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] #POWER Battery level %d meets BATTERY disconnect criteria.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] #POWER Battery low voltage meets BATTERY disconnect criteria.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] #POWER 'Controller not held' time meets BATTERY disconnect criteria {\n\t now = %llums\n\t last held in hand update = %llums\n\t should disconnect after = %ums\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] #POWER Notifying clients that 'should disconnect' state changed %#x -> %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_170C0",
            "prototype": "",
            "backtrace": [
                "sub_17360"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Payload for input report [%#x] has length [%{bytes}zu], which is less than the minimum expected length [%{bytes}zu]. Ignoring.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_18994",
            "prototype": "",
            "backtrace": [
                "sub_A13C",
                "sub_A3B0",
                "sub_A2E8"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Input report %#0.2x payload has length (%zu bytes), which is less than the minimum expected length (%zu bytes). Ignoring.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_189FC",
            "prototype": "",
            "backtrace": [
                "sub_A184",
                "sub_A3B0",
                "sub_A2E8"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Input report %#0.2x payload [%#0.2x] (%zu bytes) has invalid checksum '%#0.8x'; expected '%#0.8x'.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_A184",
            "prototype": "",
            "backtrace": [
                "sub_A3B0",
                "sub_A2E8"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Received unknown input report: reportID = %#lx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_A3B0",
            "prototype": "",
            "backtrace": [
                "sub_A2E8"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Request Motion Correction Data failed: %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_AA84",
            "prototype": "",
            "backtrace": [
                "sub_8C18",
                "sub_8C0C",
                "sub_7668"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Request Firmware Info failed: %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_AB68",
            "prototype": "",
            "backtrace": [
                "sub_8728",
                "sub_871C",
                "sub_7F0C"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Get feature report %#0.2x error: Could not map response.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_18D2C",
            "prototype": "",
            "backtrace": [
                "sub_AC4C",
                "sub_17A58"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Get feature report %#0.2x error: Response has length %{bytes}zu, which is abnormally large.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_14"
                }
            ],
            "symbol": "sub_18C84",
            "prototype": "",
            "backtrace": [
                "sub_AC4C",
                "sub_17A58"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Get feature report %#0.2x error: Response is empty. Expected at least %zu bytes.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_18BD8",
            "prototype": "",
            "backtrace": [
                "sub_AC4C",
                "sub_17A58"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Get feature report %#0.2x error: Response [%#0.2x] is too short. Expected at least %zu bytes.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_18B08",
            "prototype": "",
            "backtrace": [
                "sub_AC4C",
                "sub_17A58"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDevice::openTrackingControl(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_B544",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] #DENY openTrackingControl(<IOService %#010llx>).  Currently open by other client %#010llx.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_17F0C",
            "prototype": "",
            "backtrace": [
                "sub_B544"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDevice::closeTrackingControl(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_B628",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDevice::openHapticsControl(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_B700",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] #DENY openHapticsControl(<IOService %#010llx>).  Currently open by other client %#010llx.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_180BC",
            "prototype": "",
            "backtrace": [
                "sub_B700"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDevice::closeHapticsControl(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_B7E4",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Fetch accessory firmware info (g: %llu a:%u) failed: %#x (will retry)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_14"
                },
                {
                    "string": "[%#010llx] Fetch accessory firmware info (g: %llu a:%u) failed: %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_14"
                }
            ],
            "symbol": "____ZL17fetchFirmwareInfoP28FirmwareInfoDataFetchContext_block_invoke.cold.1",
            "prototype": "",
            "backtrace": [
                "____ZL17fetchFirmwareInfoP28FirmwareInfoDataFetchContext_block_invoke"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Fetch accessory firmware info  (g: %llu a:%u) failed: invalid checksum",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZL17fetchFirmwareInfoP28FirmwareInfoDataFetchContext_block_invoke",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Fetch motion correction data (g: %llu a:%u p:%u) failed: %#x (will retry)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Fetch motion correction data (g: %llu a:%u p:%u) failed: %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZL33fetchNextMotionCorrectionDataPageP32MotionCorrectionDataFetchContext_block_invoke.cold.2",
            "prototype": "",
            "backtrace": [
                "____ZL33fetchNextMotionCorrectionDataPageP32MotionCorrectionDataFetchContext_block_invoke"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Fetch motion correction data (g: %llu a:%u p:%u) failed: invalid checksum.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZL33fetchNextMotionCorrectionDataPageP32MotionCorrectionDataFetchContext_block_invoke",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDeviceHIDEventServerUserClient::start(<PSVR2SenseDevice %#010llx>) for pid %i, %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_C4FC",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Apply 'Input' configuration {\n\tInput.NormalizedThumbstickDeadzoneRadius = ERROR, expected number value!\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Apply 'Input' configuration {\n\tInput.NormalizedThumbstickAxisSnapRadius = ERROR, expected number value!\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Apply 'Input' configuration {\n\tInput.NormalizedTriggerDeadzone = ERROR, expected number value!\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_1B40C",
            "prototype": "",
            "backtrace": [
                "sub_19DDC"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Apply 'Input' configuration {\n\tInput.NormalizedThumbstickDeadzoneRadius = %f\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_C9DC",
            "prototype": "",
            "backtrace": [
                "sub_1B40C",
                "sub_19DDC"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Apply 'Input' configuration {\n\tInput.NormalizedThumbstickAxisSnapRadius = %f\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_CA60",
            "prototype": "",
            "backtrace": [
                "sub_1B40C",
                "sub_19DDC"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Apply 'Input' configuration {\n\tInput.NormalizedTriggerDeadzone = %f\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_CAE4",
            "prototype": "",
            "backtrace": [
                "sub_1B40C",
                "sub_19DDC"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Apply 'Power' configuration {\n\tPower.Disconnect.OnBattery.AtLevel = %hhu\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_CB68",
            "prototype": "",
            "backtrace": [
                "sub_1B88C",
                "sub_19DDC"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Apply 'Power' configuration {\n\tPower.Disconnect.OnBattery.AtLowVoltage = %d\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_CC14",
            "prototype": "",
            "backtrace": [
                "sub_1B88C",
                "sub_19DDC"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Apply 'Power' configuration {\n\tPower.Disconnect.OnBattery.NotHeldAfterTime = %u\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_CCC4",
            "prototype": "",
            "backtrace": [
                "sub_1B88C",
                "sub_19DDC"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "Could not unserialize input arguments!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_1A28C",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IOGCCircularDataQueue::initWithEntries failed: size [%zd] too large.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN21IOGCCircularDataQueue15initWithEntriesEjj.cold.3",
            "prototype": "",
            "backtrace": [
                "__ZN21IOGCCircularDataQueue15initWithEntriesEjj"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IOGCCircularDataQueue::initWithEntries failed: could not allocate memory (size=%zu).",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN21IOGCCircularDataQueue15initWithEntriesEjj.cold.2",
            "prototype": "",
            "backtrace": [
                "__ZN21IOGCCircularDataQueue15initWithEntriesEjj"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IOGCCircularDataQueue::initWithEntries failed: %{mach.errno}d.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN21IOGCCircularDataQueue15initWithEntriesEjj.cold.1",
            "prototype": "",
            "backtrace": [
                "__ZN21IOGCCircularDataQueue15initWithEntriesEjj"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDeviceFastPathUserClientInputQueue::stop(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_E2C4",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDeviceFastPathUserClientTrackingQueue::start(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] openTrackingControl(<PSVR2SenseDevice %#010llx>) denied: %x.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_1C768",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDeviceFastPathUserClientTrackingQueue::stop(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_E7B0",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDeviceFastPathUserClientHapticsQueue::start(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] openHapticsControl(<PSVR2SenseDevice %#010llx>) denied: %x.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_1CA74",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDeviceFastPathUserClientHapticsQueue::stop(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_ED8C",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "::initWithEntries failed: could not allocate memory.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24IOGCCircularControlQueue15initWithEntriesEjj",
            "prototype": "",
            "backtrace": []
        }
    ]
}