{
    "target": "com.apple.iokit.IOGameControllerFamily",
    "total": 92,
    "version": {
        "max": "25.1.0",
        "min": "25.0.0"
    },
    "signatures": [
        {
            "args": 0,
            "anchors": [
                {
                    "string": "application-identifier",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN12IOUserClient21copyClientEntitlementEP4taskPKc"
                },
                {
                    "string": "com.apple.arkitd",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN12IOUserClient21copyClientEntitlementEP4taskPKc"
                },
                {
                    "string": "com.apple.arkitd-objecttracking",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN12IOUserClient21copyClientEntitlementEP4taskPKc"
                }
            ],
            "symbol": "sub_139D0",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "PSVR2HeldInHand",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "[%#010llx] Set 'PSVR2HeldInHand': Not permitted",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_13C70",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "com.apple.gamecontroller",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_os_log_create"
                },
                {
                    "string": "Debug",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_os_log_create"
                }
            ],
            "symbol": "__gc_log_debug",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "com.sony.playstation.vr2-sense.left",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "com.sony.playstation.vr2-sense.right",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "com.sony.playstation.vr2-sense",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "InputReportElements",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "HIDVirtualDevice",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "TimeSyncEnabled",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "[%#010llx] PSVR2SenseDevice::handleStart(<IOHIDInterface %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Could not determine connection type!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Started PSVR2 %s {\n    isVirtual = %d\n    isProxied = %d\n    transport = %d\n    connection = %d\n    reportInterval = %uus\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_5ADC",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%#0.2x",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_snprintf"
                },
                {
                    "string": "_PSVR2FirmwareInfo",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_OUTLINED_FUNCTION_4"
                }
            ],
            "symbol": "sub_145C4",
            "prototype": "",
            "backtrace": [
                "sub_88C0",
                "sub_7F58"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_PSVR2MotionCalibrationInfo",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_OUTLINED_FUNCTION_4"
                },
                {
                    "string": "[%#010llx] Missing motion correction data pages.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_19"
                },
                {
                    "string": "[%#010llx] Missing motion correction data page %u.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_19"
                },
                {
                    "string": "[%#010llx] Motion correction data page out of order.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_19"
                },
                {
                    "string": "[%#010llx] Missing one or more motion correction data pages after %u.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_19"
                },
                {
                    "string": "[%#010llx] Missing some motion correction data pages.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_19"
                }
            ],
            "symbol": "sub_14DA4",
            "prototype": "",
            "backtrace": [
                "sub_8DB0",
                "sub_76B4"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": " (bad CRC)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Get feature report %#0.2x error: Response [%#0.2x] has length %{bytes}zu.  Expected at least %zu bytes.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Get feature report %#0.2x: [%#0.2x] | %#0.8x%{public}s (%zu bytes)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Get feature report %#0.2x: [%#0.2x] | (%zu bytes)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Get feature report %#0.2x #NOTE: Response [%#0.2x] (%zu bytes) has invalid checksum '%#0.8x'; expected '%#0.8x'.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_AB68",
            "prototype": "",
            "backtrace": [
                "sub_17694"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": " (skipped CRC)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__gc_log_psvr2"
                },
                {
                    "string": "[%#010llx] Set feature report %#0.2x | %{private}.*P | %{public}.*P%{public}s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Set feature report %#0.2x | %{private}.*P",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_1786C",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "HasDeviceSequenceIdentifiers",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_OUTLINED_FUNCTION_0_2"
                },
                {
                    "string": "[%#010llx] PSVR2SenseDeviceFastPathUserClientInputQueue::start(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_1BECC",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "com.apple.gamecontroller.driver",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_os_log_create"
                },
                {
                    "string": "PSVR2",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_os_log_create"
                }
            ],
            "symbol": "__gc_log_psvr2",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDeviceFastPathUserClient::start(<PSVR2SenseDevice %#010llx>) for pid %i, %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_48B4",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Clear 'PSVR2HeldInHand'",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_4F94",
            "prototype": "",
            "backtrace": [
                "sub_4DB8"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Create control queue (%llx): Not permitted",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_14438",
            "prototype": "",
            "backtrace": [
                "sub_4618"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Could not determine device type!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_181E8",
            "prototype": "",
            "backtrace": [
                "sub_5ADC"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDevice::handleStop(<IOHIDInterface %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_6EF4",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDevice::didTerminate(<IOHIDInterface %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_702C",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDevice::handleProviderOpened(%llu)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_7120",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] [!] Refresh accessory info failed: %#x. The service will not be registered.  Disconnect and reconnect the accessory.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Registering service with IOKit...",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_738C",
            "prototype": "",
            "backtrace": [
                "sub_7224",
                "sub_7120"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDevice::handleProviderClosed(%llu)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_7504",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Refresh accessory motion correction data completed with status (Attempt 1/2): %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] WARNING: Refresh accessory motion correction data failed (Attempt 1/2): %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_7CB0",
            "prototype": "",
            "backtrace": [
                "sub_761C",
                "sub_72AC",
                "sub_7224",
                "sub_7120"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Refresh accessory motion correction data completed with status (Attempt 2/2): %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] ERROR: Refresh accessory motion correction data failed (Attempt 2/2): %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_7DE8",
            "prototype": "",
            "backtrace": [
                "sub_7CB0",
                "sub_761C",
                "sub_72AC",
                "sub_7224",
                "sub_7120"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Refresh accessory firmware info completed with status (Attempt 1/2): %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] WARNING: Refresh accessory firmware info failed (Attempt 1/2): %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_841C",
            "prototype": "",
            "backtrace": [
                "sub_7EBC"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Refresh accessory firmware info completed with status (Attempt 2/2): %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] ERROR: Refresh accessory firmware info failed (Attempt 2/2): %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_8554",
            "prototype": "",
            "backtrace": [
                "sub_841C",
                "sub_7EBC"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] #INPUT Queue Reset -> %llu",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_18"
                },
                {
                    "string": "[%#010llx] #INPUT Queue Reset failed: %x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_184C0",
            "prototype": "",
            "backtrace": [
                "sub_917C",
                "sub_16FC0"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] #INPUT Queue Enqueue failed",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_185A4",
            "prototype": "",
            "backtrace": [
                "sub_917C",
                "sub_16FC0"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] #POWER Battery level %d meets BATTERY disconnect criteria.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_18"
                },
                {
                    "string": "[%#010llx] #POWER Battery low voltage meets BATTERY disconnect criteria.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_18"
                },
                {
                    "string": "[%#010llx] #POWER 'Controller not held' time meets BATTERY disconnect criteria {\n\t now = %llums\n\t last held in hand update = %llums\n\t should disconnect after = %ums\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] #POWER Notifying clients that 'should disconnect' state changed %#x -> %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_16D34",
            "prototype": "",
            "backtrace": [
                "sub_16FC0"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Received unknown input report: reportID = %#lx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_A2B4",
            "prototype": "",
            "backtrace": [
                "sub_A1EC"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Request Motion Correction Data failed: %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_A9A0",
            "prototype": "",
            "backtrace": [
                "sub_8C64",
                "sub_8C58",
                "sub_76B4"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Request Firmware Info failed: %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_AA84",
            "prototype": "",
            "backtrace": [
                "sub_8774",
                "sub_8768",
                "sub_7F58"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Get feature report %#0.2x error: Could not map response.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_18984",
            "prototype": "",
            "backtrace": [
                "sub_AB68",
                "sub_17694"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Get feature report %#0.2x error: Response has length %{bytes}zu, which is abnormally large.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_15"
                }
            ],
            "symbol": "sub_188DC",
            "prototype": "",
            "backtrace": [
                "sub_AB68",
                "sub_17694"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Get feature report %#0.2x error: Response is empty. Expected at least %zu bytes.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_18830",
            "prototype": "",
            "backtrace": [
                "sub_AB68",
                "sub_17694"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Get feature report %#0.2x error: Response [%#0.2x] is too short. Expected at least %zu bytes.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_18760",
            "prototype": "",
            "backtrace": [
                "sub_AB68",
                "sub_17694"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDevice::openTrackingControl(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_B444",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] #DENY openTrackingControl(<IOService %#010llx>).  Currently open by other client %#010llx.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_17B48",
            "prototype": "",
            "backtrace": [
                "sub_B444"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDevice::closeTrackingControl(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_B528",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDevice::openHapticsControl(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_B600",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] #DENY openHapticsControl(<IOService %#010llx>).  Currently open by other client %#010llx.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_17CF8",
            "prototype": "",
            "backtrace": [
                "sub_B600"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDevice::closeHapticsControl(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_B6E4",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Fetch accessory firmware info (g: %llu a:%u) failed: %#x (will retry)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_15"
                },
                {
                    "string": "[%#010llx] Fetch accessory firmware info (g: %llu a:%u) failed: %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_OUTLINED_FUNCTION_15"
                }
            ],
            "symbol": "____ZL17fetchFirmwareInfoP28FirmwareInfoDataFetchContext_block_invoke.cold.1",
            "prototype": "",
            "backtrace": [
                "____ZL17fetchFirmwareInfoP28FirmwareInfoDataFetchContext_block_invoke"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Fetch accessory firmware info  (g: %llu a:%u) failed: invalid checksum",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZL17fetchFirmwareInfoP28FirmwareInfoDataFetchContext_block_invoke",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Fetch motion correction data (g: %llu a:%u p:%u) failed: %#x (will retry)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Fetch motion correction data (g: %llu a:%u p:%u) failed: %#x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZL33fetchNextMotionCorrectionDataPageP32MotionCorrectionDataFetchContext_block_invoke.cold.2",
            "prototype": "",
            "backtrace": [
                "____ZL33fetchNextMotionCorrectionDataPageP32MotionCorrectionDataFetchContext_block_invoke"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Fetch motion correction data (g: %llu a:%u p:%u) failed: invalid checksum.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZL33fetchNextMotionCorrectionDataPageP32MotionCorrectionDataFetchContext_block_invoke",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Apply 'Input' configuration {\n\tInput.NormalizedThumbstickDeadzoneRadius = ERROR, expected number value!\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Apply 'Input' configuration {\n\tInput.NormalizedThumbstickAxisSnapRadius = ERROR, expected number value!\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] Apply 'Input' configuration {\n\tInput.NormalizedTriggerDeadzone = ERROR, expected number value!\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_1AF9C",
            "prototype": "",
            "backtrace": [
                "sub_19A34"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Apply 'Input' configuration {\n\tInput.NormalizedThumbstickDeadzoneRadius = %f\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_C800",
            "prototype": "",
            "backtrace": [
                "sub_1AF9C",
                "sub_19A34"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Apply 'Input' configuration {\n\tInput.NormalizedThumbstickAxisSnapRadius = %f\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_C884",
            "prototype": "",
            "backtrace": [
                "sub_1AF9C",
                "sub_19A34"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Apply 'Input' configuration {\n\tInput.NormalizedTriggerDeadzone = %f\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_C908",
            "prototype": "",
            "backtrace": [
                "sub_1AF9C",
                "sub_19A34"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Apply 'Power' configuration {\n\tPower.Disconnect.OnBattery.AtLevel = %hhu\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_C98C",
            "prototype": "",
            "backtrace": [
                "sub_1B41C",
                "sub_19A34"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Apply 'Power' configuration {\n\tPower.Disconnect.OnBattery.AtLowVoltage = %d\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_CA38",
            "prototype": "",
            "backtrace": [
                "sub_1B41C",
                "sub_19A34"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] Apply 'Power' configuration {\n\tPower.Disconnect.OnBattery.NotHeldAfterTime = %u\n}",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_CAE8",
            "prototype": "",
            "backtrace": [
                "sub_1B41C",
                "sub_19A34"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "Could not unserialize input arguments!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_19EE4",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IOGCCircularDataQueue::initWithEntries failed: size [%zd] too large.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN21IOGCCircularDataQueue15initWithEntriesEjj.cold.3",
            "prototype": "",
            "backtrace": [
                "__ZN21IOGCCircularDataQueue15initWithEntriesEjj"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IOGCCircularDataQueue::initWithEntries failed: could not allocate memory (size=%zu).",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN21IOGCCircularDataQueue15initWithEntriesEjj.cold.2",
            "prototype": "",
            "backtrace": [
                "__ZN21IOGCCircularDataQueue15initWithEntriesEjj"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IOGCCircularDataQueue::initWithEntries failed: %{mach.errno}d.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN21IOGCCircularDataQueue15initWithEntriesEjj.cold.1",
            "prototype": "",
            "backtrace": [
                "__ZN21IOGCCircularDataQueue15initWithEntriesEjj"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDeviceFastPathUserClientInputQueue::stop(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_E0E8",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDeviceFastPathUserClientTrackingQueue::start(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] openTrackingControl(<PSVR2SenseDevice %#010llx>) denied: %x.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_1C334",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDeviceFastPathUserClientTrackingQueue::stop(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_E5D4",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDeviceFastPathUserClientHapticsQueue::start(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[%#010llx] openHapticsControl(<PSVR2SenseDevice %#010llx>) denied: %x.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_1C640",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[%#010llx] PSVR2SenseDeviceFastPathUserClientHapticsQueue::stop(<IOService %#010llx>)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "sub_EBB0",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "::initWithEntries failed: could not allocate memory.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24IOGCCircularControlQueue15initWithEntriesEjj",
            "prototype": "",
            "backtrace": []
        }
    ]
}