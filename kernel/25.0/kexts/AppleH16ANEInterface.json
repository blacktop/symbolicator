{
    "target": "com.apple.driver.AppleH16ANEInterface",
    "total": 891,
    "version": {
        "max": "25.1.0",
        "min": "25.0.0"
    },
    "signatures": [
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IOUserClientDefaultLocking",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                },
                {
                    "string": "IOUserClientDefaultLockingSetProperties",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                },
                {
                    "string": "IOUserClientDefaultLockingSingleThreadExternalMethod",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                },
                {
                    "string": "IOUserClientEntitlements",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                },
                {
                    "string": "[DEBUG] %s: %s: ClientInterface(%p): Starting [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: ClientInterface(%p): Starting [No client info due to failed device initialization]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: ClientInterface(%p): Inactive [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: ClientInterface(%p): Inactive [No client info due to failed device initialization]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to start the IOUserClient\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to start device\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: ClientInterface(%p): Started [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: ClientInterface(%p): Started [No client info due to failed device initialization]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN18ANEClientInterface5startEP9IOService",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "com.apple.ane.iokit-user-access",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZL16checkEntitlementP4taskPKc"
                }
            ],
            "symbol": "__ZN13ANEClientInfo6createEP4taskjbb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "close",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Closing [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice5closeEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "programPrepare",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Program Prepare [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice14programPrepareEP21ANEProgramPrepareArgs",
            "prototype": "",
            "backtrace": [
                "__Z18ANE_ProgramPrepareP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "programUnprepare",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Program Unprepare [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: Data chaining client %p  programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice16programUnprepareEP21ANEProgramPrepareArgs",
            "prototype": "",
            "backtrace": [
                "__Z20ANE_ProgramUnprepareP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "getStatus",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Get Status [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice9getStatusEP9ANEStatus",
            "prototype": "",
            "backtrace": [
                "__Z13ANE_GetStatusP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "programCreateInstance",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Program Create Instance [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Memory Mapping Error (%s) for programInstanceParams\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Memory Mapping Error (%s) for programCreateArgsOutput\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice21programCreateInstanceEP23ANEProgramParamsWrapper",
            "prototype": "",
            "backtrace": [
                "__Z25ANE_ProgramCreateInstanceP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "programChainingPrepare",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Program Chaining Prepare [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Memory Mapping Error (%s) for prepareArgs\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ERROR:  - Out of bound access of input free events\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Error getting reference to the chaining set(port:0x%x) shared event reference\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ERROR:  - Shared events are NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice22programChainingPrepareEP31ANEProgramChainingPrepareOutputP29ANEProgramChainingPrepareArgs",
            "prototype": "",
            "backtrace": [
                "__Z26ANE_ProgramChainingPrepareP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "getVersion",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Get Version [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice10getVersionEP10ANEVersion",
            "prototype": "",
            "backtrace": [
                "__Z14ANE_GetVersionP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "registerDebugWorkProcessor",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Register Firmware WorkProcessor [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice26registerDebugWorkProcessorEP37ANEDebugWorkProcessorRegistrationArgsPy",
            "prototype": "",
            "backtrace": [
                "__Z30ANE_RegisterDebugWorkProcessorP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "unregisterDebugWorkProcessor",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Unregister Firmware WorkProcessor [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice28unregisterDebugWorkProcessorEPy",
            "prototype": "",
            "backtrace": [
                "__Z32ANE_UnregisterDebugWorkProcessorP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "getDebugWorkProcessorItem",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Get Firmware WorkProcessor Item [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice25getDebugWorkProcessorItemEPyPvj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "completeDebugWorkProcessorItem",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Complete Firmware WorkProcessor Item [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice30completeDebugWorkProcessorItemEPyPvj",
            "prototype": "",
            "backtrace": [
                "__Z34ANE_CompleteDebugWorkProcessorItemP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "releaseDebugWorkProcessorBuffers",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Release Firmware WorkProcessor Buffers [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice32releaseDebugWorkProcessorBuffersEv",
            "prototype": "",
            "backtrace": [
                "__Z36ANE_ReleaseDebugWorkProcessorBuffersP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "loadFirmware",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Load Firmware [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice12loadFirmwareEPvjj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "programOutputSetEnqueue",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Program Output Set Enqueue [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice23programOutputSetEnqueueEP30ANEBufferSetEnqueueRequestArgs",
            "prototype": "",
            "backtrace": [
                "__Z27ANE_ProgramOutputSetEnqueueP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "programInputsReady",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Program Inputs Ready [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice18programInputsReadyEP24ANEInputBuffersReadyArgs",
            "prototype": "",
            "backtrace": [
                "__Z22ANE_ProgramInputsReadyP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "memoryMapRequest",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Memory Map Request [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice16memoryMapRequestEP18ANEMemoryMapParamsb",
            "prototype": "",
            "backtrace": [
                "__Z20ANE_MemoryMapRequestP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "memoryUnMapRequest",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Memory Unmap Request [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice18memoryUnMapRequestEP18ANEMemoryMapParams",
            "prototype": "",
            "backtrace": [
                "__Z22ANE_MemoryUnMapRequestP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "sessionHintRequest",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Session Hint Request [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice18sessionHintRequestEP18ANESessionHintArgsP20ANESessionHintOutput",
            "prototype": "",
            "backtrace": [
                "__Z22ANE_SessionHintRequestP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "programChainingSetActiveProcedure",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ClientDevice(%p): Program Chaining Set Active Procedure [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice33programChainingSetActiveProcedureEP35ANEChainingSetActiveProcedureParams",
            "prototype": "",
            "backtrace": [
                "__Z37ANE_ProgramChainingSetActiveProcedureP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_DeviceOpen",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device(%p): Device Open [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z14ANE_DeviceOpenP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_DeviceClose",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device(%p): Device Close [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z15ANE_DeviceCloseP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_ProgramPrepare",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device(%p): Program Prepare [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z18ANE_ProgramPrepareP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_ProgramUnprepare",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device(%p): Program Unprepare [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z20ANE_ProgramUnprepareP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_ProgramDestroy",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device(%p): Program Destroy [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z18ANE_ProgramDestroyP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_GetStatus",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device(%p): Get Status [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z13ANE_GetStatusP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_ProgramCreateInstance",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZNK15ANEClientDevice9getClientEv"
                },
                {
                    "string": "%s: %s: Device(%p): Program Create Instance [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z25ANE_ProgramCreateInstanceP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_ProgramChainingPrepare",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZNK15ANEClientDevice9getClientEv"
                },
                {
                    "string": "%s: %s: Device(%p): Program Chaining Prepare [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Size Mismatch:%llx , ANEProgramChainingPrepareArgs: %lx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z26ANE_ProgramChainingPrepareP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_GetVersion",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device(%p): Get Version [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z14ANE_GetVersionP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_UnregisterDebugWorkProcessor",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device(%p): Unregister Firmware WorkProcessor [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z32ANE_UnregisterDebugWorkProcessorP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_GetDebugWorkProcessorItem",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device(%p): Get Firmware WorkProcessor [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z29ANE_GetDebugWorkProcessorItemP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_CompleteDebugWorkProcessorItem",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device(%p): Complete Firmware WorkProcessor Item [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z34ANE_CompleteDebugWorkProcessorItemP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_ReleaseDebugWorkProcessorBuffers",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device(%p): Release Firmware WorkProcessor Buffers [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z36ANE_ReleaseDebugWorkProcessorBuffersP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_LoadFirmware",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device(%p): Load Firmware [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z16ANE_LoadFirmwareP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_ProgramOutputSetEnqueue",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device(%p): Program Output Set Enqueue [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z27ANE_ProgramOutputSetEnqueueP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_ProgramInputsReady",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device(%p): Program Inputs Ready [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z22ANE_ProgramInputsReadyP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_ProgramChainingSetActiveProcedure",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device(%p): Program Chaining Set Active Procedure [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z37ANE_ProgramChainingSetActiveProcedureP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "aneDriverEnabled",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_PE_parse_boot_argn"
                },
                {
                    "string": "aneLogging",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_PE_parse_boot_argn"
                },
                {
                    "string": "ANEDriverRoot",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANEDriver::start, res: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: aneDriverEnabled=1 boot-arg set - ANEDriver is enabled!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: aneDriverEnabled=0 boot-arg set - ANEDriver is disabled!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANEDriver is enabled by default!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Boot-args override of driver logging flags: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Could not create ANEDriver workloop\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't add command gate to workloop.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't create message queue lock\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't create ANEDriverEventSource\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't add ANEDriverEventSource to workloop\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Done with ANEDriver start routine\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver5startEP9IOService",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "newUserClient",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANEDriver::newUserClient type=%u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Creating direct evaluate client\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Creating program loading client with security: %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: newUserClient attached\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver13newUserClientEP4taskPvjPP12IOUserClient",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "registerANEInstance",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: number of ANE HW exceeds max: %d, ignore the registration\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver19registerANEInstanceEP9IOService",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "/arm-io/ane",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZZN9ANEDriver17EnumerateANENodesEvENK3$_0clEPKcj"
                },
                {
                    "string": "/arm-io/ane0",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZZN9ANEDriver17EnumerateANENodesEvENK3$_0clEPKcj"
                },
                {
                    "string": "/arm-io/ane1",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZZN9ANEDriver17EnumerateANENodesEvENK3$_0clEPKcj"
                },
                {
                    "string": "/arm-io/ane2",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZZN9ANEDriver17EnumerateANENodesEvENK3$_0clEPKcj"
                },
                {
                    "string": "/arm-io/ane3",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZZN9ANEDriver17EnumerateANENodesEvENK3$_0clEPKcj"
                }
            ],
            "symbol": "__ZN9ANEDriver17EnumerateANENodesEv",
            "prototype": "",
            "backtrace": [
                "__ZN9ANEDriver24ANE_UserClientOpen_gatedEPvPKcP4taskj",
                "__ZN9ANEDriver18ANE_UserClientOpenEPvPKcP4taskj"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_CreateProgramHandle_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programHandle 0x%llx is in use, retry: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver29ANE_CreateProgramHandle_gatedEPy",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "checkForWork",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANEDriverMsgQueue::checkForWork - dequeued kANEMessageType_PowerOn\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANEDriverMsgQueue::checkForWork - pending kANEMessageType_PowerOn at queue index:%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: getTestSNE: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANENotificationMsg type= %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANEDriverMsgQue::checkForWork - Unknown Message\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver12checkForWorkEv",
            "prototype": "",
            "backtrace": [
                "__ZN20ANEDriverEventSource12checkForWorkEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "checkForWork_block_invoke",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programHandle 0x%llx pendingRequests ANE0:%d ANE1:%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN9ANEDriver12checkForWorkEv_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN9ANEDriver12checkForWorkEv",
                "__ZN20ANEDriverEventSource12checkForWorkEv"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "checkForWork_block_invoke_2",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANENotificationMsg FirmwareTimeout, clearing bit mask for program handle = 0x%llx oldBitmask=0x%d newBitMask=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN9ANEDriver12checkForWorkEv_block_invoke_2",
            "prototype": "",
            "backtrace": [
                "__ZN9ANEDriver12checkForWorkEv",
                "__ZN20ANEDriverEventSource12checkForWorkEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "removeProgramToANEMapping_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: pMapping->clients->getCount() = %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: No more clients are using programHandle=0x%llx. Freeing now\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Still have %d clients using programHandle=0x%llx. NOT freeing.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver31removeProgramToANEMapping_gatedEyP23_ANEDriverClientContext",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "findBestANE_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Req->ANE%d LB=%lld ns\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver17findBestANE_gatedEP21ANEProgramRequestArgsPjPPv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "destructor",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: Freeing intermediate buffer freeAll=%d forceDestroy=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN10ANEProcess10destructorERibbb",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice24ANE_ProcessDestroy_gatedEP21ANEProcessDestroyArgsbbP18ANEProgramResourcePjS4_"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANEUnwireThread",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN9ANEThreadC1EPK11ANEHWDevicePFvPvES3_PKcb"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to start unwire thread\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to start ANE_QueuePendingRequestsThread\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN12ANEScheduler4initER11ANEHWDevice",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "incrementAndWakePendingRequestsQueue",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN12ANEScheduler36incrementAndWakePendingRequestsQueueEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "wakePendingRequestsQueue",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN12ANEScheduler24wakePendingRequestsQueueEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "wakePendingRequestsQueueThrottled",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN12ANEScheduler33wakePendingRequestsQueueThrottledEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "wakePendingRequestsQueueWithFWOverload",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN12ANEScheduler38wakePendingRequestsQueueWithFWOverloadEj",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice29aneCpuLoadThrottleTimer_gatedEv",
                "__ZN11ANEHWDevice30aneCpuLoadThrottleTimerHandlerEP18IOTimerEventSource",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_CheckForPendingRequests_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: exited sleep while waiting for pendingRequests Wakeup sleepResult: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fInitInProgress: %d, fDeInitInProgress: %d, fFirmwareTimeout: %d, fIsPowered: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANEFirmwareCpuLoadScore: %d, fwCpuThrottled: %d, Disabling ANE CPU throttle\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: pRequetsToQueue: %u, fNumPendingRequestsToQueue: %u, numRequestsWithFW: %u, fANEFirmwareCpuLoadScore: %u, fwCpuThrottled: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANEFirmwareCpuLoadScore: %d, fwCpuThrottled: %d, reqSentCount: %d, Disabling ANE CPU throttle\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fNumPendingRequestsToQueue: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN12ANEScheduler33ANE_CheckForPendingRequests_gatedEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "pendingRequestsCountPerPatchMutableBuffer_block_invoke_2",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: processProgramHandle 0x%llx not found for programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN12ANEScheduler41pendingRequestsCountPerPatchMutableBufferENSt3__110shared_ptrI11ANEResourceEERj_block_invoke_2",
            "prototype": "",
            "backtrace": [
                "____ZN12ANEScheduler41pendingRequestsCountPerPatchMutableBufferENSt3__110shared_ptrI11ANEResourceEERj_block_invoke",
                "__ZN12ANEScheduler41pendingRequestsCountPerPatchMutableBufferENSt3__110shared_ptrI11ANEResourceEERj"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "waitForUnwireResourceQueueEmpty_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZNK21ANEResourceCollection7isEmptyEv"
                },
                {
                    "string": "%s: %s: 500 ms sleep timed out waiting for worker thread queue to be empty. Retries=%u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZNK21ANEResourceCollection7isEmptyEv"
                },
                {
                    "string": "%s: %s: woken up by a new fDriverInitiatedSleepAssertions: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: timed out waiting for worker thread queue to be empty retires: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN12ANEScheduler37waitForUnwireResourceQueueEmpty_gatedEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "pause",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZNK11ANEHWDevice14commandSleepMsEPvj"
                },
                {
                    "string": "%s: %s: 200 ms sleep timed out waiting for thread: %s to be blocked. Retries=%u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZNK11ANEHWDevice14commandSleepMsEPvj"
                },
                {
                    "string": "[ERROR] %s: %s: Timed out waiting for thread: %s to be blocked. retires: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEThread5pauseEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "const ANECMutableOperationInfo *ANECGetMutableOperationInfo(const ANECMutableProcedureInfo *, uint32_t)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Invalid operation info for index %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ANECGetMutableOperationInfo",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\nDeviceMemoryManager::DebugPrint Begin\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "%d (%p): isFree=%d startOffset=%d count=%d pPrev=%p pNext=%p\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\nDeviceMemory SEGMENT LIST INCONSISTENCY: segment-start=%d count=%d next-segment-start=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\nDeviceMemory SEGMENT LIST INCONSISTENCY: Current and Next segments are both free (should have been coalesced)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\nDeviceMemory SEGMENT LIST INCONSISTENCY: last-segment-start=%d count=%d initialCount=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "segments=%d allocatedSegmentsCount=%d freeSegmentsCount=%d allocatedBytesCount=%d freeBytesCount=%d minBytesCount=%d maxBytesCount=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "DeviceMemoryManager::DebugPrint End\n\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                }
            ],
            "symbol": "__ZN19DeviceMemoryManager10DebugPrintEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "bad_function_call was thrown in -fno-exceptions mode",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZNSt3__122__libcpp_verbose_abortEPKcz"
                }
            ],
            "symbol": "__ZNSt3__125__throw_bad_function_callB8fn200100Ev",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"ANE%d: %s: request timeout, not acquired all fences or events\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23handleRequestCompletionEP10ANERequesti.cold.2",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice23handleRequestCompletionEP10ANERequesti",
                "__ZN11ANEHWDevice32timeOutRequestTimerHandler_gatedEv",
                "__ZN11ANEHWDevice26timeOutRequestTimerHandlerEP18IOTimerEventSource",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"ANE%d: %s: request timeout, already sent to FW\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"ANE%d: %s: request timeout, not sent to FW\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "%s: %s: Client Not found, dropping the inference request\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: program not valid, dropping the inference request\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR RequestTimedout for uuid: 0x%llx programId: %d, processId: %d, transactionId: 0x%llx, cacheHandle: 0x%llx, requestNotSenttoFW: %d, acquiredAllFences: %d, acquiredAllEvents: %d, fANEFirmwareCpuThrottled: %d, fANEFirmwareCpuLoadScore: %u fANEThrottlePercentage: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Request submitTime: %llu readyTime: %llu startTime: %llu endTime: %llu timestampFW: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: sharedEvent port: 0x%x, eventTraceId: %#llx, eventType: %u, waitValue: %llu, completedValue: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZNK20IOSurfaceSharedEvent10getTraceIDEv"
                },
                {
                    "string": "%s: %s: ERROR - CSNE_CMD_PROCEDURE_CALL_INVALIDATE_CACHE_REQUEST 0x%llx Failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR programId: %d, processId: %d, transactionId: 0x%llx, cacheHanlde: 0x%llx request waiting with Firmware\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23handleRequestCompletionEP10ANERequesti",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice32timeOutRequestTimerHandler_gatedEv",
                "__ZN11ANEHWDevice26timeOutRequestTimerHandlerEP18IOTimerEventSource",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ProgramAbort",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice12ProgramAbortEP18ANEProgramResource",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice19setClientHint_gatedEP13ANEClientHint",
                "____ZN11ANEHWDevice13setClientHintEP13ANEClientHint_block_invoke",
                "__ZN11ANEHWDevice13setClientHintEP13ANEClientHint"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "setPendingUpdate_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: waitForPendingUpdate() failed. result: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Program is invalid\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22setPendingUpdate_gatedEP18ANEProgramResourceb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_SaveRequestTimerState",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Saving RequestTimers State\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice25ANE_SaveRequestTimerStateEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "queuePendingRequests",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: checkFwCpuThrottled: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice20queuePendingRequestsEjb",
            "prototype": "",
            "backtrace": [
                "__ZN12ANEScheduler33ANE_CheckForPendingRequests_gatedEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "setClientHint_block_invoke",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: hint initial check and lookup failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice13setClientHintEP13ANEClientHint_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice13setClientHintEP13ANEClientHint"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "incProcedureCallCacheHandleCount",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: # cachehandles hit the limit: procCallCacheHandles: %u F2FProcCallCacheHandles: %u \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice32incProcedureCallCacheHandleCountEb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_ProgramHandleCreate_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d:%s: programHandle 0x%llx is in use, retry: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice29ANE_ProgramHandleCreate_gatedEPy",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "aneMachoReadHeaderLoadCommands",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__Z12aneVnodeReadP11vfs_contextP5vnodeyxxb"
                },
                {
                    "string": "%s: %s: ERROR: failed to allocate buffer for macho header and command\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: first directRead failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: second directRead failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: header and load command size mismatch after second read first: %zu second: %zu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: macho headerAndLoadCommand: 0x%llx, size: %zu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice30aneMachoReadHeaderLoadCommandsEP11vfs_contextP5vnodeyPyS4_",
            "prototype": "",
            "backtrace": [
                "__ZN18ANEProgramResource23ANE_ProgramInitialSetupEP11ANEHWDeviceP20ANEProgramCreateArgsP26ANEProgramCreateArgsOutputP32ANEProgramCreateAdditionalParams",
                "__ZN11ANEHWDevice17ANE_ProgramCreateEP20ANEProgramCreateArgsP26ANEProgramCreateArgsOutputP4taskPvPy"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "aneVnodeAsyncReadAdvise",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23aneVnodeAsyncReadAdviseEP5vnodexi20ANEResourceUsageTypey",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_ProgramCreate_block_invoke",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Not permitted to create program\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice17ANE_ProgramCreateEP20ANEProgramCreateArgsP26ANEProgramCreateArgsOutputP4taskPvPy_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice17ANE_ProgramCreateEP20ANEProgramCreateArgsP26ANEProgramCreateArgsOutputP4taskPvPy"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "com.apple.ane.memoryUnwiringOptOutAccess.allow",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN12IOUserClient21copyClientEntitlementEP4taskPKc"
                },
                {
                    "string": "com.apple.ane.memoryUnwiringPerModelOptOutAccess.allow",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN12IOUserClient21copyClientEntitlementEP4taskPKc"
                },
                {
                    "string": "[ERROR] %s: %s: Program buffer not page aligned\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: client has entitlement to opt out all its models from unwire timer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: client has entitlement to opt this model out of unwire timer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: client trying to opt out of unwire timer without required entitlement.\nPlease add com.apple.ane.memoryUnwiringOptOutAccess.allow to opt out all models; OR com.apple.ane.memoryUnwiringPerModelOptOutAccess.allow to opt out specific models\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: program size from ANE is invalid = %ld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: couldn't create programHandle\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANE_ProgramInitialSetup failed. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: failed to create program resource\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice17ANE_ProgramCreateEP20ANEProgramCreateArgsP26ANEProgramCreateArgsOutputP4taskPvPy",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "IOFenceCallback_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Request not found for uuid: %llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice21IOFenceCallback_gatedEyP9IOSurfacei",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice15IOFenceCallbackEyP9IOSurfacei_block_invoke",
                "__ZN11ANEHWDevice15IOFenceCallbackEyP9IOSurfacei",
                "__ZL15ioFenceCallbackPvS_P9IOSurfacei"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "sharedEventNotification",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: eventTraceId %#llx value=0x%llx refcon=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23sharedEventNotificationEP20IOSurfaceSharedEventyy",
            "prototype": "",
            "backtrace": [
                "__ZN10ANERequest16initSharedEventsEP15ANESharedEventsyRb",
                "__ZN10ANERequest4initER11ANEHWDeviceR37ANEProgramSendRequestAdditionalParamsR21ANEProgramRequestArgsyP15ANESharedEventsRb",
                "__ZN10ANERequest6createER11ANEHWDeviceR37ANEProgramSendRequestAdditionalParamsR21ANEProgramRequestArgsyP15ANESharedEventsRb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_ProgramSendRequestCleanup_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Cannot find program or program info for  programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice35ANE_ProgramSendRequestCleanup_gatedEP21ANEProgramRequestArgsP37ANEProgramSendRequestAdditionalParams",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "GetIOFenceDirection",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Invalid arguments : programRequestArgs = %p, sendRequestParams = %p surface = %p",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice19GetIOFenceDirectionEP21ANEProgramRequestArgsP37ANEProgramSendRequestAdditionalParamsP9IOSurface",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_ProgramSendRequest_block_invoke",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Not permitted to send request\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice22ANE_ProgramSendRequestEP21ANEProgramRequestArgsPyPvbP18ANEReqCallbackDataP4taskP15ANESharedEvents_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice22ANE_ProgramSendRequestEP21ANEProgramRequestArgsPyPvbP18ANEReqCallbackDataP4taskP15ANESharedEvents"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_unwireAllAutoPrewiredBuffers_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programHandle: 0x%llx, freedCount: %u, numCachedResources: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice38ANE_unwireAllAutoPrewiredBuffers_gatedEv.cold.1",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice38ANE_unwireAllAutoPrewiredBuffers_gatedEv"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "lookupProcedure",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: pProgramResource is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice15lookupProcedureEP18ANEProgramResourcePKc",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_MemoryPressureNotification_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE_MemoryPressureNotification_gated - pressureLevel=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE_MemoryPressureNotification_gated - Transitioning from Suspend to DeInit to free memory\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice36ANE_MemoryPressureNotification_gatedEj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "forMapper",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s %d: Sliding PIO allocations are not supported\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s %d: could not initialize the allocator\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s %d: Created allocator at %p for mapper %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16ANEInVMAllocator9forMapperEP8IOMapperj",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "vmAlloc",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "persistent",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "non-persistent",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s %d: atOffset is 0 and iodc is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s %d: %x pages for %x %s page request allocationOffset (page offset) %x with alignment %x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s %d: VM exhausted\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s %d: Could not make the requested allocation at page offset %x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s %d: Could not get a backing VM space\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s %d: Registering VM space %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16ANEInVMAllocator7vmAllocEjjjP12IODMACommandjjb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "vmReserve",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s %d: Reserving allocations\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16ANEInVMAllocator9vmReserveEjj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "copyAllocationInfo",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s %d: Copying allocation info\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16ANEInVMAllocator18copyAllocationInfoEjP20IODARTAllocationInfoPj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "static ANEDriverMessageQueue *ANEDriverMessageQueue::withANEDriverInterface(ANEDriver *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s line %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s Done\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN21ANEDriverMessageQueue22withANEDriverInterfaceEP9ANEDriver",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "int ZinComputeInitGenericSection(const ZinComputeProgram *const, ZinComputeProgramSne *const)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "int32_t ZinComputeInitSneGenericSection(const ZinComputeProgram *const, ZinComputeProgramSneGenericSection *const)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: invalid section in segment",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeInitGenericSection",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "int ZinComputeInitGenericSectionHeader(const ZinComputeProgram *const, const void *, ZinComputeProgramSne *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeInitGenericSectionHeader",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "void ZinComputePrintGenericSection(const ZinComputeProgramSne *const)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG: H11ANEIn:Generic Section\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG: H11ANEIn:generic->totalBufferNbr = %d CalculatedSize=%ld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG: H11ANEIn:Generic buffers[%d] : valid %d bufIndex %d type %d buf %p size %llu tag 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputePrintGenericSection",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "int ZinComputeInitOperationSection(const ZinComputeProgram *const, ZinComputeProgramSne *const)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Error: initializing sne operation section",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Sanity check failure: Sne FW operations",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Invalid TD count for ane thread state",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeInitOperationSection",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "int ZinComputeInitProcedureSection(const ZinComputeProgram *const, ZinComputeProgramSne *const)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Out of range procedure segment index",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__Z13ZinAssertImplPKcz"
                },
                {
                    "string": "Out of range TD address",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__Z13ZinAssertImplPKcz"
                },
                {
                    "string": "%s: invalid procedure section",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Invalid operation schedule info in the procedure",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Invalid Id for conditional segment in the procedure",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Incorrect ANE operation count computation",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[FW Loader] Invalid internal state.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Misaligned offset, offset must be aligned with 64B",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Invalid internal state. Cannot find valid operation with the thread identifier",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Out of bound memory access",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Out of range erroneous tdSize",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Invalid API usage. ZinComputeProgramGetTDPartitionSizeInByte",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal (null) 'td' at td_idx=%zu",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Invalid FW operation count per procedure",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Invalid program - there must be at least one ANE operation",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeInitProcedureSection",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "int ZinComputeInitProcedureSectionHeader(const ZinComputeProgram *const, const void *, ZinComputeProgramSne *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeInitProcedureSectionHeader",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "void ZinComputePrintProcedureSection(const ZinComputeProgramSne *const)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG: H11ANEIn:procedures->tot = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG: H11ANEIn:procedure[%d] contentOffset=%llu type %d nbrOfBuffers=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG: H11ANEIn:procedure[%d] contentOffset=%llu type %d opIdx=%d seg_num=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputePrintProcedureSection",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "Out of range procedure count",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__Z13ZinAssertImplPKcz"
                },
                {
                    "string": "Negative segment index",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__Z13ZinAssertImplPKcz"
                },
                {
                    "string": "Negative segment number",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Negative section number",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ZinComputeLookupBuffer: invalid input parameters\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ZinComputeLookupBufferBySection: found procid %d for mutable kernel section\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ZinComputeLookupBufferBySection: procid matching mutable kernel section not found\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeLookupBufferBySection",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramStatus ZinComputeProgramGetMutableKernelSectionForProcedure(const ZinComputeProgram *, uint32_t, ZinComputeProgramSection **)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Fetching mutable kernel section for procid %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: internal error, invalid barid\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: multiple ANE ops with different mutable kernel section bars\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: did not find mutable kernel section\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeProgramGetMutableKernelSectionForProcedure",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramStatus ZinComputeProgramGetInitSection(const ZinComputeProgram *, ZinComputeProgramSection **)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ZinComputeProgramGetInitSection: invalid section",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ZinComputeProgramGetInitSection: error! section addr < segment addr",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeProgramGetInitSection",
            "prototype": "",
            "backtrace": [
                "_ZinComputeProgramMakeInitInfo"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "void ZinComputeProgramDestroyInitInfo(ZinComputeProgramInitInfo *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal info parameter = NULL",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeProgramDestroyInitInfo",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANEC v%d\nzin_ane_compiler v%d.%d.%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_sscanf"
                },
                {
                    "string": "%s: Cannot retrieve version from ident_str",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Cannot retrieve version from version string",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeProgramCompareCompilerVersion",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramStatus ZinComputeProgramCompareLinkerVersion(const char *, const char *, int32_t *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "zinld v%d.%d.%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_sscanf"
                }
            ],
            "symbol": "_ZinComputeProgramCompareLinkerVersion",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramStatus ZinComputeProgramSharedMakeCountDataStructures(Program *) [Program = ZinComputeProgram]",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "No procedure name found.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Jit operation count needs to be 0 or match operation count",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Cannot find procedure name from thread.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z46ZinComputeProgramSharedMakeCountDataStructuresI17ZinComputeProgramE23ZinComputeProgramStatusPT_",
            "prototype": "",
            "backtrace": [
                "__Z35ZinComputeProgramMakeWithMappedSizePKvmmPP17ZinComputeProgram"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "isResourceCached",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN14ANEBufferCache16isResourceCachedEjj20ANEResourceUsageType",
            "prototype": "",
            "backtrace": [
                "__ZN14ANEBufferCache13cacheResourceENSt3__110shared_ptrI11ANEResourceEE"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "getResource",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programHandle: 0x%llx, surfaceId: %u, symbolIndex: %u foundResource: %d useCount: %lu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN14ANEBufferCache11getResourceEjj20ANEResourceUsageType",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "checkAndFreeResource",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Releasing resource: surfaceId: %u resourceId: 0x%llx usageType: %u size: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN14ANEBufferCache20checkAndFreeResourceEy",
            "prototype": "",
            "backtrace": [
                "__ZN10ANERequest4freeEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "flushCache",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN14ANEBufferCache10flushCacheEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "DisableSubblocksClocksAndPower",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Subblocks already off\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice30DisableSubblocksClocksAndPowerEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice24DisableANEClocksAndPowerEb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"ANE failed to load ANEHAL\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23EnableANEClocksAndPowerEbb.cold.1",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice23EnableANEClocksAndPowerEbb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "DisableCPUClocksAndPowerForWatch",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ASC_CHINOOK_ASC_DBG_ASC_OVRD.L2Retention is set!! Clearing it",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ASC_CHINOOK_ASC_DBG_ASC_OVRD.L2Retention no longer set",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ASC_CHINOOK_ASC_DBG_ASC_OVRD.L2Retention is still set!!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice32DisableCPUClocksAndPowerForWatchEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"Failed to power up MPM power domain!\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23EnableMPMClocksAndPowerEb.cold.1",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice23EnableMPMClocksAndPowerEb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "EnableMPMClocksAndPower",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23EnableMPMClocksAndPowerEb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "DisableMPMClocksAndPower",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24DisableMPMClocksAndPowerEb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ValidatePowerOnState",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Validate power on state for ANEVersion %#x fANEHWType %#x subType %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Could not validate power on state: ret=0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice20ValidatePowerOnStateEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice23EnableCPUClocksAndPowerEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ValidatePowerOffState",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Validate power off state for ANEVersion %#x fANEHWType %#x subType %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Could not validae power off state: ret=0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice21ValidatePowerOffStateEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice24DisableCPUClocksAndPowerEv",
                "__ZN11ANEHWDevice24DisableANEClocksAndPowerEb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "uint32_t ANEHWDevice::getHwRegisterOffset(uint32_t)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"%s:%d: Unsupported SoC 0x%x\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "__ZN11ANEHWDevice17enableAneSysClockEv.cold.1",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "GetTotalWiredMemoryImpactForClient",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice34GetTotalWiredMemoryImpactForClientEPK16ANEClientContext",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "com.apple.ane.allow-system-reserved-priorities",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN12IOUserClient21copyClientEntitlementEP4taskPKc"
                },
                {
                    "string": "com.apple.ane.realtime-priority-client",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN12IOUserClient21copyClientEntitlementEP4taskPKc"
                },
                {
                    "string": "%s: %s: Create new clientContext, isDataChainingClient: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Adding client name: %s, client: %p pid: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: cannot create OSValueObject with clientContext\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24ANE_UserClientOpen_gatedEPvPKcP4taskj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_UserClientClose_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice25ANE_UserClientClose_gatedEPv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_UserClientClose_gated_block_invoke",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Removing client: %p, clientName: %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice25ANE_UserClientClose_gatedEPv_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice25ANE_UserClientClose_gatedEPv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "dumpANEClients_block_invoke",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: client: %s, powerAssertion: %d, isClosed: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice14dumpANEClientsEv_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice14dumpANEClientsEv",
                "__ZN11ANEHWDevice16ANE_RestoreStateEv",
                "__ZN11ANEHWDevice8ANE_InitEv",
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "findClient_block_invoke",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice10findClientEPvPP16ANEClientContextPP13OSValueObjectIS1_E_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice10findClientEPvPP16ANEClientContextPP13OSValueObjectIS1_E"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "setClientContextPowerState",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: clientContext->isPowered: SEP(%u) ISP(%u) PersistentClient(%u)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Realtime client %s taking power assertion on ANE, Disabling sleep timers fDriverInitiatedSleepAssertions=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Realtime client %s releasing power assertion on ANE, Restarting sleep timers fDriverInitiatedSleepAssertions = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26setClientContextPowerStateEP16ANEClientContextb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_RemovePersistentClient_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Failed to power off persistent client: res=0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice32ANE_RemovePersistentClient_gatedEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "function-isp_ep_control",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN16AppleARMFunction12withProviderEP15IORegistryEntryPKc"
                },
                {
                    "string": "%s: %s: getPeerARM call function\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed getPeerARM call function\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEISPEndPoints23GetPeerARMCallFunctionsEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IPC_initEndPoint",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: IPC interrupt: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEISPEndPoints16IPC_initEndPointEv",
            "prototype": "",
            "backtrace": [
                "__ZN15ANEISPEndPointsC2EPKcS1_P11ANEHWDevice",
                "__ZN15ANEISPEndPointsC1EPKcS1_P11ANEHWDevice",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "isp-ane-endpoint-cfg",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                }
            ],
            "symbol": "__ZN15ANEISPEndPoints19peerEPCtrlMsg_gatedE16_IPC_EP_CMD_TYPE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "void ANEISPEndPoints::dumpEPConfiguration()",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ANEHWDevice::InitializeANEDataParams - Configuration for Endpoint %d \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   ANEHWDevice:readRingBufferAddr : (DART):      0x%08llx \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   ANEHWDevice:readRingBufferLen  :              0x%08x \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   ANEHWDevice:writeRingBufferAddr: (DART):      0x%08llx \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   ANEHWDevice:writeRingBufferLen:               0x%08x \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   ANEHWDevice:mappedWriteNotifierRegisterAddr:  0x%08llx \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   ANEHWDevice:mappedWriteNotifierBit:           0x%08x \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEISPEndPoints19dumpEPConfigurationEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_PeerEPControl_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23ANE_PeerEPControl_gatedEP8OSStringPvS2_",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "powerStateWillChangeTo_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: IPC peer ISP will power down\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice28powerStateWillChangeTo_gatedEmmP9IOService",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice22powerStateWillChangeToEmmP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "getANEISPPerfRequest",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ANEPerfRequest not found for UUID: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice20getANEISPPerfRequestEy",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice21processISPEventReportEP25sAnsCmdProgramEventReport",
                "__ZN11ANEHWDevice28processTargetToHostIOCommandEyyy",
                "__ZN11ANEHWDevice23aneInterruptHandlerPrivEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice19aneInterruptHandlerEP22IOInterruptEventSourcei"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "dartUnmapMemoryDescriptor",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programId: %u, processId: %u, iopDMACommand: %p, dva: 0x%llx pVisibleMemory %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice25dartUnmapMemoryDescriptorEP12IODMACommandyjj20ANEResourceUsageTypeP20RTBuddyVisibleMemory",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "setDartAllocationInfo",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: dva: 0x%llx, size: 0x%llx, bufferCtxPtr: %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice21setDartAllocationInfoEyy20ANEResourceUsageTypeNSt3__110shared_ptrI11ANEResourceEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "removeDartAllocationInfo",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: dva: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: dartVirtualAddress 0x%llx not found\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24removeDartAllocationInfoEy",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "dartVirtualAddress",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "usageType",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "programId",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:      %18s %12s %10s %10s %10s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:      %#18llx %12llu Free\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: %3u: %#18llx %12llu %#10x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: %3u: %#18llx %12llu Free\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: dartMemSize: 0x%llx  (%llu KB)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fDartRemapStartAddress: 0x%llx, fDartRemapStartIndex: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22showDartAllocationInfoEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\nH11ANEIn - DART Exception @ 0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "    Type= %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "    HwClass= %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "    HwError= %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "    IsWrite= %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "False",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "    HwStatus= 0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "    SID= 0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "    Address= 0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "    AXI_ID[%d]= 0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "    TTBRIndex= 0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "    L2Index= 0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "    L3Index= 0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "ANEHWDevice - DART Exception - End Logging\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "__Z24DARTErrorHandlerCallbackPvPK15IODARTErrorInfo",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_FlushInactiveDARTMappings_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: kIODARTFunctionCacheFlushInactive returned: 0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice35ANE_FlushInactiveDARTMappings_gatedEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "releaseDartMapLock",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DartResource Available, Waking up QueuePendingRequestsThread\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice18releaseDartMapLockEb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "IOReturn ANEHWDevice::ANE_MapMPMMemoryAtOffset(uint64_t, uint64_t)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d:%s Error: Cannot allocate IOBMD\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24ANE_MapMPMMemoryAtOffsetEyy",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_MapMPMMemory_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d:%s Error: Could not allocate at the requested dvaOffset, res = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Error: dartMapMemoryDescriptor failed, res = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d:%s  allocated surface at DVA %llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22ANE_MapMPMMemory_gatedEyP24IOBufferMemoryDescriptor",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IOReturn ANEHWDevice::ANE_UnmapMPMMemory_gated(uint64_t, IOBufferMemoryDescriptor *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d:%s  clearing memory desriptor\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24ANE_UnmapMPMMemory_gatedEyP24IOBufferMemoryDescriptor",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANEPowerChangeHandler_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Ignoring duplicate message type %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Ignoring message type %u as fFirmwareTimeout=%d fDeInitInProgress=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: kIOMessageSystemWillSleep ANE_IsPowered=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Attempting driver initiated sleep in kIOMessageSystemWillSleep call\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: kIOMessageSystemWillNotSleep ANE_IsPowered=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: kIOMessageSystemWillPowerOn\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: kIOMessageSystemHasPoweredOn ANE_IsPowered=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Dark Wake ANE_IsPowered=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: System shutdown is in progress (msgType:%x). fIsPowered: %d IsDartActive: %d fSleepInProgress: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: should not have any clients/programs beyond here numClients: %d numPrograms: %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fSleepInProgress=%d ANE_IsPowered=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice27ANEPowerChangeHandler_gatedEjP9IOServicePvm",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice21ANEPowerChangeHandlerEPvS0_jP9IOServiceS0_m_block_invoke",
                "__ZN11ANEHWDevice21ANEPowerChangeHandlerEPvS0_jP9IOServiceS0_m",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "DriverInitiatedSleepTimerTimeOut",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: AppleANEDrv::DriverInitiatedSleepTimerTimeOut\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice32DriverInitiatedSleepTimerTimeOutEP18IOTimerEventSource",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "/arm-io/ane%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_snprintf"
                }
            ],
            "symbol": "__Z10getNumANEsv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice22initializeANESoCConfigEv",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "_ANEHALArrivalNotificationHandler",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Found ANEHAL service\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice33_ANEHALArrivalNotificationHandlerEPvP9IOServiceP10IONotifier",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice15EnumerateANEHALEb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "EnumerateANEHAL",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Looking for matching ANEHAL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: No name matching ANEHAL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Found matching ANEHAL, waiting for service\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANEHAL not available\n!!!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice15EnumerateANEHALEb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ChangePowerState",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Changing power state to %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Could not change power state to %d: ret=0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Changed power state to %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice16ChangePowerStateE20ANERTBuddyPowerState",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "InitializeRTBuddyEndpoints",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEEndpoint1",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN9IOService12nameMatchingEPKcP12OSDictionary"
                },
                {
                    "string": "%s: %s: Setting up RTBuddy endpoints\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to initialize endpoint",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to retrieve endpoint from service",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to get ANE endpoint service",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to get dictionary of IOServices",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26InitializeRTBuddyEndpointsEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice8ANE_InitEv",
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "CleanupRTBuddyEndpoints",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Cleaning up RTBuddy endpoints",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23CleanupRTBuddyEndpointsEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice18power_off_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "HandleRTBuddyMessage",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Message received = %llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice20HandleRTBuddyMessageEPvPy",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice26InitializeRTBuddyEndpointsEv",
                "__ZN11ANEHWDevice8ANE_InitEv",
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "HandleFirmwareCrashNotification",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: RTBuddy endpoint panic handler\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Bypassing panic handler, disabled by boot-args\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice31HandleFirmwareCrashNotificationEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice26InitializeRTBuddyEndpointsEv",
                "__ZN11ANEHWDevice8ANE_InitEv",
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "HandleFirmwareCrashNotification_Gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: RTBuddy endpoint panic handler gated\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice37HandleFirmwareCrashNotification_GatedEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice31HandleFirmwareCrashNotificationEv",
                "__ZN11ANEHWDevice26InitializeRTBuddyEndpointsEv",
                "__ZN11ANEHWDevice8ANE_InitEv",
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "RTBuddyService",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strlen"
                },
                {
                    "string": "[ERROR] %s: %s: Failed not get the provider's name, exiting",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: InitializeRTBuddyClient failed, exiting\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: OSDynamicCast to AppleARMIODevice failed, exiting\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Provider %s does not match with any of the devicetree/plist entry",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: providerNameStr: %s fUseRTBuddy: %d fANERTBuddyModeIndexOffset %d IntrOffset %d ClockGateOffset %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice18InitializeProviderEP9IOService",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "osenvironment",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "recoveryos",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strlen"
                },
                {
                    "string": "recovery",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strlen"
                }
            ],
            "symbol": "__ZN11ANEHWDevice12IsRecoveryOSEP15IORegistryEntry",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "/arm-io/isp",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15IORegistryEntry8fromPathEPKcPK15IORegistryPlanePcPiPS_"
                },
                {
                    "string": "/arm-io/isp0",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15IORegistryEntry8fromPathEPKcPK15IORegistryPlanePcPiPS_"
                },
                {
                    "string": "/chosen",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15IORegistryEntry8fromPathEPKcPK15IORegistryPlanePcPiPS_"
                },
                {
                    "string": "ctrr-disabled",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "pre-loaded",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ctrr-unlocked",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "exclave-assigned",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "PWGATE",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN18ANERegisterControlC1EP16AppleARMIODevicejPKc"
                },
                {
                    "string": "ANEHAL1",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN18ANERegisterControlC1EP16AppleARMIODevicejPKc"
                },
                {
                    "string": "ANEHAL2",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN18ANERegisterControlC1EP16AppleARMIODevicejPKc"
                },
                {
                    "string": "ANEHAL3",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN18ANERegisterControlC1EP16AppleARMIODevicejPKc"
                },
                {
                    "string": "registerErrorHandler",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSSymbol11withCStringEPKc"
                },
                {
                    "string": "setParameter",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "iomd-cache-ttl",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "retrieveVMLimits",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "setAllocator",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "IOSurfaceRoot",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN9IOService12nameMatchingEPKcP12OSDictionary"
                },
                {
                    "string": "com.apple.driver.AppleH11ANEInterface.LOG",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_kern_allocation_name_allocate"
                },
                {
                    "string": "com.apple.driver.AppleH11ANEInterface.CCMD",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_kern_allocation_name_allocate"
                },
                {
                    "string": "com.apple.driver.AppleH11ANEInterface.HEAP",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_kern_allocation_name_allocate"
                },
                {
                    "string": "com.apple.driver.AppleH11ANEInterface.INTM",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_kern_allocation_name_allocate"
                },
                {
                    "string": "com.apple.driver.AppleH11ANEInterface.MISC",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_kern_allocation_name_allocate"
                },
                {
                    "string": "com.apple.driver.AppleH11ANEInterface.PROC",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_kern_allocation_name_allocate"
                },
                {
                    "string": "com.apple.driver.AppleH11ANEInterface.PROG",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_kern_allocation_name_allocate"
                },
                {
                    "string": "com.apple.driver.AppleH11ANEInterface.RPCC",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_kern_allocation_name_allocate"
                },
                {
                    "string": "com.apple.driver.AppleH11ANEInterface.TBUF",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_kern_allocation_name_allocate"
                },
                {
                    "string": "com.apple.driver.AppleH11ANEInterface.INHP",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_kern_allocation_name_allocate"
                },
                {
                    "string": "com.apple.driver.AppleH11ANEInterface.MUTK",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_kern_allocation_name_allocate"
                },
                {
                    "string": "com.apple.driver.AppleH11ANEInterface.FW",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_kern_allocation_name_allocate"
                },
                {
                    "string": "function-mcc_dataset",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN16AppleARMFunction12withProviderEP15IORegistryEntryPKc"
                },
                {
                    "string": "ANE%u",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_snprintf"
                },
                {
                    "string": "ApplePMGR",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN9IOService15serviceMatchingEPKcP12OSDictionary"
                },
                {
                    "string": "ane_dpe_reset_caicos_enabled",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "%s: %s: Starting ANE Init\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to start IOService, exiting",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to initialize the provider, exiting",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Aborting driver load due to ANE Hint: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Auto-disabling ANE SYS Clock gating since it requires both ANE CPU power gating AND sub-block power gating\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANEPowerManagementEnabled =0x%x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANEPrepowerUpEnabled = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANEDynSysPowerGatingTimerPeriodMs = %d mS\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fIsANEDynPowerGateHysteresisSupported = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANEDynPowerGateHysteresisEnabled = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANEDynPowerGateHysteresisTimerPeriodMs = %d ms\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE SYS Clock gating is enabled\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Platform doesn't have /arm-io/isp or /arm-io/isp0 IORegistryEntry, disable ISP<->ANE IPC\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE-ISP EP enable status: %d, APFF enable status: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: NeRD/Recovery OS environment, ANE not needed, exit\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ctrr-disabled is set\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: usb get preloads the fw is true, fEnableFwCTRR = true\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device preloaded flag is not set, fEnableFwCTRR = false\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device ctrr-unlocked is set\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device ctrr-unlocked is not set, fEnableFwReload = false\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fEnableFwCTRR: %d, fEnableFwReload: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Exclave assigned but not supported?\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Exclave assigned and feature supported but disabled by default\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Exclave assigned\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Exclaves available\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Exclaves not availalble\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: No Exclaves assigned to ANE\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Error: Unable to map memory descriptor for the AIC Registers\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Error: Unable to map memory descriptor for the ANE_LLT_DART_DART_DART_BUILD_PARAMS Registers\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: EnableANEClocksAndPower()\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Done with initial call to PMGR\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Could not create ANE driver work-loop\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't add command gate to work loop.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Setting up ANE interrupt event source failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't add ANE interrupt event source to work loop\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't register ANEHWDevice as AppleARMFunction parent\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't create timer event source.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't create timer event source for Request Timer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't add timer event source to work loop for Request Timer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't create the driver initiated sleep timer event source.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Creating Memory Unwire timer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't create the memory unwire timer event source.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Enabling Memory Unwire timer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't create timer event source for ANE CPU Load Throttling\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't create the thermal PTD timer event source.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't create the SYS power gating timer event source.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't add SYS power gating timer event source to work loop.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Could not create ANEErrorEvent\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't add ErrorEvent source to work loop.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Could not get Mapper\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE Mapper: %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Could not register DART exception handler (res=0x%08X)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANEMaxDartMemSize: 0x%llx fANEMaxSystemMemSize: 0x%llx fANEMaxMachoSize: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fMapper: %p kIODARTFunctionSetActive -> true\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: setupDartRemap failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Could not get MPM Mapper\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: setAllocator returned %x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: No name matching IOSurfaceRoot\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: IOSurfaceRoot not available or of the wrong class\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Error: Couldn't dart map ANE sub-block power registers\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: aneSubBlockPowerRegs mapped - 0x%08x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Coredump Init failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: EDT doesn't have CTRR firmware segment information (error 0x%x). Aborting..\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CTRR firmware is loaded, size: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Could not create IOSurface for ANECPU firmware buffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Created IOSurface for ANECPU firmware buffer with virtualAddress: 0x%llx and physical address: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Could not create IOSurface for DeviceMemoryManager buffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Error: couldn't create pDeviceMemoryManager\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Got fMcacheHandle\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Failed to get fMcacheHandle\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: FW to FW doorbell is not supported for HWType (0x%x)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: wiring the shared event table failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Error: couldn't dart map shared event table\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Shared event table mapped - 0x%08x, size: 0x%08llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Error: couldn't map shared event FW doorbell, fall back to disable FWDoorbell\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: call DisableANEClocksAndPower \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Failed to create ISP<->ANE %s endpoint service\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't register %s as AppleARMFunction parent\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Cannot add IspIPCEP client\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Cannot find IspIPCEP client\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Created ANE<->ISP endpoint service between %s and %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't create ANEClientHints\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Initializing connection to talk to Exclaves\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ExclaveInit returned %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: About to register service\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Registered service\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Failed to start MemoryPressureMonitorThread\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Found peer PMGR service. Look for DPR Reset Flag\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: pmgrSupportsDPEResetUpdate PMGR Found with value: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: pmgrSupportsDPEResetUpdate PMGR property NOT FOUND\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: PMGR peer EP service NOT FOUND\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice5startEP9IOService",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IOReturn ANEHWDevice::ThermalPTDTimerTimeOut_gated()",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s No power, so returning \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice28ThermalPTDTimerTimeOut_gatedEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice22ThermalPTDTimerTimeOutEP18IOTimerEventSource",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANEDynSysPowerGatingTimerTimeOut_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "IOReturn ANEHWDevice::ANEDynSysPowerGatingTimerTimeOut_gated()",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Disabling ANE SYS clock\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s ANE SYS clock disable time = %lld uS\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice38ANEDynSysPowerGatingTimerTimeOut_gatedEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice32ANEDynSysPowerGatingTimerTimeOutEP18IOTimerEventSource",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IOReturn ANEHWDevice::sendCmdEnableDynamicPowerGating_gated(bool)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s: Enabling Dynamic PowerGating\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ERROR: CSNE_CMD_SET_DYNAMIC_POWERGATE Enable failed res=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice37sendCmdEnableDynamicPowerGating_gatedEb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "virtual IOReturn ANEHWDevice::newUserClient(task_t, void *, UInt32, IOUserClient **)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ANEHWDevice::newUserClient type=%u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ANEHWDevice::newUserClient : Creating default full-entitlement client\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice13newUserClientEP4taskPvjPP12IOUserClient",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "power_on_hardware",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Powering on hardware\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE wakeup from system iniated sleep initiated\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE wakeup from driver initiatd sleep initiated\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: EnableANEClocksAndPower result = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: EnableMPMClocksAndPower result = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE_Init failed: 0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Send changePowerStateToPriv 0\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Not starting aned, fAnedLaunchFromKernel: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice17power_on_hardwareEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"ANE_Init failed: 0x%08X\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "ANEHWDevice.cpp",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "__ZN11ANEHWDevice17power_on_hardwareEv.cold.1",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "power_off_hardware",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Powering off...\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Exclave interrupt was disabled during firmware recovery\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Powering off... done\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice18power_off_hardwareEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "WaitForLastClocksPowerAssertion",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Waiting for fIsClocksPowerOn(%u) to drop to 1\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Awakened on fIsClocksPowerOn signal.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Timed out waiting for fIsClocksPowerOn(%u) to drop to 1. Retrying...retries=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Timed out waiting for fIsClocksPowerOn(%u) to drop to 1 after 5 retries. Force disabling\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice31WaitForLastClocksPowerAssertionEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice18power_off_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "setPowerStateGatedPriv",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Requested power state: %lu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Suspend in progress, returning\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE Power up from OFF took %lld uS\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ISP client still present.. waiting for it to go away. Retries=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Timed out waiting for ISP to go away sleepResult=0x%x aneISPClientContext->isPowered=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Waiting for ISP to go away with camDisableTimeouts=1\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Waiting for ISP client going away before powering OFF the ANE... retries=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: PearlSEP client still present... waiting for it to go away. retries=%d camDisableTimeouts=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Timed out waiting for PearlSEP to go away sleepResult=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: PearlSEP Client going away... can power OFF the ANE, retries=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: ANE Sleep without fSleepInProgress set to true!! Forcing fSleepInProgress to true\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE sleep initiated\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: All pending requests completed. Proceeding with regular sleep\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: waitForFirmwareToQuiesce failed! Marking firmware as being in timed out for clean reboot\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Finished saving ANE state",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE driverInitiatedSleep completed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE systemInitiatedSleep completed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Firmware recovery completed... notifying ANEExclave\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22setPowerStateGatedPrivEmP9IOService",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice18setPowerStateGatedEmP9IOService",
                "__ZN11ANEHWDevice13setPowerStateEmP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "setPowerState",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice13setPowerStateEmP9IOService",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "isANEActive",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fInitInProgress: %d, fIsPowered: %d, fDeInitInProgress: %d, fSleepInProgress: %d, fFirmwareTimeout: %d, fClientPowerDownInProgress: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice11isANEActiveEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_PowerOnByAnyPowerClient_gated_block_invoke",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Powering on ANE on behalf of client %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice33ANE_PowerOnByAnyPowerClient_gatedEv_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice33ANE_PowerOnByAnyPowerClient_gatedEv",
                "__ZN11ANEHWDevice22setPowerStateGatedPrivEmP9IOService",
                "__ZN11ANEHWDevice18setPowerStateGatedEmP9IOService",
                "__ZN11ANEHWDevice13setPowerStateEmP9IOService"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "IOReturn ANEHWDevice::ANE_PowerOnByKernelClient_gated(void *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE_PowerOnByKernelClient_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s : ANEHWDevice::ANE_PowerOnByKernelClient - about to sleep\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice::Function:%s, line: %d, ANE_PowerOnByKernelClient timeout\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice31ANE_PowerOnByKernelClient_gatedEPv",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice25ANE_PowerOnByKernelClientEPv_block_invoke",
                "__ZN11ANEHWDevice25ANE_PowerOnByKernelClientEPv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "virtual IOReturn AppleANEPowerOnOffFunction::callFunction(void *, void *, void *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG: %s :_signature=%#x param1=%p param2=%p param3=%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG: %s :Client (%s) already has a power assertion\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG: %s :ANE driver open failed for client (%s) with error 0x%x \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG: ANE%d:%s :ANE driver power off failed for client (%c%c%c%c) with error 0x%x \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG: ANE%d: %s :ANE driver close failed for client (%c%c%c%c) with error 0x%x \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG: ANE%d: %s :Session ended in error for client (%c%c%c%c) with sessionErrorCode 0x%x. Calling HandleFirmwareTimeout to restart firmware\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN26AppleANEPowerOnOffFunction12callFunctionEPvS0_S0_",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "virtual IOReturn AppleANEMPMMapMemoryFunction::callFunction(void *, void *, void *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE %s: kAppleMPMFunctionMapMemory, format %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN28AppleANEMPMMapMemoryFunction12callFunctionEPvS0_S0_",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "virtual IOReturn AppleANEMPMUnmapMemoryFunction::callFunction(void *, void *, void *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE %s: kAppleMPMFunctionUnmapMemory, format %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN30AppleANEMPMUnmapMemoryFunction12callFunctionEPvS0_S0_",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_WaitForPowerOff_block_invoke",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_clock_interval_to_deadline"
                },
                {
                    "string": "%s: %s: ANE Powered up, retry after we finished powering down\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: We timed out waiting for the ANE to power down fIsPowered: %d fDeInitInProgress: %d fClientPowerDownInProgress: %d retries: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice19ANE_WaitForPowerOffEj_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice19ANE_WaitForPowerOffEj"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_PowerOn",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice11ANE_PowerOnEPv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_PowerOn_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE busy with power down, retry after we finished powering down\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Oops, we timed out waiting for the ANE to power down fIsPowered: %d fDeInitInProgress: %d fClientPowerDownInProgress: %d retries: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR - Timed out waiting for the ANE to power down\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Client requesting power on: %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Wait until ANE firmware timeout is handled, client: %p retries=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Timed out waiting for the firmware timeout handling retries=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Powering on ANE. blocking: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Powered up already, blocking: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Wait until ANE gets powered up for client %p retries=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR Oops, we timed out waiting for the ANE to power up retries=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Starting SECURE mode\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice17ANE_PowerOn_gatedEPvb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_PowerOn_gated_block_invoke",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: clientname:%s isPowered: %d Programs Open:%d Wired-Memory : %lld B\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice17ANE_PowerOn_gatedEPvb_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice17ANE_PowerOn_gatedEPvb"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANE_PowerOff_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Starting power down sequences for client at 0x%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Client requesting power off: %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Stopping SECURE mode\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: SECURE mode -> EXCLAVE mode\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: No pending request for SECURE mode -> EXCLAVE mode \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Invalid client requesting power off\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: No client is powered on\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ANE power left ON when no clients connected!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Skip power down - driver sleep initiatd timer handler is running\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Try power down as the current client is the last powered one\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Send changePowerStateToPriv -> 0\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Firmware is in timeout state, ref cnt is: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice18ANE_PowerOff_gatedEPv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IOReturn ANEHWDevice::ANE_startDaemon_gated()",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ANEHWDevice::ANE_startDaemon_gated, start aned daemon\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice21ANE_startDaemon_gatedEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_releaseDaemon_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Release aned daemon\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23ANE_releaseDaemon_gatedEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_CleanupForColdReboot_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Cleanup started\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Cleanup finished\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice30ANE_CleanupForColdReboot_gatedEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"Variable read size (%ld) does not match patch variable size(%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "RTBuddyPatchBay.h",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "__ZN15RTBuddyFirmware12patchBayReadIyEEbjRT_.cold.1",
            "prototype": "",
            "backtrace": [
                "__ZN15RTBuddyFirmware12patchBayReadIyEEbjRT_"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "coredumpSaveSWVers",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ret:%d swVersion %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANECoredump18coredumpSaveSWVersEPFiPvyS0_ES0_",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "aneFWCommandPollTimerHandler",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice28aneFWCommandPollTimerHandlerEP18IOTimerEventSource",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "aneFWCommandPollTimer_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice27aneFWCommandPollTimer_gatedEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice28aneFWCommandPollTimerHandlerEP18IOTimerEventSource",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "aneFWCommandPollTimer_gated_block_invoke",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Firmware timeout detected deltaTimeSeconds=%d timeoutInSeconds=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice27aneFWCommandPollTimer_gatedEv_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice27aneFWCommandPollTimer_gatedEv",
                "__ZN11ANEHWDevice28aneFWCommandPollTimerHandlerEP18IOTimerEventSource",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "powerOffMcacheRequest",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN12MCDataStream18setDataStreamFlagsEj"
                },
                {
                    "string": "%s: %s: Remove ANE data stream from Mcache driver\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to remove ANE data stream from Mcache driver\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN17ANEMemcacheClient21powerOffMcacheRequestEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice18power_off_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "PrintSharedBuffer",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Dropping client logging buffer message!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Resetting client logging buffer tail",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice17PrintSharedBufferEP19client_log_buffer_tPKc",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANEHWDevice::ANECPU ANE%d: %s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "processDebugLoggingRequest",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice::ANECPU ANE%d: %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Address translation memory map params are invalid!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26processDebugLoggingRequestEyyy",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "aneExclaveInterruptHandler",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ITQ reg: 0x%0x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ITQ interrupt routing failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ITQ serviced\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26aneExclaveInterruptHandlerEP22IOInterruptEventSourcei",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice14ANEExclaveInitEP9IOService",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"Firmware timeout recovery for Exclaves failed!!!\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "__ZN11ANEHWDevice20aneExclaveCycleRetryEv.cold.2",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice20aneExclaveCycleRetryEv",
                "__ZN11ANEHWDevice15aneExclaveCycleEbb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"Exclave mode switch didn't succeed on retry\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "__ZN11ANEHWDevice20aneExclaveCycleRetryEv.cold.1",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice20aneExclaveCycleRetryEv",
                "__ZN11ANEHWDevice15aneExclaveCycleEbb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "aneExclaveUpcallEventHandler",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ID of notification %d with current Exclave mode %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: PersistentClient upcall ack delivery failed!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: PersistentClient upcall ack delivered, Exclave status: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice28aneExclaveUpcallEventHandlerEP22IOInterruptEventSourcei",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice14ANEExclaveInitEP9IOService",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "aneExclaveEventHandler",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22aneExclaveEventHandlerEP22IOInterruptEventSourcei",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice14ANEExclaveInitEP9IOService",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "aneExclaveStartFWRecoveryProcess",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Masking off ANE Exclave interrupt before informing the EC\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: StartFWRecoveryProcess call failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: StartFWRecoveryProcess call completed, status from Exclave %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice32aneExclaveStartFWRecoveryProcessEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice33ANE_ExclaveStartFWRecoveryProcessEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_ExclaveStartFWRecoveryProcess",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice33ANE_ExclaveStartFWRecoveryProcessEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_ExclaveEndFWRecoveryProcess",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice31ANE_ExclaveEndFWRecoveryProcessEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice22setPowerStateGatedPrivEmP9IOService",
                "__ZN11ANEHWDevice18setPowerStateGatedEmP9IOService",
                "__ZN11ANEHWDevice13setPowerStateEmP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_ExclavePreparePowerOff",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26ANE_ExclavePreparePowerOffEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice24DisableANEClocksAndPowerEb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "timeOutRequestTimerHandler",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26timeOutRequestTimerHandlerEP18IOTimerEventSource",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "StartPerformanceCounters",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Perf counters already enabled\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24StartPerformanceCountersEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "StopPerformanceCounters",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Perf counters already disabled\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23StopPerformanceCountersEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice24DisableANEClocksAndPowerEb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "DartMapSharedMemorySurface",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: dartMapMemoryDescriptorForProgram failed, error: 0x%x \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26DartMapSharedMemorySurfaceEP28ANESharedMemorySurfaceParamsP18ANEProgramResourceP10ANEProcess20ANEResourceUsageType",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "AllocateFwHeapMemorySurface",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: failed to allocate memory descriptor\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice27AllocateFwHeapMemorySurfaceEj",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice15mapFwCTRRRegionEv",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_processISPSurfaceMapRequest",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "\"ANE: Failed to remap ISP surface-id:0x%x\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "%s: %s: Remap request for surface-id:0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: No Memory\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: fPeerSharedMemorySurfaces is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ISP surface-id:0x%x had already been mapped, surface address: %p, size:0x%llx, dartMapBase:%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ISP surface-id:0x%x doesn't exist\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: remap for surface-id:0x%X from firmware shared malloc dart region failed, falling back to normal dart region\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Remap ISP memeory surface: Shared memory region mapped at DART translated address:%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: dartMapMemoryDescriptor failed to remap ISP surface-id:0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Failed to get ISP remap memory buffer memory descriptor for surface-id:0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Failed to remap ISP surface-id:0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Successfully remapped ISP surface. surface-id:0x%x, surface address:%p, size:0x%llx, dartMapBase:%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice31ANE_processISPSurfaceMapRequestEyyj",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice26processSharedMallocRequestEyyy",
                "__ZN11ANEHWDevice23aneInterruptHandlerPrivEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice19aneInterruptHandlerEP22IOInterruptEventSourcei"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "dumpAllSurfacesImpl",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "%s: %s: %4d: surface-id=0x%08X, size=0x%016llx, dartMapBase=0x%016llx, usage='%c%c%c%c', refCnt: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                }
            ],
            "symbol": "__ZN11ANEHWDevice15dumpAllSurfacesI28ANESharedMemorySurfaceParamsEEyP7OSArray",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "read64",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Performace with offset %x is not running\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZNK18ANERegisterControl6read64Ejb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "validate",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "\"ANEHWDevice::Failed to validate ANE register offset %x with value: %x\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "ANERegisterControl.cpp",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "%s: %s: ANEHWDevice::Failed to validate ANE register offset %x with value: %x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZNK18ANERegisterControl8validateEjjjib",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hw.memsize",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_sysctlbyname"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23initializeANEPropertiesEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANEDevicePropertyIsInternalBuild",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                },
                {
                    "string": "ANEDevicePropertyANEVersion",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                },
                {
                    "string": "ANEDevicePropertyANEMinorVersion",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                },
                {
                    "string": "ANEDevicePropertyANEHWBoardType",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                },
                {
                    "string": "ANEDevicePropertyANEHWBoardSubType",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                },
                {
                    "string": "ANEDevicePropertyANECPUSubType",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                },
                {
                    "string": "ANEDevicePropertyNumANECores",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                },
                {
                    "string": "ANEDevicePropertyTypeANEArchitectureTypeStr",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                }
            ],
            "symbol": "__ZN11ANEHWDevice33initializeANEPropertiesDictionaryEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice22initializeANESoCConfigEv",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "pmp-virt-notify",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_PE_parse_boot_argn"
                },
                {
                    "string": "ane-type",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_PE_parse_boot_argn"
                },
                {
                    "string": "initializeANESoCConfig",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_PE_parse_boot_argn"
                },
                {
                    "string": "aneType",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_PE_parse_boot_argn"
                },
                {
                    "string": "AppleT6030ANEHAL",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN9IOService12nameMatchingEPKcP12OSDictionary"
                },
                {
                    "string": "void ANEHWDevice::initializeANESoCConfig()",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "AppleT8132ANEHAL",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN9IOService12nameMatchingEPKcP12OSDictionary"
                },
                {
                    "string": "AppleT8140ANEHAL",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN9IOService12nameMatchingEPKcP12OSDictionary"
                },
                {
                    "string": "AppleT6031ANEHAL",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN9IOService12nameMatchingEPKcP12OSDictionary"
                },
                {
                    "string": "AppleT6041ANEHAL",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN9IOService12nameMatchingEPKcP12OSDictionary"
                },
                {
                    "string": "AppleT8310ANEHAL",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN9IOService12nameMatchingEPKcP12OSDictionary"
                },
                {
                    "string": "%s: %s: Invalid HW Type in EDT\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Boot-arg override of ANE type: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: aneHWBoardType: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANEMinorVersion: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d:%s: Couldn't create the thermal PTD entries.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE subtype updated to from 0 -> %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Chip not supported, HW Type: %x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: No valid ane-type in EDT and no boot-arg override, aborting init\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22initializeANESoCConfigEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "aneCpuLoadThrottleTimerHandler",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice30aneCpuLoadThrottleTimerHandlerEP18IOTimerEventSource",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "aneCpuLoadThrottleTimer_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: aneCpuLoadNotification is not received from FW or FW loadScore high for %d ms, lastReportedScore: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANECpuLoadThrottleTimerActive is set to false\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANEFirmwareCpuLoadScore: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: CSNE_CMD_CH_PROPERTY_WRITE for setting cpuLoadScore Low watermark failed result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Restarting the timer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice29aneCpuLoadThrottleTimer_gatedEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice30aneCpuLoadThrottleTimerHandlerEP18IOTimerEventSource",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_ScheduleWork_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fRegisteredDebugWorkProcessors->getCount() = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22ANE_ScheduleWork_gatedEP33ANEInDebugWorkProcessorRPCRequestb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_UnregisterDebugWorkProcessor_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Unregister work processor\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice38ANE_UnregisterDebugWorkProcessor_gatedEPyPv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice32ANE_UnregisterDebugWorkProcessorEPyPv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_ShowDebugWorkProcessorSurfaces",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: nWorkProcessorMappedSurfaces:\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:   %4d: surface-id=0x%08X, task: %p, refCount=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "%s: %s: DebugWorkProcessor: Total Number of ClientMappedSurfaces: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice34ANE_ShowDebugWorkProcessorSurfacesEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice37ANE_ShowSharedMemoryAllocations_gatedEb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "initializeInferenceRequestMemoryPool",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANEInferenceCallPropertyMemoryPoolSize=%llu totalMemPoolSize=%llu fANEInferenceTotalMemoryPoolSize=%llu blocksize=%llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Could not create IOSurface for DeviceMemoryManager buffer of size=%llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Premap of Inference Property buffer failed",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN18ANEFirmwareManager36initializeInferenceRequestMemoryPoolEyb",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice8ANE_InitEv",
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "sendPremapCmd",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: PremapBuffer Inference Request Memory Pool failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN18ANEFirmwareManager13sendPremapCmdE14eSnePreMapTypeyyj",
            "prototype": "",
            "backtrace": [
                "__ZN18ANEFirmwareManager36initializeInferenceRequestMemoryPoolEyb",
                "__ZN11ANEHWDevice8ANE_InitEv",
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "sendSetupCmd",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Setup cmd : %u failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN18ANEFirmwareManager12sendSetupCmdEjPjS0_",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "sendInferenceCmd",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: send Inference cmd property dva:%llx numsegs=%u %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Inference cmd failed:%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN18ANEFirmwareManager16sendInferenceCmdEP21sCSneCmdInferenceCallP29sCSneCmdInferenceCallPropertyP20sCSneSegmentPropertyjb",
            "prototype": "",
            "backtrace": [
                "__ZN20ANEProgramRTResource29programRTSendInferenceRequestEP21ANEProgramRequestArgsP15ANESharedEventsP37ANEProgramSendRequestAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "SHAREDMALLOC",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN11ANEHWDevice18channelNameToIndexEPcPj"
                },
                {
                    "string": "TERMINAL",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN11ANEHWDevice18channelNameToIndexEPcPj"
                },
                {
                    "string": "BUF_H2T",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN11ANEHWDevice18channelNameToIndexEPcPj"
                },
                {
                    "string": "BUF_T2H",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN11ANEHWDevice18channelNameToIndexEPcPj"
                },
                {
                    "string": "IO_T2H",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN11ANEHWDevice18channelNameToIndexEPcPj"
                },
                {
                    "string": "DEBUG",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN11ANEHWDevice18channelNameToIndexEPcPj"
                },
                {
                    "string": "DATA_CHAIN_H2T",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN11ANEHWDevice18channelNameToIndexEPcPj"
                },
                {
                    "string": "%s: %s: Writing 0 to rANE_SCRATCH7 to effect a Cold Boot\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Writing 1 to rANE_SCRATCH7 to effect a WARM Boot\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DEBUG: Chinook bootup sequence started bootaddress 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Chinook bootup, write to rANE_H11_CHINOOK_IO_RVBAR:0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: No wake signal from first rANE_SCRATCH7 ANECPU\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: No wake signal from first rANE_SCRATCH7(0x%x) ANECPU\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_IOSleep"
                },
                {
                    "string": "%s: %s: ANECPU IPC numIPCChannels=%d, ipcQueueSize=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Error: Too many IPC channels\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Could not create IOSurface for IPC Pipes\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: coredump: add region for IPC SharedMemory\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Overriding to Unit Test image...\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Firmware Unit Test Mode!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: FW App image...\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: FW Unittest image...\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Requested firmware heap size=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Could not allocate firmware heap. Size=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: coredump: addRegion for Extra Heap\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: cmd_buffer_base: 0x%llx, size: %llu \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Firmware Boot-Args\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Boot-Arg: %d: %u",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: No second int from ANECPU\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: No second int from ANECPU..Retrying power up, retries=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: No wake signal from second rANE_SCRATCH7(0x%x) ANECPU\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_IOSleep"
                },
                {
                    "string": "%s: %s: Got second int from ANECPU (channel description table ready)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Found channel %d in the channel table. Type=%d (%s), Source=%d, size: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Insufficient memory to initialize FFW infrastructure",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: No magic nubmer 1 from ANECPU\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: No wake signal from rANE_SCRATCH3(0x%x) ANECPU\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_IOSleep"
                },
                {
                    "string": "%s: %s: ANECPU Ready. About to enable ANE interrupts\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CSNE_CMD_PRINT_ENABLE command completed: res=0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CSNE_CMD_START command completed: res=0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CSNE_CMD_SET_SNE_PMU_BASE2 command to firmware, res=0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: CSNE_CMD_CH_PROPERTY_WRITE for Macho read only mapping for FW failed res=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: CSNE_CMD_RESOURCE_INFO_GET failed res=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fNumANEs: %d fANEMaxCacheRequestSharedEvents: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANEMaxCacheRequestSharedEvents is 0. Disable FW to FW cache request\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANEMaxCacheRequests: %u, fANEMaxCacheRequestsLowerLimit: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANEMaxGlobalWaitEvent: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: CSNE_CMD_RESOURCE_INFO_GET returned maxCacheRequests (%d) is less than driver size limit:%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fFWSupportsRTGraph: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: CSNE_CMD_RESOURCE_INFO_GET returned more procedures than what we can support max=%d, actual=%d res=0x%x. Limiting to max\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Disabling fEnableANECpuLoadThrottle as firmware doesn't support high priority channel\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fProcedureCallFWOptimization 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: CSNE_CMD_CH_PROPERTY_WRITE for FW sanity checks failed res=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: CSNE_CMD_CH_PROPERTY_WRITE for setting cpuLoadScore Low watermark failed res=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: CSNE_CMD_CH_PROPERTY_WRITE for setting cpuLoadScore High watermark failed res=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: CSNE_CMD_CH_PROPERTY_WRITE for setting ProcedureCall Firmware log failed res=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: CSNE_CMD_CH_PROPERTY_WRITE for setting FW perf mode failed res=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Registering with PerfControl with %u tokens\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: CSNE_CMD_ANE_DEFAULT_SETTING_SET for setting Ctx Switch Latency Threshold failed res=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: %s: CSNE_CMD_ANE_DEFAULT_SETTING_SET completed with the res=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: FW setup for RTGraph failed: %x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: %s: CSNE_CMD_INIT_SHARED_EVENT_INFO completed with the res=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fNumANEs: %d fSharedEventTableLimit: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Firmware Unit-Test mode!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE wakeup from sleep completed in %lld uS, res=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Performance: ANEHWDevice::FW powerOn in (%lld usec)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Statistics: ColdStarts: %llu, JetsamTriggeredColdStarts: %llu, Resumes: %llu, ResumesFailed: %llu, SuspendsSuccessful: %llu, SuspendsFailed: %llu FirmwareTimeouts: %llu ANEDeInits: %llu ANEInitFailures: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Work Stats:  WorkSubmit: %u WorkSubmitFailed: %u WorkBegin: %u WorkEnd: %u PendingRequests: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice8ANE_InitEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "PrintFwDebugInfo",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Attempting to dump ANECPU firmware debug logs\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice16PrintFwDebugInfoEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "processCommandResponse",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: messageANEAddress: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: commandANEAddress: 0x%llx not found in fOutstandingCommands\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22processCommandResponseEyyy",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice23aneInterruptHandlerPrivEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice19aneInterruptHandlerEP22IOInterruptEventSourcei"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "segment-ranges",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "mapFwCTRRRegion",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "IOReturn ANEHWDevice::mapFwCTRRRegion()",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Missing FW segments in EDT, #of segment in EDT: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: FW __TEXT segment phy: 0x%llx, virt: 0x%llx, remap: 0x%llx, size: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: FW __DATA segment phy: 0x%llx, virt: 0x%llx, remap: 0x%llx, size: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Creating IOMultiMemoryDescriptor failed!!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: couldn't prepare consolidated memory descriptor: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: AllocateHeapMemorySurface: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: AllocateHeapMemorySurface: physical start: 0x%llx, heap size: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: heapMemoryDescriptor iovmInsert failed: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: FWCTRRMemSurface - map() failed make fEnableFwReload false\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: heapMemoryDescriptor - map() failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fDartSharedMallocRegionSize: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fDartSharedMallocBaseAddress: 0x%llx, fDartSharedMallocRegionSize: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ANEHWDevice: mapFwCTRRRegion segment-ranges is not in the device tree\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice15mapFwCTRRRegionEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ReleaseFwHeapMemorySurface",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26ReleaseFwHeapMemorySurfaceEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_ctrrReloadFw",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: new FW size: 0x%x, current size: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANECPUFirmwareLoaded done\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice16ANE_ctrrReloadFwEP11IOMemoryMapjjP4task",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice22ANE_LoadFirmware_gatedEPvjjP4task",
                "__ZN11ANEHWDevice16ANE_LoadFirmwareEPvjjP4task"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "void *ANEHWDevice::aneAddressToHostAddress(uint64_t)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s: Error: ANE address 0x%llx invalid \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: aneAddressToHostAddress in FW region: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: aneAddressToHostAddress in FW heap region: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Error: ANE address 0x%llx invalid \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23aneAddressToHostAddressEy",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "static void ANEHWDevice::doorBellRing(void *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d:%s :ANEHWDevice::doorBellRing %d - We don't support more than %d doorbells currently\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice12doorBellRingEPv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice8ANE_InitEv",
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "FWSharedEventDoorbellRing",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZNK20IOSurfaceSharedEvent13getShmemIndexEv"
                },
                {
                    "string": "%s: %s: wait event idx: %lld type: %d value: %lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZNK20IOSurfaceSharedEvent13getShmemIndexEv"
                }
            ],
            "symbol": "__ZN11ANEHWDevice25FWSharedEventDoorbellRingEP10ANERequest",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "waitForFirmwareToQuiesce",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Waiting for firmware to quiesce. Timeout: %u ms.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Waiting for %u commands to complete on the ANE...\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Timeout out after waiting %u ms.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Awakened while waiting for commands to complete on the ANE. result=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to wait for pending commands. %u still outstanding.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Waiting for %u pending firmware requests to complete...\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZNK12ANEScheduler32pendingRequestsWithFirmwareCountERj"
                },
                {
                    "string": "%s: %s: Timed out after waiting %u ms for requests to complete on the ANE.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Awakened while waiting for pending requests to complete on the ANE. result=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to wait for pending requests. %u still pending.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZNK11ANEHWDevice24waitForFirmwareToQuiesceEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice22setPowerStateGatedPrivEmP9IOService",
                "__ZN11ANEHWDevice18setPowerStateGatedEmP9IOService",
                "__ZN11ANEHWDevice13setPowerStateEmP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_SaveState_block_invoke",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN:: clientname:%s is keeping programs loaded and not freeing - isPowered: %d Programs Open:%d Wired-memory: %lld B\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice13ANE_SaveStateEv_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice13ANE_SaveStateEv",
                "__ZN11ANEHWDevice22setPowerStateGatedPrivEmP9IOService",
                "__ZN11ANEHWDevice18setPowerStateGatedEmP9IOService",
                "__ZN11ANEHWDevice13setPowerStateEmP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_RestoreState_block_invoke",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Client ptr:%p went away before restoring from sleep for programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice16ANE_RestoreStateEv_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice16ANE_RestoreStateEv",
                "__ZN11ANEHWDevice8ANE_InitEv",
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "drainIOProcessorChannelMessageQueues",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Received %u messages on channel %s after Suspend is completed",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_IOProcessorChannelUnidirectionalReceive"
                }
            ],
            "symbol": "__ZN11ANEHWDevice36drainIOProcessorChannelMessageQueuesEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "aneCmdSend",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to cancel command: result=0x%x cancelResult=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice10aneCmdSendERK18ANEFirmwareCommand",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "processFWResetNotification",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: resetNotification->pendingProcessIdCnt = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: pendingProcessId[%d] = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26processFWResetNotificationEP25sCSneCmdChResetNotication",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice28processTargetToHostIOCommandEyyy",
                "__ZN11ANEHWDevice23aneInterruptHandlerPrivEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice19aneInterruptHandlerEP22IOInterruptEventSourcei"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ffw_calloc",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "\"%s :ANEHWDevice: ffw_calloc failed. Size not supported as it is not size of sIOProcessorChannelDescriptor size=%d, count=%d\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "void *ffw_calloc(size_t, size_t)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "[ERROR] %s: %s: ffw_calloc failed size=%d, count=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZL10ffw_callocmm",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice8ANE_InitEv",
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"%s :ANEHWDevice: ffw_free failed. Size not supported as it is not a multiple of sIOProcessorChannelDescriptor size=%zu struct size=%zu, count=%zu\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "void ffw_free(void *, size_t)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "__ZL8ffw_freePvm",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice8ANE_InitEv",
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "user_error @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "ZinAssert.cpp",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "__Z13ZinAssertImplPKcz",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ZinComputeProgramStatus ZinComputeProgramGetComputeProgramType(const void *const, size_t, size_t, ZinComputeProgramType &)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z38ZinComputeProgramGetComputeProgramTypePKvmmR21ZinComputeProgramType",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ZinComputeProgramStatus ZinComputeProgramGetSectionBasicInfo(const void *const, size_t, size_t, ZinComputeProgramBasicInfoOfSections **)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z36ZinComputeProgramGetSectionBasicInfoPKvmmPP36ZinComputeProgramBasicInfoOfSections",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "Out of range procedure index",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__Z13ZinAssertImplPKcz"
                },
                {
                    "string": "%s: illegal params, NULL",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "FindMatchingMutableKernelSection called for non-mutable procedure %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "FindMatchingMutableKernelSection internal error for %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Bad kernel section data for mutable kernel section. (proc=%d, addr=0x%llx)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z40ZinComputeProgramGetMutableProcedureInfoP17ZinComputeProgramjP37ZinComputeProgramMutableProcedureInfo",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource34populateProcedureMutableKernelInfoEP26ANEProgramCreateArgsOutputj",
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramStatus ZinComputeProgramHasMutableOperation(ZinComputeProgram *, bool *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z36ZinComputeProgramHasMutableOperationP17ZinComputeProgramPb",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource10preProcessEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParamsP26ANEProgramCreateArgsOutput",
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramStatus ZinComputeProgramHasMutableProcedure(ZinComputeProgram *, ZinComputeProgramProcedure *, bool *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z36ZinComputeProgramHasMutableProcedureP17ZinComputeProgramP26ZinComputeProgramProcedurePb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramStatus ZinComputeProgramHasCompressedIOProcedure(ZinComputeProgram *, ZinComputeProgramProcedure *, bool *, bool *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z41ZinComputeProgramHasCompressedIOProcedureP17ZinComputeProgramP26ZinComputeProgramProcedurePbS3_",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource26populateProcedureBasicInfoEP26ANEProgramCreateArgsOutputjRyS2_S2_",
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramStatus ZinComputeProgramHasMultiPlaneIOProcedure(ZinComputeProgram *, ZinComputeProgramProcedure *, bool *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z41ZinComputeProgramHasMultiPlaneIOProcedureP17ZinComputeProgramP26ZinComputeProgramProcedurePb",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource26populateProcedureBasicInfoEP26ANEProgramCreateArgsOutputjRyS2_S2_",
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramGetNumberOfKernelSections",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: The program %p is a nullptr",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z42ZinComputeProgramGetNumberOfKernelSectionsPK17ZinComputeProgramRm",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource23initSplitKernelSectionsEP26ANEProgramCreateArgsOutputP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams",
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramIsKernelSection",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: The section %p is a nullptr",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z32ZinComputeProgramIsKernelSectionPK21ComputeProgramSection",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramGetKernelSectionInfo",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Either the program %p or info %p is a nullptr",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z37ZinComputeProgramGetKernelSectionInfoPK17ZinComputeProgrammP27ZinComputeKernelSectionInfo",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource23initSplitKernelSectionsEP26ANEProgramCreateArgsOutputP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams",
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramGetKernelSectionInfoForProcedure",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Either the procedure %p or info %p is a nullptr",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "section corresponding to kernel number %zu not found for procedure %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Invalid kernel section index %zu is given for prodecure %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z49ZinComputeProgramGetKernelSectionInfoForProcedurePK26ZinComputeProgramProceduremP27ZinComputeKernelSectionInfo",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource32populateProcedureSplitKernelInfoEj",
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramGetOperationsToBeScheduledNext",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z47ZinComputeProgramGetOperationsToBeScheduledNextPK18ProcedureOperationPPS_Rm",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramStatus ZinComputeAllocateProcedureOperationFVMLibArray(size_t, ZinComputeProcedureOperation ***, size_t, ZinComputeProgramFvmlib ***)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Parse error: compute_thread_command",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Allocation error: ZinComputeProgramMakeAneProcedures",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal 'proc_operation_count', no proc operations",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal 'proc_fvmlib_count', no fvmlibs",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Unable to parse all inputs/outputs for all procedures: ",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   proc_fvmlib_idx=%.4zu    proc_fvmlib_count=%.4zu",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   proc_operation_idx=%.4zu    proc_operation_count=%.4zu",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal 'procedures' parameter",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal 'procedure_count' parameter = %zu",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal (null) 'proc_operations'",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZL31ZinComputeProgramMakeProceduresP17ZinComputeProgram",
            "prototype": "",
            "backtrace": [
                "__Z35ZinComputeProgramMakeWithMappedSizePKvmmPP17ZinComputeProgram"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramStatus ZinComputeProgramGetProcedureLogEvents(const ZinComputeProgram *, ZinComputeProgramProcedure *, uint64_t *, uint64_t *, uint64_t *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Binary should have proper debug_log_event, log_event and dram_log_event counts ",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal ane thread",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Buffer overrun while parsing thread args",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z35ZinComputeProgramGetProcedureEventsP17ZinComputeProgramP26ZinComputeProgramProcedurePyS3_S3_",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource26populateProcedureBasicInfoEP26ANEProgramCreateArgsOutputjRyS2_S2_",
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "CollectKernelSectionsForProcedure",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: The procedure %p is a nullptr",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZL33CollectKernelSectionsForProcedurePK26ZinComputeProgramProcedurePP21ComputeProgramSectionRm",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "bool ANEEvent::verifyDependencyMask(const char *) const",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ANE][ERROR] %s : %s : %u : %s: !!!! Dependency Mask mismatch !!! expectedMask = 0x%llX ; currentMask = 0x%llX\n\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ANE][ERROR] %s : %s : %u : Slot: %d ; source = %d ; value = %d\n\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZNK8ANEEvent20verifyDependencyMaskEPKc",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "isEqual",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: Event is missing dependencies:",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: Event has extra dependencies:",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: Channel %02u: %u",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN8ANEEvent7isEqualEjPK13ANEDependency",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinRtCommandIterator::CommandValue ZinRtDeserializeUtil::ZinRtCommandIterator::NextValue()",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ZinRtDeserializeUtil20ZinRtCommandIterator9NextValueEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "uint32_t ZinRtDeserializeUtil::ZinRtCommandIterator::SizeInWords() const",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZNK20ZinRtDeserializeUtil20ZinRtCommandIterator11SizeInWordsEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "uint32_t ZinRtDeserializeUtil::ZinRtCommandIterator::NumberOfRegistersSpecified() const",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZNK20ZinRtDeserializeUtil20ZinRtCommandIterator26NumberOfRegistersSpecifiedEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "uint32_t ZinRtDeserializeUtil::ZinRtCommandIterator::FieldNumber() const",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZNK20ZinRtDeserializeUtil20ZinRtCommandIterator11FieldNumberEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramStatus RtDeserializeParseOperationGraph(ZinComputeProgramRT *, const std::span<const uint32_t> &, uint32_t, uint32_t, RtOperationGraph *&, uint32_t &)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "auto RtDeserializeParseBlockNode(ZinComputeProgramRT *, RtOperationGraph *, const std::span<const uint32_t> &, uint32_t)::(anonymous class)::operator()(uint32_t) const",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Could not find section associated with buffer bind",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Conditional nodes are not supported\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Operation nodes should not be handled in this code path",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Loop nodes are not supported\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Multiple conflicting opcodes for the same operation",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Runtime opcode missing",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Out of memory when allocating procedure",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Failed to allocate operation graph node",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Failed to allocate storage for operation",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: node node/subnode size mismatch",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZL32RtDeserializeParseOperationGraphP19ZinComputeProgramRTRKNSt3__14spanIKjLm18446744073709551615EEEjjRP16RtOperationGraphRj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 3,
            "anchors": [
                {
                    "string": "ZinComputeProgramStatus ZinComputeProgramGetANETDThreadStateArgumentSize(const ident_command *, bool, const ane_thread_state_64 *const, const void *, const void *, uint32_t &)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z48ZinComputeProgramGetANETDThreadStateArgumentSizePK13ident_commandbPK19ane_thread_state_64PKvS6_Rj",
            "prototype": "",
            "backtrace": [
                "__Z40ZinComputeProgramGetANETDThreadStateSizePK13ident_commandbPK19ane_thread_state_64PKvS6_Rj"
            ]
        },
        {
            "args": 3,
            "anchors": [
                {
                    "string": "ZinComputeProgramStatus ZinComputeProgramGetANESegThreadStateArgumentSize(const ident_command *, bool, const ane_seg_thread_state_64 *const, const void *, const void *, uint32_t &)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z49ZinComputeProgramGetANESegThreadStateArgumentSizePK13ident_commandbPK23ane_seg_thread_state_64PKvS6_Rj",
            "prototype": "",
            "backtrace": [
                "__Z41ZinComputeProgramGetANESegThreadStateSizePK13ident_commandbPK23ane_seg_thread_state_64PKvS6_Rj",
                "_ZinComputeProgramGetProcedureNameFromThread"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramStatus ZinComputeProgramSupportsFeature(const ident_command *const, const char *, bool &)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Empty ident_command.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z32ZinComputeProgramSupportsFeaturePK13ident_commandPKcRb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramStatus ZinComputeProgramGetThreadArgumentSize(uint32_t, const char *, const void *, const void *, uint32_t &)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: thread argument buffer overrun",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZL38ZinComputeProgramGetThreadArgumentSizejPKcPKvS2_Rj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"__next_prime overflow\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "ANECollectionHelper.cpp",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "__ZNSt3__112__next_primeEm.cold.1",
            "prototype": "",
            "backtrace": [
                "__ZNSt3__112__next_primeEm"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ProgramReMap",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programHandle=0x%llx onlyWire = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: waitForPendingUpdate failed for programHandle=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: wireResources failed status=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: dartMapResources failed status=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN18ANEProgramResource12ProgramReMapEPS_12ANEResidencyb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "__INIT",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strncmp"
                },
                {
                    "string": "%s: %s: ERROR: programSize (%lu) from ANEF not matched with vnodeFileSize (%lu)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: memory allocation for directIO failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: vnode cache read failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: model signature check failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: cannot read macho header and commands result: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Client program size : %llu maxMapSize: %u minMapSize %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Failed to allocate huge kernel memory\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: directIO failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Model verification passed - isPrecompiledModel: %d isModelVerifiedBySignatureCheck: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: clientProgramAddress: 0x%llx programAddress: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: %s %s filesize: 0x%llx fileoffset: 0%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to create textSectionBuffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to map mutableInitSectionBuffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Couldn't mutable section buffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: unidentified segment (%s) or section (%s) offset: 0x%x size: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: failed to wire kernel section buffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: failed to wire text section buffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN18ANEProgramResource23ANE_ProgramInitialSetupEP11ANEHWDeviceP20ANEProgramCreateArgsP26ANEProgramCreateArgsOutputP32ANEProgramCreateAdditionalParams",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice17ANE_ProgramCreateEP20ANEProgramCreateArgsP26ANEProgramCreateArgsOutputP4taskPvPy"
            ]
        },
        {
            "args": 2,
            "anchors": [
                {
                    "string": "ZinComputeProgramRTGetANEOperationsDescription",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ANEProgramRTResource9getNextOpEjjRy",
            "prototype": "",
            "backtrace": [
                "__ZN20ANEProgramRTResource29programRTSendInferenceRequestEP21ANEProgramRequestArgsP15ANESharedEventsP37ANEProgramSendRequestAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeProgramRTGetRuntimeOperationOpcode",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ZinComputeProgramRTGetJoinedOperationCount",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Num Proc families %zu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Num Proc variants in family[%u] %s is %zu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Num procs returned %zu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANEOpGraphTraverser initialized\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Num iobinds %zu param-binds %zu buffer-binds %zu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: IObind type %zu %s %u %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Buffer bind id=%zu size=%llu fileoffset=%llu buffer_offset=%llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: num allocs %zu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Mapped kernelSectionBuffer %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Split kernelSectionBuffer already allocated at offset %llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Procedure: %u Kernel split section [%u] DART map failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Mapped Split kernelSectionBuffer=%p count=%u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  %s filesize: 0x%llx fileoffset: 0%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: failed to wire %s section buffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE op mode proc variant type %hhu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ANEProgramRTResource36traverseProcedureGraphAndPopulateIOsIZNS_24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParamsE3$_0EEbP26ANEProgramCreateArgsOutputT_",
            "prototype": "",
            "backtrace": [
                "__ZN20ANEProgramRTResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "incrementUseCount",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16ANEUnionResource17incrementUseCountEh",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "bad_weak_ptr was thrown in -fno-exceptions mode",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZNSt3__122__libcpp_verbose_abortEPKcz"
                }
            ],
            "symbol": "__ZNSt3__120__throw_bad_weak_ptrB8fn200100Ev",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "dartUnmap",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEResource9dartUnmapE12ANEResidency",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "asyncWire_block_invoke",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Running async wiring programHandle: 0x%llx resourceId: 0x%llx usageType: %u barID: %u size: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ANEResource memory wire failed. result 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: Async wiring request cancelled. Wiring skipped!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEResource9asyncWireEjj_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEResource9asyncWireEjj"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "releaseResources",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Skip release of memoryDescriptor. Will be cleaned up by asyncWiring thread\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEResource16releaseResourcesEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IOSurfaceWidth",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "IOSurfaceHeight",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "IOSurfaceBytesPerRow",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "IOSurfaceAllocateFromSuperbuffer",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "IOSurfacePixelFormat",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "IOSurfaceCacheMode",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "IOSurfaceNonPurgeable",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "IOSurfaceIsPrivate",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "IOSurfaceUseReserve",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "ANE: Allocated Shared Memory Surface:  LOG",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "ANE: Allocated Shared Memory Surface: CCMD",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "ANE: Allocated Shared Memory Surface: HEAP",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "ANE: Allocated Shared Memory Surface: INTM",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "ANE: Allocated Driver Memory Surface: INTM",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "ANE: Allocated Shared Memory Surface: MISC",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "ANE: Allocated Shared Memory Surface: PROC",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "ANE: Allocated Shared Memory Surface: PROG",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "ANE: Allocated Shared Memory Surface: RPCC",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "ANE: Allocated Shared Memory Surface: TBUF",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "ANE: Allocated Shared Memory Surface: MUTK",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "ANE: Allocated Firmware Memory Surface: INHP",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "ANE: Allocated Shared Memory Surface:     ",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSString11withCStringEPKc"
                },
                {
                    "string": "createANESurface",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "IOSurfaceName",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN9IOSurface8setValueEPKcPK15OSMetaClassBasePj"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to allocate surface\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice16createANESurfaceEyjybbbP4task",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "__data",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: preProcess failed result: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: computeProgram: %p, version: %lld, procedure_count: %zu \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: failed to allocate memory\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: dartMap kernelSectionBuffer failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: dartMap textSectionBuffer failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DEBUG: Zin loader genericSectionSize=%ld operationSectionSize=%ld procedureSectionSize=%lu tdPropSectionSize=%lu \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: dartMap ProgramAdditionalParamsBuffer failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ZinComputeInitSneProgram failed with return:%d \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: update kernel dva from 0x%llx to 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: update text dva from 0x%llx to 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ZinComputeInitGenericSection failed with return:%d \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ZinComputeInitOperationSection failed with return:%d \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ZinComputeInitProcedureSection failed with return:%d \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ZinComputeInitTextPropertySection failed with return:%d \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: number of procedure(%d) in the program exceeds max number(%d) supported\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: procedure id: %d HasCircularInput: %d, HasCircularOutput: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: nbrOfCustomBars overflowed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Not enough bar info in firmware struct, numofRelocations: %u numCircularBuffer: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Circular Buffer is not supportted in this platformm, AENHWType: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: Intermediate buffer size is zero \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Input size is zero in macho \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Machos with built-in input data are not supported\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Output size is zero in macho \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Machos with built-in output data are not supported\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Program parse/load status:%u programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DEBUG: aotCacheUrlIdentifier is provided %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DEBUG: programLoadCommand valid=%d bufferIndex=%d type=%d size=%llu buffer=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: AOT kernel section is not valid\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to find AOT program buffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Powered down while waiting for program load to complete on ANE!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Error executing LOAD_PROGRAM command. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Powered down while waiting for process create to complete on ANE!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Client went away in the middle of process creation\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DEBUG: Program created programId: %d processId: %d programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: done program Create: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "setupProgramMCache",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "IOReturn ANEProgramLegacyResource::setupProgramMCache(ANEProgramCreateArgsOutput *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: MCachePrefetchInformation mcacheProdIntermediateSize:0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s ZinComputeProgramGetMCachePrefetchInformation failed with 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: MCachePrefetchInformation dsid size:0x%x, dsid offset:0x%x, totProcedures:%d, programOutput:%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: MCachePrefetchInformation mcacheProdInfoSize:0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ZinComputeProgramGetMCachePrefetchInformation failed with 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: procedure: %d, prefetch mcache size: 0x%llx, numDsid: %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: MCachePrefetchInformation,bar_id_: %d,  mcachePrefetchSize: %llx, numDsid:%d \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: procedure: %d, intermediate high mcache size: 0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s fANECore->fAneMcacheClient is NULL",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: procedure: %d, intermediate low mcache size: 0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: fANECore->fAneMcacheClient is NULL",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: prgoramInfo: %p,procId: %d numDSID: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24ANEProgramLegacyResource18setupProgramMCacheEP26ANEProgramCreateArgsOutput",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "__bss",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strncmp"
                },
                {
                    "string": "%s: %s: IO Index for proc%d op%d IO symbol %s is %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: IO Index for ProcId: %u op_idx: %zu IO symbol %s is %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ProcID: %u op_idx: %zu StateIO: %s not found in procedure input\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Matched live param--adding as input %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ProcID: %u op_idx: %zu LiveInParam: %s not found in procedure input\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programOutput->procedures[procId].numOperationsPerLiveInParam=%d programOutput->procedures[procId].liveInParamBarId[sneop_idx]= %d computeProgram->procedures[procId].operations[op_idx]->sne.thread->bar_cmd.bar_type=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ProcID: %u op_idx: %zu name_offset invalid\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Populating live param values for proc %d, sneop_idx: %d isLiveParamReloc=%d, IOIndex=%d, liveInParamIndex=%d liveInParamType=%d liveInParamStride=%lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN:Unexpected function for live offset param\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Invalid live in param values for ProcId: %d sneop_idx: %u IOIndex=%d liveInParamIndex=%d liveInParamType=%d liveInParamStride=%llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24ANEProgramLegacyResource29populateProcedureLiveInParamsEP26ANEProgramCreateArgsOutputj",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IOSurfaceIsGlobal",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN13IOSurfaceRoot13createSurfaceEP4taskP12OSDictionary"
                },
                {
                    "string": "%s: %s: ANEProgramResource::Debug Info Section Size:%u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANE%d: :ANEProgramResource::AllocateStatsMetaDataSurface failed to allocate memory surface\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24ANEProgramLegacyResource22initStatsBufferSectionEP26ANEProgramCreateArgsOutputP4task",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IOReturn ANEProgramLegacyResource::populateNonBindIOs(ANEProgramCreateArgsOutput *, ANEProgramBindingInfo *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: failed, segment is NULL!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEHWDevice: failed, cur_section is NULL!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE%d:DEBUG: %d legacy output: %u symbol:%s, size:%u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANE%d:ANEHWDevice: Number of output buffers exceeds max supported actual=%d, max=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE%d:DEBUG: %d legacy input: %u symbol:%s, size:%u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s : ANEHWDevice: Number of input buffers exceeds max supported actual=%d, max=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24ANEProgramLegacyResource18populateNonBindIOsEP26ANEProgramCreateArgsOutputP21ANEProgramBindingInfo",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "proc%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_snprintf"
                },
                {
                    "string": "ANE%d: %s :Macho call ZinComputeProgramGetProcedureEvents failed with error code: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s : Cannot run macho with dram log events only. Please rebuild macho without --enable-dram-log-events-only option.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s : Executing macho with dram log events only. Note that execution might fail with timeout due to absence of normal log events.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :Macho call ZinComputeProgramHasCompressedIOProcedure failed with error code: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE%d: :ZinComputeProgramHasCompressedIOProcedure, procedure id: %d HasCompressedInput: %d, HasCompressedOutput: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :Input Compression not Supported\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :Output Compression not Supported in this Platform\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :Macho call ZinComputeProgramHasMultiPlaneInputProcedure failed with error code: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE%d: :ZinComputeProgramHasMultiPlaneInputProcedure, procedure id: %d flag: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :Multiplane Input is not supportted in this platform\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE%d::Macho call Procedure %d mutable flag:: %d, tDcount: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24ANEProgramLegacyResource26populateProcedureBasicInfoEP26ANEProgramCreateArgsOutputjRyS2_S2_",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "moveResourcesFrom",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: collection passed in moveResourcesFrom() is nullptr\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN21ANEResourceCollection17moveResourcesFromERNSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ANEHintClientSessionInProgress",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "ANEHintClientSessionStart",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "ANEHintClientSessionStop",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "ANEHintClientSessionAbort",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "ANEHintClientSessionInfo",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "ANEClientProgramHandle",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "ANEClientModelAssetPath",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN11ANEHWDevice13setClientHintEP13ANEClientHint"
                },
                {
                    "string": "virtual IOReturn ANEClientHintsUserClient::setProperties(OSObject *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEClientTotalPages",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSNumber10withNumberEyj"
                },
                {
                    "string": "ANEClientResidentPages",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "got kANEHintClientSessionStart!! %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "got kANEHintClientSessionStop!! %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "got kANEHintClientSessionAbort!! %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "got kANEHintClientSessionInfo!! %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Program handle (0x%llx) is present in the hint",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "WARN: skip hint, no value for kANEHintClientProgramHandle or kANEHintClientModelAssetPath\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s : Unable to set client hint result = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s totalPagesNeedWired: %lld residentPages: %lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24ANEClientHintsUserClient13setPropertiesEP8OSObject",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "com.apple.private.ane.allow-set-client-hints",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN12IOUserClient21copyClientEntitlementEP4taskPKc"
                },
                {
                    "string": "com.apple.private.ane.allow-share-coalition-hints",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN12IOUserClient21copyClientEntitlementEP4taskPKc"
                },
                {
                    "string": "virtual IOReturn ANEClientHints::newUserClient(task_t, void *, UInt32, IOUserClient **)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "shared coalition entitlement is present for this client allowProcessCoalitionClientHints=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Assigning UC the privilege to share hints amongst a coalition fAllowProcessCoalitionClientHints=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s : Client has no privilege to create user client for ANE client hints \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN14ANEClientHints13newUserClientEP4taskPvjPP12IOUserClient",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "setClientHint_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "OSBoolean",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "hint succeeded",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "WARN hint failed",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: client: %p not found, or is closed in the middle of hint processing\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Processing client hint %d from client %s hintValueType:%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Handling power state checks programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ANE power assertion failed, not acting on the signal\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Info: ANE is already off.. Retry power ON for client(%s)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Power check failed for client (%s)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: program cleaned up in the middle of hint processing\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Program is to be scheduled as energy efficient\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Calling ProgramReMap for kANEClientHintTypeSessionStart\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Calling ProcessRemap for kANEClientHintTypeSessionStart\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Processing kANEClientHintTypeSessionAbort\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Calling ProgramAbort for kANEClientHintTypeSessionAbort\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Calling ProcessAbort for kANEClientHintTypeSessionAbort\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Processing kANEClientHintTypeSessionStop\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Calling ProgramPartialUnwire for kANEClientHintTypeSessionStop\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: program has pendingRequestCreate: %u, skipping programUnload programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: program has pending requests, skipping programUnload programHandle: 0x%llx pendingRequestsCount: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Calling ProcessPartialUnwire for kANEClientHintTypeSessionStop\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Hint Type unsupported\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: None of the clients have session in progress, powering off ANE\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Forcing driver initiated sleep in setClientHint call\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Driver initiated sleep failed. result = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: Client %s doesn't have programs open, but setting the hint so that programs loaded in the future will be considered \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: %s: hintType: %d res=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice19setClientHint_gatedEP13ANEClientHint",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice13setClientHintEP13ANEClientHint_block_invoke",
                "__ZN11ANEHWDevice13setClientHintEP13ANEClientHint"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "enqueueActionBlock",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Skip enqueueActionBlock fSleepInProgress: %d fDriverInitiatedSleep: %d fSystemInitiatedSleep: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice18enqueueActionBlockEU13block_pointerFvvENSt3__110shared_ptrI11ANEResourceEEPP16ActionBlockEntry",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "waitForActionQueueEmpty",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZNK11ANEHWDevice12commandSleepEPvj"
                },
                {
                    "string": "%s: %s: One second sleep timed out wating for wiring queue to be empty. Retries=%u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZNK11ANEHWDevice12commandSleepEPvj"
                },
                {
                    "string": "%s: %s: Wiring queue empty. Moving ahead with sleep\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Timed out waiting for wiring queue to be empty. Exhausted all retries!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23waitForActionQueueEmptyEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "isFenceAlreadyCreatedForSurface",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZNK10ANERequest31isFenceAlreadyCreatedForSurfaceEP9IOSurface",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "buildFirmwareSignalEvents",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: sneSignalEvents is nullptr\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN10ANERequest25buildFirmwareSignalEventsEP17sCSneSharedEventsRj",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice38buildFirmwareProcedureCallCacheRequestEP10ANERequest",
                "__ZN11ANEHWDevice20buildFirmwareRequestER10ANERequest",
                "__ZN11ANEHWDevice40ANE_ProgramPrepareAndSubmitRequest_gatedEP21ANEProgramRequestArgsP15ANESharedEventsP37ANEProgramSendRequestAdditionalParams",
                "__ZN11ANEHWDevice28ANE_ProgramSendRequest_gatedEP21ANEProgramRequestArgsP15ANESharedEventsP37ANEProgramSendRequestAdditionalParams",
                "____ZN11ANEHWDevice22ANE_ProgramSendRequestEP21ANEProgramRequestArgsPyPvbP18ANEReqCallbackDataP4taskP15ANESharedEvents_block_invoke_2",
                "__ZN11ANEHWDevice22ANE_ProgramSendRequestEP21ANEProgramRequestArgsPyPvbP18ANEReqCallbackDataP4taskP15ANESharedEvents"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "buildFirmwareWaitEvents",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: sneWaitEvents is nullptr\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN10ANERequest23buildFirmwareWaitEventsEP17sCSneSharedEventsRj",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice38buildFirmwareProcedureCallCacheRequestEP10ANERequest",
                "__ZN11ANEHWDevice20buildFirmwareRequestER10ANERequest",
                "__ZN11ANEHWDevice40ANE_ProgramPrepareAndSubmitRequest_gatedEP21ANEProgramRequestArgsP15ANESharedEventsP37ANEProgramSendRequestAdditionalParams",
                "__ZN11ANEHWDevice28ANE_ProgramSendRequest_gatedEP21ANEProgramRequestArgsP15ANESharedEventsP37ANEProgramSendRequestAdditionalParams",
                "____ZN11ANEHWDevice22ANE_ProgramSendRequestEP21ANEProgramRequestArgsPyPvbP18ANEReqCallbackDataP4taskP15ANESharedEvents_block_invoke_2",
                "__ZN11ANEHWDevice22ANE_ProgramSendRequestEP21ANEProgramRequestArgsPyPvbP18ANEReqCallbackDataP4taskP15ANESharedEvents"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "freeSharedEvents",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN10ANERequest16freeSharedEventsEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "static ZinComputeProgramStatus DeCxt::CreateWeightArrayFromWeightFileNamesAndBufferList(ZinIrDeserializer &, uint32_t, uint32_t, uint32_t, const ANECMutableWeightFileData *, uint64_t, ANECMutableWeight *&, uint32_t &)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Wrong size weight buffer supplied for patching. symbol=%s expected_bytes=%lu supplied=%lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: mutable weight symbol not found: %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN5DeCxt49CreateWeightArrayFromWeightFileNamesAndBufferListER17ZinIrDeserializerjjjPK25ANECMutableWeightFileDatayRP17ANECMutableWeightRj",
            "prototype": "",
            "backtrace": [
                "_ZinComputeProgramUpdateMutablesWithSymbolicWeights"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "Weight File Symbols for Procedure %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "  Weight File \"%s\" index=%d size=%lld\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "  Weight File \"%s\" index=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                }
            ],
            "symbol": "__ZN6Dumper29DumpWeightSymbolListWithSizesEjj",
            "prototype": "",
            "backtrace": [
                "_ZinComputeProgramDumpMutableInitInfo"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "header.version = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "header.cpu_type = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "header.cpu_subtype = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "header.procedure_count = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                }
            ],
            "symbol": "__ZN6Dumper10DumpHeaderERyRj",
            "prototype": "",
            "backtrace": [
                "_ZinComputeProgramDumpMutableInitInfo"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: file.index=%d (%s) file.offset=%d file.size=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "no sym",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                }
            ],
            "symbol": "__ZN6Dumper12DumpFileInfoEPKc",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%08llx %08llx %08llx %08llx\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "%08llx ",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN6Dumper9DumpHex64EPKyy",
            "prototype": "",
            "backtrace": [
                "__ZN6Dumper13DumpTransformEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "has_v1 = %d, has_v2 = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                }
            ],
            "symbol": "__ZN6Dumper14DumpTwoVectorsEv",
            "prototype": "",
            "backtrace": [
                "__ZN6Dumper13DumpTransformEv"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%f %f %f %f\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                }
            ],
            "symbol": "__ZN6Dumper9DumpFloatEPKfy",
            "prototype": "",
            "backtrace": [
                "__ZN6Dumper10DumpVectorEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "TransformCode::Remap: (n=%d,c=%d,h=%d,w=%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "TransformCode::Shuffle: (order_size=%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "TransformCode::WeightShuffle: (order_size=%d,NewDims:KCRSD=(%d,%d,%d,%d,%d))\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "Old Dim Locations:\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "%d,%d,%d,%d,%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "TransformCode::WeightAlias: dims(k=%d,c=%d,r=%d,s=%d,d=%d) strides(k=%d,c=%d,r=%d,s=%d,d=%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "TransformCode::Partial: (count=%d,offset=%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "TransformCode::EWMultiply:\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "TransformCode::FoldBiasWithBotScaleBotBias:\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "TransformCode::FoldBotBiasWithBotScaleBias:\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "TransformCode::FoldBotScaleWithBotBiasBias:\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "TransformCode::DeconvLayout: origin(k=%d,c=%d,r=%d,s=%d,d=%d) strides(k=%d,c=%d,r=%d,s=%d,d=%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "bool Dumper::DumpTransform()",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN6Dumper13DumpTransformEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "VectorCode::Mutable:\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "VectorCode::Mutable file",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper12DumpFileInfoEPKc"
                },
                {
                    "string": "VectorCode::NonMutableScalar: (value=%f)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "VectorCode::NonMutableNonScalar: (count=%lld)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "bool Dumper::DumpVector()",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN6Dumper10DumpVectorEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "weight_offset: %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "subchannel size:  s=%d r=%d d=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "stride_bits=%02x, ostride_bits=%02x, pad_bits=%02x\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                }
            ],
            "symbol": "__ZN6Dumper27DumpWeightRasterizationInfoEv",
            "prototype": "",
            "backtrace": [
                "__ZN6Dumper15DumpOneInitItemEj",
                "__ZN6Dumper12DumpInitInfoEj",
                "_ZinComputeProgramDumpMutableInitInfo"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "item transform info:\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "  has_scale = %d, has_bias = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "  scale_xform_count = %d, bias_xform_count = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "  has_weight = %d, weight_xform_count = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "scale transform list index : %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN17ZinIrDeserializer10ReadUint16ERt"
                },
                {
                    "string": "bias transform list index : %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN17ZinIrDeserializer10ReadUint16ERt"
                },
                {
                    "string": "weight transform list index : %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN17ZinIrDeserializer10ReadUint16ERt"
                },
                {
                    "string": "raster(exp_factor=%d, ne_count=%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "symbolic ne_offset=0x%0llx %s+0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN17ZinIrDeserializer10ReadUint64ERy"
                },
                {
                    "string": "symbolic ne_offset=0x%0llx %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "raster(ne_offset=0x%x, ocg_count=%d, pal_offset=%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN17ZinIrDeserializer10ReadUint64ERy"
                },
                {
                    "string": "raster(ne_offset=0x%x, ocg_count=%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN17ZinIrDeserializer10ReadUint64ERy"
                },
                {
                    "string": "scale_offset=%d,bias_offset=%d,first_channel=%d,nrof_output_channels=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN17ZinIrDeserializer10ReadUint64ERy"
                }
            ],
            "symbol": "__ZN6Dumper15DumpOneInitItemEj",
            "prototype": "",
            "backtrace": [
                "__ZN6Dumper12DumpInitInfoEj",
                "_ZinComputeProgramDumpMutableInitInfo"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "has_scale = %d, has_bias = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "has_weight = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "Scale",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper12DumpFileInfoEPKc"
                },
                {
                    "string": "Weight",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper12DumpFileInfoEPKc"
                },
                {
                    "string": "WeightFormat: %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "WeightDims: KCRSD=(%d,%d,%d,%d,%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "Palette",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper12DumpFileInfoEPKc"
                },
                {
                    "string": "Transform(%d): InitInfo offset=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN17ZinIrDeserializer4ReadEm"
                },
                {
                    "string": "item count = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                },
                {
                    "string": "InitItem: %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN6Dumper4DumpEPKcz"
                }
            ],
            "symbol": "__ZN6Dumper12DumpInitInfoEj",
            "prototype": "",
            "backtrace": [
                "_ZinComputeProgramDumpMutableInitInfo"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "virtual bool DvBufferFloat::GetRaw16(int, uint16_t &) const",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZNK13DvBufferFloat8GetRaw16EiRt",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "virtual bool DvBufferFloat::GetFloat(int, float &) const",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZNK13DvBufferFloat8GetFloatEiRf",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "virtual bool DvBufferFloat::SetFloat(int, float)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN13DvBufferFloat8SetFloatEif",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "virtual bool DvFloat::GetRaw16(int, uint16_t &) const",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZNK7DvFloat8GetRaw16EiRt",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "virtual bool DvFloat::GetFloat(int, float &) const",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZNK7DvFloat8GetFloatEiRf",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "virtual bool DvRaw8::GetRaw8(int, uint8_t &) const",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZNK6DvRaw87GetRaw8EiRh",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "bool ExecuteWeightShuffle(DvPtr &, DvPtr &, const DimInfo &, uint32_t, const DimInfo *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: internal error: order array too small",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZL20ExecuteWeightShuffleR5DvPtrS0_RK7DimInfojPS2_",
            "prototype": "",
            "backtrace": [
                "__ZN5DeCxt14ParseTransformER5DvPtrS1_"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "virtual bool DvFP16::GetRaw16(int, uint16_t &) const",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZNK6DvFP168GetRaw16EiRt",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "float GetWithExpand(DvPtr &, size_t)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZL13GetWithExpandR5DvPtrm",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "uint64_t MaxDim3(DvPtr &, DvPtr &, DvPtr &)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZL13FoldScaleBiasR5DvPtrS0_S0_S0_",
            "prototype": "",
            "backtrace": [
                "__ZN5DeCxt14ParseTransformER5DvPtrS1_"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "float GetWithDefault(DvPtr &, uint16_t, float)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZL14GetWithDefaultR5DvPtrtf",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "virtual void DvPtrWeight::TakeDvPtr(DvPtr &)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: internal error: Copying vector to weight",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11DvPtrWeight9TakeDvPtrER5DvPtr",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_UpdateSymbolicMutableSharing",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Program has mutable offset: 0x%llx, size: 0x%zx and cluster id: %d, procedureId: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice32ANE_UpdateSymbolicMutableSharingEP26ANEProgramCreateArgsOutputjP37ZinComputeProgramMutableProcedureInfo",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource34populateProcedureMutableKernelInfoEP26ANEProgramCreateArgsOutputj",
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "IOReturn ANEHWDevice::ANE_PatchClusterProcessInstanceWeightsBuffers(ANEProcess *, ANEClientProgramInstanceParams *, task_t)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Simple multi-instance, as no mutable procedures detected\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: LLM procedure is not Mutable for instanceProcId:0x%x: programProcId: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Procedure (%d) is not leading procedure(%d) in the mutable cluster\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Allocate for ANEPatchedWeightInfo failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANEPatchedWeightInfo in the array has no process, shouldn't happen\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEPatchedWeightInfo in the array has no final patch memory\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fPatchedMutableBufferList found, adding instanceProgramHandle: 0x%llx, into leadingIndex: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: No memory to create ANEMutableProcessParams\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: All procedures within same adapter and cluster must use same mutable weight files\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: The cluster is patched already, master proc %d \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: LLM weightBufferClient->bufferAddress: 0x%llx, size: 0x%zx, filepath: %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d:%s - No memory to create ANEMutableProcessParams\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fPatchedMutableBufferList create weightInfo instanceProgramHandle: 0x%llx, into leadingIndex: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Patching failed for instance result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice45ANE_PatchClusterProcessInstanceWeightsBuffersEP10ANEProcessP30ANEClientProgramInstanceParamsP4task",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice31ANE_ProgramCreateInstance_gatedEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP32ANEProgramCreateAdditionalParams",
                "____ZN11ANEHWDevice25ANE_ProgramCreateInstanceEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP4taskPvPy_block_invoke",
                "__ZN11ANEHWDevice25ANE_ProgramCreateInstanceEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP4taskPvPy"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "MemoryUnwireTimerTimeOut",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Enter +\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Exit -\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24MemoryUnwireTimerTimeOutEP18IOTimerEventSource",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "MemoryUnwireTimerTimeOut_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Memory unwire timer fired\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice30MemoryUnwireTimerTimeOut_gatedEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice24MemoryUnwireTimerTimeOutEP18IOTimerEventSource",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "canEnableMemoryUnwireTimer",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANEMemoryUnwireTimerSupported: %d  fProgramResources->getCount() : %d fSystemInitiatedSleep : %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26canEnableMemoryUnwireTimerEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "DisableMemoryUnwireTimer",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Disabled Memory Unwire timer!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24DisableMemoryUnwireTimerEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AneMachoSignatureCheck",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: program digest SHA256 : %d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strlcat"
                },
                {
                    "string": "%s: %s: Precompiled mach-o, performing signature check \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Program signature check passed!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Program signature check failed! \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: program digest %s \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: memory allocation fail\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22AneMachoSignatureCheckEP20ANEProgramCreateArgsPvPhm",
            "prototype": "",
            "backtrace": [
                "__ZN18ANEProgramResource23ANE_ProgramInitialSetupEP11ANEHWDeviceP20ANEProgramCreateArgsP26ANEProgramCreateArgsOutputP32ANEProgramCreateAdditionalParams",
                "__ZN11ANEHWDevice17ANE_ProgramCreateEP20ANEProgramCreateArgsP26ANEProgramCreateArgsOutputP4taskPvPy"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "/Library/Caches/com.apple.aned/",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strlen"
                },
                {
                    "string": "/Library/Caches/com.apple.aneuserd/",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strlen"
                },
                {
                    "string": "/System/Library/AssetsV2",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strlen"
                },
                {
                    "string": "/private/var/db/AppleIntelligencePlatform/AppModelAssets",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strlen"
                },
                {
                    "string": "[ERROR] %s: %s: can't get filePath from vnode\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: failed vnode verification ANEVnodeType: %d isFileExtMismatched: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: pre-compiled model AUTH_APFS verification succeeded\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: mobileAsset DataVault verification succeeded\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: AppleIntelligence DataVault verification succeeded\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Couldn't pass first round of trust verification filePath (%s)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice25aneVnodeTrustVerificationEP11vfs_contextP5vnodeP4taski12ANEVnodeTypePb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "aneVnodeRead",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DirectIO: ERROR: vn_rdwr failed. error=%d no. of bytes not read = %lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z12aneVnodeReadP11vfs_contextP5vnodeyxxb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE_ProgramInputsReady_gated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s  :pInputsReady is NULL or number of buffers",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s execDelay: %lld us, to firmware: %lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s  :inputIndex of chainingInputs",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "triggerRequest input Index: %d, srcIndex: %d symbol: %s surface ID: 0x%x Plane offset : 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s Inputs ready total plane: %d inputBufferInfoIndex: %d, with free value: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "numOfNonBlockingInput: %d \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s send first trigger(porgramHandle: 0x%llx for %d loopback inputs to firmware\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s CSNE_CMD_PROCEDURE_CALL_TRIGGER_CACHE_REQUEST Failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice28ANE_ProgramInputsReady_gatedEP24ANEInputBuffersReadyArgs",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice22ANE_ProgramInputsReadyEP24ANEInputBuffersReadyArgs_block_invoke",
                "__ZN11ANEHWDevice22ANE_ProgramInputsReadyEP24ANEInputBuffersReadyArgs"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "cleanupAllChainingMappings",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s programHandle: 0x%llx cacheHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: free raw stats buffer, result:0x%x \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s free intermediate buffer with program handle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s free SneCmdChaingCacheReq with program handle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26cleanupAllChainingMappingsEP25ANEChainingCacheReqParams",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice33deleteProgramChainingCacheRequestEPP25ANEChainingCacheReqParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "processDataChainingStatsBuffer",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: raw stats buffer ID:0x%x, version:%u, programId:%u, processId:%u, uuid:%llx, totDescriptors:%u",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice30processDataChainingStatsBufferEP25ANEChainingCacheReqParamsP30sAnsCmdDataChainingEventReportP18ANEProgramResource",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice30processDataChainingCacheHandleEP25ANEChainingCacheReqParamsP30sAnsCmdDataChainingEventReport",
                "__ZN11ANEHWDevice28processTargetToHostIOCommandEyyy",
                "__ZN11ANEHWDevice23aneInterruptHandlerPrivEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice19aneInterruptHandlerEP22IOInterruptEventSourcei"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "updateDataChainingMetadataStats",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Skip non-zero offset %llx plane for metadata\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: cacheHandle 0x%llx  chaining event input surfaceID: %d  frameID: 0x%llx, valid bit is: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: cacheHandle 0x%llx with non-frameID data type 0x%x valid bit:%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: cacheHandle 0x%llx invalid input surface ID 0x%x, no metadata\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice31updateDataChainingMetadataStatsEP25ANEChainingCacheReqParamsP30sAnsCmdDataChainingEventReport",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice30processDataChainingCacheHandleEP25ANEChainingCacheReqParamsP30sAnsCmdDataChainingEventReport",
                "__ZN11ANEHWDevice28processTargetToHostIOCommandEyyy",
                "__ZN11ANEHWDevice23aneInterruptHandlerPrivEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice19aneInterruptHandlerEP22IOInterruptEventSourcei"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IOReturn ANEHWDevice::findChainingRequestByCacheHandler(ANEChainingCacheReqParams **, uint64_t)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: found program with cacheHandler: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: %s no matching chainingCacheRequest for handle 0x%llx \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice33findChainingRequestByCacheHandlerEPP25ANEChainingCacheReqParamsy",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice28processTargetToHostIOCommandEyyy",
                "__ZN11ANEHWDevice23aneInterruptHandlerPrivEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice19aneInterruptHandlerEP22IOInterruptEventSourcei"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "deleteProgramChainingCacheRequest",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programHandle: 0x%llx cacheHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice33deleteProgramChainingCacheRequestEPP25ANEChainingCacheReqParams",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IOReturn ANEHWDevice::RCClientDieTimerHandler(IOTimerEventSource *)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Panic ANE%d:%s: ERROR: ANEHWDevice: RC clientDie but ISP not shut down in %d second\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23RCClientDieTimerHandlerEP18IOTimerEventSource",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(aneengine_aneenginecmdloadprogramcontext__raw_encode(&msg, cmd) == TB_ERROR_SUCCESS) && \\\"failed to encode type: AneEngine.AneEngineCmdLoadProgramContext\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_aneengine_aneenginerequest_loadprogram.cold.1",
            "prototype": "",
            "backtrace": [
                "_aneengine_aneenginerequest_loadprogram"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(aneengine_aneenginecmdprocedurecallcontext__raw_encode(&msg, cmd) == TB_ERROR_SUCCESS) && \\\"failed to encode type: AneEngine.AneEngineCmdProcedureCallContext\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_aneengine_aneenginerequest_procedurecall.cold.1",
            "prototype": "",
            "backtrace": [
                "_aneengine_aneenginerequest_procedurecall"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->modeswitch != ((void*)0)) && \\\"implementation for modeSwitch is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.cold.36",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->initengine != ((void*)0)) && \\\"implementation for initEngine is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.cold.32",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(aneengine_aneenginecmdloadprogramcontext__decode(msg, &cmd) == TB_ERROR_SUCCESS) && \\\"failed to decode type: AneEngine.AneEngineCmdLoadProgramContext\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.cold.26",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->loadprogram != ((void*)0)) && \\\"implementation for loadProgram is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.cold.29",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->unloadprogram != ((void*)0)) && \\\"implementation for unloadProgram is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.cold.25",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->teardownprogram != ((void*)0)) && \\\"implementation for teardownProgram is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.cold.22",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->createprocess != ((void*)0)) && \\\"implementation for createProcess is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.cold.19",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->terminateprocess != ((void*)0)) && \\\"implementation for terminateProcess is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.cold.16",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(aneengine_aneenginecmdprocedurecallcontext__decode(msg, &cmd) == TB_ERROR_SUCCESS) && \\\"failed to decode type: AneEngine.AneEngineCmdProcedureCallContext\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.cold.10",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->procedurecall != ((void*)0)) && \\\"implementation for procedureCall is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.cold.13",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->queryrequeststatus != ((void*)0)) && \\\"implementation for queryRequestStatus is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.cold.9",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->propertywrite != ((void*)0)) && \\\"implementation for propertyWrite is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.cold.6",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->propertyread != ((void*)0)) && \\\"implementation for propertyRead is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.cold.3",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->handleitqinterrupt != ((void*)0)) && \\\"implementation for handleITQInterrupt is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneengineinterrupt__server_start_owned_block_invoke.cold.6",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneengineinterrupt__server_start_owned_block_invoke",
                "_aneengine_aneengineinterrupt__server_start_owned",
                "_aneengine_aneengineinterrupt__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->start != ((void*)0)) && \\\"implementation for Start is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneengineinterrupt__server_start_owned_block_invoke.cold.3",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneengineinterrupt__server_start_owned_block_invoke",
                "_aneengine_aneengineinterrupt__server_start_owned",
                "_aneengine_aneengineinterrupt__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_FATAL: \" \"invalid error returned from modeSwitch\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke_2.cold.1",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke_2",
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_FATAL: \" \"invalid error returned from initEngine\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.75.cold.1",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke.75",
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_FATAL: \" \"invalid error returned from loadProgram\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.84.cold.1",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke.84",
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_FATAL: \" \"invalid error returned from unloadProgram\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.93.cold.1",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke.93",
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_FATAL: \" \"invalid error returned from teardownProgram\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.102.cold.1",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke.102",
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_FATAL: \" \"invalid error returned from createProcess\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.111.cold.1",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke.111",
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_FATAL: \" \"invalid error returned from terminateProcess\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.120.cold.1",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke.120",
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_FATAL: \" \"invalid error returned from procedureCall\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.129.cold.1",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke.129",
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_FATAL: \" \"invalid error returned from queryRequestStatus\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.138.cold.1",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke.138",
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_FATAL: \" \"invalid error returned from propertyWrite\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.147.cold.1",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke.147",
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_FATAL: \" \"invalid error returned from propertyRead\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneenginerequest__server_start_owned_block_invoke.156.cold.1",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneenginerequest__server_start_owned_block_invoke.156",
                "___aneengine_aneenginerequest__server_start_owned_block_invoke",
                "_aneengine_aneenginerequest__server_start_owned",
                "_aneengine_aneenginerequest__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_FATAL: \" \"invalid error returned from handleITQInterrupt\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneengine_aneengineinterrupt__server_start_owned_block_invoke_2.cold.1",
            "prototype": "",
            "backtrace": [
                "___aneengine_aneengineinterrupt__server_start_owned_block_invoke_2",
                "___aneengine_aneengineinterrupt__server_start_owned_block_invoke",
                "_aneengine_aneengineinterrupt__server_start_owned",
                "_aneengine_aneengineinterrupt__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->queryresult != ((void*)0)) && \\\"implementation for queryResult is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneexclave_aneexclavexnu__server_start_owned_block_invoke.cold.36",
            "prototype": "",
            "backtrace": [
                "___aneexclave_aneexclavexnu__server_start_owned_block_invoke",
                "_aneexclave_aneexclavexnu__server_start_owned",
                "_aneexclave_aneexclavexnu__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->queryforresult != ((void*)0)) && \\\"implementation for queryForResult is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneexclave_aneexclavexnu__server_start_owned_block_invoke.cold.33",
            "prototype": "",
            "backtrace": [
                "___aneexclave_aneexclavexnu__server_start_owned_block_invoke",
                "_aneexclave_aneexclavexnu__server_start_owned",
                "_aneexclave_aneexclavexnu__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->persistentclientupcallack != ((void*)0)) && \\\"implementation for persistentClientUpcallAck is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneexclave_aneexclavexnu__server_start_owned_block_invoke.cold.30",
            "prototype": "",
            "backtrace": [
                "___aneexclave_aneexclavexnu__server_start_owned_block_invoke",
                "_aneexclave_aneexclavexnu__server_start_owned",
                "_aneexclave_aneexclavexnu__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->saveexclavestate != ((void*)0)) && \\\"implementation for saveExclaveState is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneexclave_aneexclavexnu__server_start_owned_block_invoke.cold.27",
            "prototype": "",
            "backtrace": [
                "___aneexclave_aneexclavexnu__server_start_owned_block_invoke",
                "_aneexclave_aneexclavexnu__server_start_owned",
                "_aneexclave_aneexclavexnu__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->restoreexclavestate != ((void*)0)) && \\\"implementation for restoreExclaveState is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneexclave_aneexclavexnu__server_start_owned_block_invoke.cold.24",
            "prototype": "",
            "backtrace": [
                "___aneexclave_aneexclavexnu__server_start_owned_block_invoke",
                "_aneexclave_aneexclavexnu__server_start_owned",
                "_aneexclave_aneexclavexnu__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->pauseexclavework != ((void*)0)) && \\\"implementation for pauseExclaveWork is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneexclave_aneexclavexnu__server_start_owned_block_invoke.cold.21",
            "prototype": "",
            "backtrace": [
                "___aneexclave_aneexclavexnu__server_start_owned_block_invoke",
                "_aneexclave_aneexclavexnu__server_start_owned",
                "_aneexclave_aneexclavexnu__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->resumeexclavework != ((void*)0)) && \\\"implementation for resumeExclaveWork is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneexclave_aneexclavexnu__server_start_owned_block_invoke.cold.18",
            "prototype": "",
            "backtrace": [
                "___aneexclave_aneexclavexnu__server_start_owned_block_invoke",
                "_aneexclave_aneexclavexnu__server_start_owned",
                "_aneexclave_aneexclavexnu__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->startfirmwarerecoveryprocess != ((void*)0)) && \\\"implementation for startFirmwareRecoveryProcess is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneexclave_aneexclavexnu__server_start_owned_block_invoke.cold.15",
            "prototype": "",
            "backtrace": [
                "___aneexclave_aneexclavexnu__server_start_owned_block_invoke",
                "_aneexclave_aneexclavexnu__server_start_owned",
                "_aneexclave_aneexclavexnu__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->endfirmwarerecoveryprocess != ((void*)0)) && \\\"implementation for endFirmwareRecoveryProcess is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneexclave_aneexclavexnu__server_start_owned_block_invoke.cold.12",
            "prototype": "",
            "backtrace": [
                "___aneexclave_aneexclavexnu__server_start_owned_block_invoke",
                "_aneexclave_aneexclavexnu__server_start_owned",
                "_aneexclave_aneexclavexnu__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->readproperty != ((void*)0)) && \\\"implementation for readProperty is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneexclave_aneexclavexnu__server_start_owned_block_invoke.cold.9",
            "prototype": "",
            "backtrace": [
                "___aneexclave_aneexclavexnu__server_start_owned_block_invoke",
                "_aneexclave_aneexclavexnu__server_start_owned",
                "_aneexclave_aneexclavexnu__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->writeproperty != ((void*)0)) && \\\"implementation for writeProperty is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneexclave_aneexclavexnu__server_start_owned_block_invoke.cold.6",
            "prototype": "",
            "backtrace": [
                "___aneexclave_aneexclavexnu__server_start_owned_block_invoke",
                "_aneexclave_aneexclavexnu__server_start_owned",
                "_aneexclave_aneexclavexnu__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->preparepoweroff != ((void*)0)) && \\\"implementation for preparePowerOff is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneexclave_aneexclavexnu__server_start_owned_block_invoke.cold.3",
            "prototype": "",
            "backtrace": [
                "___aneexclave_aneexclavexnu__server_start_owned_block_invoke",
                "_aneexclave_aneexclavexnu__server_start_owned",
                "_aneexclave_aneexclavexnu__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->debugreadproperty != ((void*)0)) && \\\"implementation for DebugReadProperty is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneexclave_aneexclavexnudebug__server_start_owned_block_invoke.cold.6",
            "prototype": "",
            "backtrace": [
                "___aneexclave_aneexclavexnudebug__server_start_owned_block_invoke",
                "_aneexclave_aneexclavexnudebug__server_start_owned",
                "_aneexclave_aneexclavexnudebug__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"TB_ASSERT: \" \"(server->debugwriteproperty != ((void*)0)) && \\\"implementation for DebugWriteProperty is not present\\\"\" \", \" \"\\b\\b\" \" (%s:%d)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "___aneexclave_aneexclavexnudebug__server_start_owned_block_invoke.cold.3",
            "prototype": "",
            "backtrace": [
                "___aneexclave_aneexclavexnudebug__server_start_owned_block_invoke",
                "_aneexclave_aneexclavexnudebug__server_start_owned",
                "_aneexclave_aneexclavexnudebug__server_start"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[DEBUG] %s: %s: ClientInterface(%p): Initializing [Client: %s, PID: %d, Usage: %u, Is Privileged: %u, Is Data Chaining: %u]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: ClientInterface(%p): Initializing [No client info due to failed device initialization]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to initialize client device for process: %s (pid %d) \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to initialize client interface for process: %s (pid %d) \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: ClientInterface(%p): Initialized [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: ClientInterface(%p): Initialized [No client info due to failed device initialization]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN18ANEClientInterface4initE13ANEClientInfoP12OSDictionary",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[DEBUG] %s: %s: ClientInterface(%p): Freeing [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: ClientInterface(%p): Freeing [No client info due to failed device initialization]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN18ANEClientInterface4freeEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[DEBUG] %s: %s: ClientInterface(%p): Stopping [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: ClientInterface(%p): Stopping [No client info due to failed device initialization]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN18ANEClientInterface4stopEP9IOService",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[DEBUG] %s: %s: ClientInterface(%p): Client closed [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: ClientInterface(%p): Client closed [No client info due to failed device initialization]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN18ANEClientInterface11clientCloseEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[DEBUG] %s: %s: ClientInterface(%p): Client died [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: ClientInterface(%p): Client died [No client info due to failed device initialization]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN18ANEClientInterface10clientDiedEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Process %s (pid %d) denied access \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN18H11ANEInUserClient4initEP4taskP12OSDictionary",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: H11ANEInUserClient(%p): External Method Call [Client: %s, PID: %d, Selector %u, Result: %u]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN18H11ANEInUserClient14externalMethodEjP31IOExternalMethodArgumentsOpaque",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: H11ANEInDirectPathClient(%p): External Method Call [Client: %s, PID: %d, Selector %u, Result: %u]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24H11ANEInDirectPathClient14externalMethodEjP31IOExternalMethodArgumentsOpaque",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ClientDevice(%p): Initializing [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice4initE13ANEClientInfo",
            "prototype": "",
            "backtrace": [
                "__ZN18ANEClientInterface4initE13ANEClientInfoP12OSDictionary"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ClientDevice(%p): Opening [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DataChaining client: %p, epoch time: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANE_AddClientForProgram failed for direct evaluate client programHandle=0x%llx result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: DEBUG: Direct evaluate client does not have any open programs..Not holding retains on any program and power assertion on the ANE..",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice4openEP13ANEDeviceInfo",
            "prototype": "",
            "backtrace": [
                "__Z14ANE_DeviceOpenP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: ClientDevice(%p): Starting [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Invalid provider\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice5startEP9IOService",
            "prototype": "",
            "backtrace": [
                "__ZN18ANEClientInterface5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ClientDevice(%p): Stopping [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice4stopEv",
            "prototype": "",
            "backtrace": [
                "__ZN18ANEClientInterface4stopEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ClientDevice(%p): Client Closed [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice11clientCloseEv",
            "prototype": "",
            "backtrace": [
                "__ZN18ANEClientInterface11clientCloseEv"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: ClientDevice(%p): Client Died [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice10clientDiedEv",
            "prototype": "",
            "backtrace": [
                "__ZN18ANEClientInterface10clientDiedEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ClientDevice(%p): Program Send Request [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Memory Mapping Error (%s) for sharedEventsMapping\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Invalid Arguments: numWaitEvents: %u, MaxWaitEvents: %u, numSignalEvents: %u, MaxSignalEvents: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Error getting reference to the signal shared event reference for index:%d result:0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Error getting reference to the wait shared event reference for index:%d result:0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice18programSendRequestEP21ANEProgramRequestArgsPyP18ANEReqCallbackData",
            "prototype": "",
            "backtrace": [
                "__Z22ANE_ProgramSendRequestP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ClientDevice(%p): Program Create [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEUserClient::%s Memory Mapping Error (%s) for programCreateParamsMapping\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEUserClient::%s Memory Mapping Error (%s) for programCreateArgsOutput\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice13programCreateEP23ANEProgramParamsWrapper",
            "prototype": "",
            "backtrace": [
                "__Z17ANE_ProgramCreateP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[DEBUG] %s: %s: ProgramCreate for dataChaining client: %p, epoch time: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice13programCreateEP20ANEProgramCreateArgsP26ANEProgramCreateArgsOutput",
            "prototype": "",
            "backtrace": [
                "__ZN15ANEClientDevice13programCreateEP23ANEProgramParamsWrapper",
                "__Z17ANE_ProgramCreateP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ClientDevice(%p): Program Destroy [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEClientDevice14programDestroyEP21ANEProgramDestroyArgs",
            "prototype": "",
            "backtrace": [
                "__Z18ANE_ProgramDestroyP15ANEClientDevicePvP25IOExternalMethodArguments"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: Device(%p): Program Send Request [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ERROR:  - Request pointer is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ERROR:  - asyncWakePort is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z22ANE_ProgramSendRequestP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: Device(%p): Program Create [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z17ANE_ProgramCreateP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: Device(%p): Register Firmware WorkProcessor [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z30ANE_RegisterDebugWorkProcessorP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: Device(%p): Memory Map Request [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z20ANE_MemoryMapRequestP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: Device(%p): Memory Unmap Request [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z22ANE_MemoryUnMapRequestP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: Device(%p): Session Hint [Client: %s, PID: %d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ERROR: hint pointer is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z22ANE_SessionHintRequestP15ANEClientDevicePvP25IOExternalMethodArguments",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Number of ANEs is 0",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: client: %p clientContext: %p fProgramList: %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE_UserClientOpen_gated res: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE_UserClientOpen failed for ANE%d. result = 0x%x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver24ANE_UserClientOpen_gatedEPvPKcP4taskj",
            "prototype": "",
            "backtrace": [
                "__ZN9ANEDriver18ANE_UserClientOpenEPvPKcP4taskj"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Cleanup program for client %p clientContext: %p fProgramList: %p programHandle=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZN9ANEDriver21isProgramMappingValidEPK23_ANEProgramToANEMapping"
                },
                {
                    "string": "%s: %s: Invalid program present in client list %p. pMapping=%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE%d failed to UserClientCleanup status: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver27ANE_UserClientCleanup_gatedEPvb",
            "prototype": "",
            "backtrace": [
                "__ZN9ANEDriver21ANE_UserClientCleanupEPvb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Error: could not find programResource\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Error: programBuffers array NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Error: no programANEMap\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: osProgramMap is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programANEMap is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: add bitmaskMapping 0x%d for programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver28addProgramToANEMapping_gatedEyjPKcP23_ANEDriverClientContext",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: found aneMask: %d for cacheUrlIdentifier: %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[INFO] %s: %s: cacheUrlIdentifier %s not found in existing mapping\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver47findProgramANEMappingByCacheUrlIdentifier_gatedEPKcPjS2_PP23_ANEProgramToANEMapping",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: found aneMask: %d for programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[INFO] %s: %s: programHandle 0x%llx not found in existing mapping\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver27findProgramANEMapping_gatedEyPjS0_PP23_ANEProgramToANEMapping",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ANEDriverEventSource::initWithOptions - Error: could not init base object\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANEDriverEventSource::initWithOptions - Error: provider is not ANEDriver\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ANEDriverEventSource15initWithOptionsEP9IOService",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Adding %p to the programList for client, count: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE_ProgramCreate on ANEs, bitMask: 0x%x, programHandle: 0x%llx client: %p clientContext: %p fProgramList: %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANE_ProgramCreate failed for ANE%d. result=0x%x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver23ANE_ProgramCreate_gatedEP20ANEProgramCreateArgsP26ANEProgramCreateArgsOutputP4taskPv",
            "prototype": "",
            "backtrace": [
                "__ZN9ANEDriver17ANE_ProgramCreateEP20ANEProgramCreateArgsP26ANEProgramCreateArgsOutputP4taskPvPy"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ANE_ProgramCreateInstance to ANE%d failed with error: 0x%x \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE_ProgramCreateInstance to ANE%d result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver31ANE_ProgramCreateInstance_gatedEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP4taskPv",
            "prototype": "",
            "backtrace": [
                "__ZN9ANEDriver25ANE_ProgramCreateInstanceEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP4taskPvPy"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ProgramPrepare to ANE%d failed with error code: 0x%x \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ProgramPrepare to ANE%d result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver24ANE_ProgramPrepare_gatedEP21ANEProgramPrepareArgs",
            "prototype": "",
            "backtrace": [
                "__ZN9ANEDriver18ANE_ProgramPrepareEP21ANEProgramPrepareArgsyb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ANE_ProgramUnprepare to ANE%d failed with error code: 0x%x \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE_ProgramUnprepare to ANE%d  result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver26ANE_ProgramUnprepare_gatedEP21ANEProgramPrepareArgs",
            "prototype": "",
            "backtrace": [
                "__ZN9ANEDriver20ANE_ProgramUnprepareEP21ANEProgramPrepareArgs"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ANE_MemoryMapRequest to ANE%d failed with error code: 0x%x \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE_MemoryMapRequest to ANE%d  result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver26ANE_MemoryMapRequest_gatedEP18ANEMemoryMapParamsb",
            "prototype": "",
            "backtrace": [
                "__ZN9ANEDriver20ANE_MemoryMapRequestEPK18ANEMemoryMapParamsb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ANE_MemoryUnMapRequest to ANE%d failed with error: 0x%x \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE_MemoryUnMapRequest to ANE%d result=0x%x \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver28ANE_MemoryUnMapRequest_gatedEP18ANEMemoryMapParams",
            "prototype": "",
            "backtrace": [
                "__ZN9ANEDriver22ANE_MemoryUnMapRequestEPK18ANEMemoryMapParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ANE_ProgramDestroy failed, client %p not found\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Removing client (%p) from program handle 0x%llx \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE_ProgramDestroy to ANE%d failed with error: 0x%x \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE_ProgramDestroy to ANE%d  fANEIn=%p result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver24ANE_ProgramDestroy_gatedEP21ANEProgramDestroyArgs",
            "prototype": "",
            "backtrace": [
                "__ZN9ANEDriver18ANE_ProgramDestroyEP21ANEProgramDestroyArgs"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ANE_AddClientForProgram for ANE%d programHandle: 0x%llx client %p, client name %s clientContext: %p fProgramList: %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Client %p not found\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE_AddClientForProgram failed for direct evaluate client programHandle=0x%llx result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: Direct evaluate client does not have any open programs..Not holding retains on any program and power assertion on the ANE..",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: fail to find ProgramANEMApping: programHandle: 0x%llx client: %p clientContext: %p fProgramList: %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Retaining program for client %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE_AddClientForProgram : on sne:%d ret = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver29ANE_AddClientForProgram_gatedEPvP13ANEDeviceInfoP4task",
            "prototype": "",
            "backtrace": [
                "__ZN9ANEDriver23ANE_AddClientForProgramEPvP13ANEDeviceInfoP4task"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: found ANE nub %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZZN9ANEDriver17EnumerateANENodesEvENK3$_0clEPKcj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ANE_SessionHintRequest to ANE%d type=%u result=0x%x \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEDriver28ANE_SessionHintRequest_gatedEP18ANESessionHintArgsP20ANESessionHintOutputP4task",
            "prototype": "",
            "backtrace": [
                "__ZN9ANEDriver22ANE_SessionHintRequestEP18ANESessionHintArgsP20ANESessionHintOutputP4task"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: addResource failed for aneResourceId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN12ANEScheduler25moveResourceToUnwireQueueENSt3__110shared_ptrI11ANEResourceEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 2,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: collection is nullptr\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: aneResource not found in collection. resourceID: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: moveResourceFrom() failed for aneResourceId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN12ANEScheduler25moveResourceToUnwireQueueEP21ANEResourceCollectiony",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANEHWDevice: unwireResourceQueue is empty\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZNK21ANEResourceCollection7isEmptyEv"
                },
                {
                    "string": "ANEHWDevice: Releasing ANE resource. programHandle: 0x%llx surfaceId: %u resourceId: 0x%llx usageType: %u size: %llu bufferIndex: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: Failed to unwire ANE resource. programHandle: 0x%llx surfaceId: %u resourceId: 0x%llx usageType: %u size: %llu bufferIndex: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN12ANEScheduler20unwireThreadFunctionEPv",
            "prototype": "",
            "backtrace": [
                "__ZN12ANEScheduler4initER11ANEHWDevice"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Failed to start thread: %s. kern_ret: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: Thread: %s is already launched and not in stopped state. Ignoring this call\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN9ANEThread5startEv",
            "prototype": "",
            "backtrace": [
                "__ZN12ANEScheduler4initER11ANEHWDevice"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANEThread: ERROR: thread ptr is null\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEThread: %s +\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEThread: %s: Block thread until signaled to resume\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEThread: %s: Stop signal received. Breaking out and exiting thread\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEThread: %s: -\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZL10threadMainP9ANEThread",
            "prototype": "",
            "backtrace": [
                "__ZN9ANEThread5startEv",
                "__ZN12ANEScheduler4initER11ANEHWDevice"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: Null aggregate weight buffer",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Invalid weight buffer size ",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Invalid operation index ",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Invalid weight buffer index ",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ANECValidateMutableProcedureInfo",
            "prototype": "",
            "backtrace": [
                "_ZinComputeProgramUpdateMutables"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: No objects found in dictionary '%s'\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Listing objects in dictionary '%s':\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: \t'%s'\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z19printDictionaryKeysPK12OSDictionaryPc",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: given memory descriptor is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z18setMemoryOwnershipP18IOMemoryDescriptori",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Freed Patched Mutable WeightInfo\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: patchedWeightInfo->fProcessList is not empty. count=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice28FreePatchedMutableWeightInfoEP20ANEPatchedWeightInfo",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s:  fProgramResources: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programHandle: 0x%llx programResourceIndex = %d referenceCount = %d releasePendingList=%d \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Usecount decremented. program surface still lives on, as there are active processes using it",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: waitForPendingUpdate failed for programHandle=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Freeing Program buffer - \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: force deiniting program process and program. programHandle: 0x%llx programId: %d refCount: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE_ProcessDestroy_gated failed with status: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Program freed by another thread while waiting  for process to be destroyed..Exiting\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Program freed by another thread while waiting for process to be destroyed..Exiting\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Moving program memory surface into pending list, programId: %d, size: %llu, refCount: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22ReleaseProgramResourceEP18ANEProgramResourceb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: Request not present in the process pending requests list",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23handleRequestCompletionEP10ANERequesti.cold.1",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice23handleRequestCompletionEP10ANERequesti",
                "__ZN11ANEHWDevice32timeOutRequestTimerHandler_gatedEv",
                "__ZN11ANEHWDevice26timeOutRequestTimerHandlerEP18IOTimerEventSource",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: ANEResource = NULL. isResourceValid() failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: programResource = NULL. isResourceValid() failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: programResource not valid. programResource: %p ANEResource type: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Found kernel section buffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Found text section buffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Found kernel split section buffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Found patched mutable buffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Found instance procedure mutable section buffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice15isResourceValidENSt3__110shared_ptrI11ANEResourceEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: processParams is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ProcessAbort called with reissueCreateProcess = true\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ProcessAbort called with reissueCreateProcess = false\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Client not found but proceeding with process abort\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Sending CSNE_CMD_PROCEDURE_CALL_INVALIDATE_CACHE_REQUEST cacheHandle: 0x%llx, programHandle: 0x%llx \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR - CSNE_CMD_PROCEDURE_CALL_INVALIDATE_CACHE_REQUEST for cacheHandle: 0x%llx Failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Process already freed while waiting for CSNE_CMD_PROCEDURE_CALL_INVALIDATE_CACHE_REQUEST command cacheHandle: 0x%llx for Program handle 0x%llx not found for client %p clientName %s. Exiting..\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Request freed while waiting for CSNE_CMD_PROCEDURE_CALL_INVALIDATE_CACHE_REQUEST command cacheHandle: 0x%llx programHandle: 0x%llx for client %p clientName %s Exiting..\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: numPendingFWCommands: %u waiting for ACK before issuing TERMINATE_PROCESS, programHandle: 0x%llx programId: %u processId: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Process freed already while waiting FW command ACK for programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: time out waiting for FW command ACK programHandle: 0x%llx processId: %u numPendingFWCommands: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CSNE_CMD_TERMINATE_PROCESS command failed status: 0x%x, for programHandle: 0x%llx, programId: %u, processId: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CSNE_CMD_TERMINATE_PROCESS not sent for programHandle: 0x%llx with programId: %u, processId: %u, fSleepInProgress: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Process already freed while waiting CSNE_CMD_TERMINATE_PROCESS command for Program handle 0x%llx not found for client %p clientName %s. Exiting..\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: INFO: %d pending requests for programHandle: 0x%llx processId: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :INFO: Waiting for pending requests \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Process already freed while waiting for pending requests 0x%llx not found for client %p clientName %s. Exiting..\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: INFO: %d pending requests for programHandle: 0x%llx processId: %d. Done waiting result: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: removing request for uuid: 0x%llx programHandle: 0x%llx processId: %d transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: process recreated: programHandle: 0x%llx programId: %d processId: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: process recreate failed, result: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice12ProcessAbortEP10ANEProcessPvb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: System sleep in progress, not unwiring process programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: ProcessParams not valid for programHandle=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: patched mutable buffer used by process who has pending request, skipping unwiring mutable buffer pendingRequestsCount: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Unmapping patched buffer %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice20ProcessPartialUnwireEP10ANEProcessb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 2,
            "anchors": [
                {
                    "string": "%s: %s: Succeeded programHandle=0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed programHandle=0x%llx result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed unwireResources result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Done unwiring kernels for Base programHandle 0x%llx Instance-programHandle=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZN11ANEHWDevice25aneFreeIntermediateBufferEP10ANEProcessb"
                }
            ],
            "symbol": "__ZN11ANEHWDevice20ProgramPartialUnwireEP18ANEProgramResourceb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 2,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: waitForPendingUpdate failed for programHandle=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Releasing program buffer programId: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice17ProgramFullUnwireEP18ANEProgramResource",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: programHandle=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: programResource(%p) is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: intermediateUnion remap failed result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Wiring and Dart mapping patched buffer %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: patchedMutableBuffer wiring failed 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: dartAddressOld: 0x%llx, dartAddress: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice12ProcessReMapEP10ANEProcess",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: patchedMutableBuffer Dart map failed. result 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice12ProcessReMapEP10ANEProcess.cold.2",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice12ProcessReMapEP10ANEProcess"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: Program needs to be remapped programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Creating program for programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Program creation failed. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Program with programHandle: 0x%llx is invalid",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Process creation failed for programHandle: 0x%llx result: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: cacheHandle %llx Not valid after PROCEDURE_CALL_CACHE_REQUEST for transactionId: 0x%llx, req: 0x%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice11ProgramLoadEP18ANEProgramResource18ANEProgramLoadTypey",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Waiting for program update programHandle=0x%llx retries=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: program freed, while waiting pendingUpdate isValidProgram: %d skipWaiting:%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: program update is pending programHandle=0x%llx , isPendingUpdate: %d skipWaiting: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: timed out waiting pendingUpdate\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Done waiting for program update programHandle=0x%llx retries=%d. Success! skipWaiting=%d skipANEActiveCheck=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice20waitForPendingUpdateEP18ANEProgramResourcebb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Unloading program for programHandle: 0x%llx, programId: %u, pendingRequestsCount: %u, pendingRequestsWithFirmware: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: program was already terminated programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: pendingProcessCreate: %u, waiting for all processes to be created before program unloade\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Timed out waiting for all processes created before programUnload programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Terminating %u process' for programHandle: 0x%llx, programId: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: aneCmdSend for CSNE_CMD_TERMINATE_PROCESS failed. result = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Program with programHandle: 0x%llx, disappeared when try to unload",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: process with programHandle: 0x%llx, processId: %u disappeared when trying to unload it\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: aneCmdSend for CSNE_CMD_UNLOAD_PROGRAM failed. result = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Done: Unloading program for programHandle: 0x%llx, programId: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice13ProgramUnloadEP18ANEProgramResourcebb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: unmapping intermediate buffer: programHandle: 0x%llx, processProgramHandle: 0x%llx dva: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice13ProgramUnloadEP18ANEProgramResourcebb.cold.1",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice13ProgramUnloadEP18ANEProgramResourcebb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: fANEFirmwareCpuLoadScore: %u, pendingRequestCount: %d, pendingRequestsWithFirmware: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANEFirmwareCpuLoadScore: %d, fwCpuThrottled: %d, Enabling ANE CPU throttle, numRequestsWithFW: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23processANECPULoadUpdateEb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: F2F cache request done before cache handle is acked from FW\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: INVALIDATE_CACHE_REQUEST 0x%llx success, procCallCacheHandles:%d F2FProcCallCacheHandles:%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: INVALIDATE_CACHE_REQUEST 0x%llx Failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice33handleRequestCompletionForProcessEP18ANEProgramResourceP10ANEProcessP10ANERequestby",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Cannot find procedureCallRequest for uuid: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Request program: %p and/or process: %p nullptr\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ProgramID of request: %u does not match with eventReport programID: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ProcStart - programId: %d processId: %d uuid: 0x%llx procedureid: %d eventid: %d transactionId: 0X%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ProcStart for request not sent to FW. programHandle: 0x%llx programId: %u processId: %u uuid: 0x%llx cacheHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ProcStartHW: programId: %d processId: %d uuid: 0x%llx procedureid: %d eventid: %d transactionId: 0x%llx TS: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ProcStartHW for request not sent to FW. programHandle: 0x%llx programId: %u processId: %u uuid: 0x%llx cacheHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ProcEnd: programId: %d processId: %d uuid: 0x%llx procedureid: %d programEvent: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ProcFail: programId: %d processId: %d uuid: 0x%llx procedureid: %d programEvent: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ProcEnd HWTimestamp : %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ProcFailed HWTimestamp : %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: No async ref set! Skipping callback for programid=%d request_uuid=%llx   async ref= 0x%llx programResource=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice27processANEDriverEventReportEP25sAnsCmdProgramEventReport",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice28processTargetToHostIOCommandEyyy",
                "__ZN11ANEHWDevice23aneInterruptHandlerPrivEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice19aneInterruptHandlerEP22IOInterruptEventSourcei"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Bad message address: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: BACK_CHANNEL_RPC: mapped memory exceeds surface boundary\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR_NOTIFICATION\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: RESET_NOTIFICATION\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: RESET_NOTIFICATION: mapped memory exceeds surface boundary\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: SIGNPOST_NOTIFICATION: mapped memory exceeds surface boundary\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: SIGNPOST_NOTIFICATION_GROUP: mapped memory exceeds surface boundary\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: SIGNPOST_NOTIFICATION_GROUP #NOTIFICATIONs: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: SIGNPOST_NOTIFICATION_GROUP, buffer size %d exceeds max\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: SIGNPOST64_NOTIFICATION: mapped memory exceeds surface boundary\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: SIGNPOST64_NOTIFICATION_GROUP: mapped memory exceeds surface boundary\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: SIGNPOST64_NOTIFICATION_GROUP #NOTIFICATIONs: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: SIGNPOST64_NOTIFICATION_GROUP buffer size %d exceeds max\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: CPU_LOAD_NOTIFICATION: mapped memory exceeds surface boundary\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CPULOAD_NOTIFICATION: fANEFirmwareCpuLoadScore: %u numPendingRequests: %d pendingRequestsWithFirmware: %d fwCpuThrottled: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Received Cpu Load Notification: fANEFirmwareCpuLoadScore: %u numPendingRequests: %d pendingRequestsWithFirmware: %d fwCpuThrottled: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: DBG_EVENT: mapped memory exceeds surface boundary\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: DATA_CHAINING_EVENT: mapped memory exceeds surface boundary\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: processId: %u, event:%u, cpuLoadScore: %u, fwCpuThrottled: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Invalid cacheRequestType %u specified\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Got invalidate event - uuid: 0x%llx cacheHandle: 0x%llx cacheEventType: %u, procCallCacheHandles:%d F2FProcCallCacheHandles:%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: PROGRAM_EVENT: mapped memory exceeds surface boundary\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: processId: %llu, event:%d, cpuLoadScore: %d, fwCpuThrottled: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Unknown notification from FW (0x%08X)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: IOProcessorChannelSendWithLog failed, error %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice28processTargetToHostIOCommandEyyy",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice23aneInterruptHandlerPrivEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice19aneInterruptHandlerEP22IOInterruptEventSourcei"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Restoring RequestTimers State\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice28ANE_RestoreRequestTimerStateEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 2,
            "anchors": [
                {
                    "string": "%s: %s: needProcessRemap: %d, processHasRemapCandidateBuffer: %d, needIntermediateBufferRemap: %d, needMutableBuffersDartMapped: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice16needProcessRemapEP10ANEProcessPb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: DEBUG: lookupProgramResourceFromCacheUrlId: Found program! programHandle: 0x%llx, programId %d cacheUrlId:%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice35lookupProgramResourceFromCacheUrlIdEPKci.cold.1",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice35lookupProgramResourceFromCacheUrlIdEPKci"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: lookupProgramResourceFromCacheUrlId: NOT Found program. cacheUrlId:%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice35lookupProgramResourceFromCacheUrlIdEPKci",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: still call user client cleanup for client (%p) as power is already off\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE is in S2R. Retry power ON so that we can cleanup firmware state\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE power on from S2R failed, continue with client cleanup status=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: client ptr: %p not found \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: releasing client mapping\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Releasing program buffer: %p programHandle: 0x%llx programId: %d for client %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ANE_ProgramDestroy_gated failed for programHandle: 0x%llx. result= 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: driverInitiatedSleep state, power up ANE to clean up all pending release\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice27ANE_UserClientCleanup_gatedEPvb",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice21ANE_UserClientCleanupEPvb_block_invoke",
                "__ZN11ANEHWDevice21ANE_UserClientCleanupEPvb"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: Sleep in progress for data Chaining client: %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Info: Not adding programHandle 0x%llx to client (%p) as power is already off\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Could not power on the ANE on behalf of client (%p)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: cannot find client: %p programHandle: 0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: client %p is being cleaned up - skip adding program to client (%s) programHandle: 0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Process released already. porgramHandle=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: No blob info provided\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CodeSigning check succeeeded!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: teamIdCheckPassed=%d signingIdCheckPassed=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: signingId=%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: signingIdDigest=%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: expectedSigningIdDigest=%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: teamIdDigest=%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: expectedTeamIdDigest=%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Can't get vnode!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Can't get proc path \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CodeSigning check succeeeded! \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: procNamePath check failed!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Client not Authorized to open device to use program - codeSigningCheckPassed=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Adding client %p:  %s to programHandle: 0x%llx, Num clients for program: %d, programResource: %p, referenceCount: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Stats Metadata surface(surface-id=0x%08X) doesn't exist\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Metadata surface mapping exist\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: InitIOReporter failed. result = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice29ANE_AddClientForProgram_gatedEPvP13ANEDeviceInfoP4task",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice23ANE_AddClientForProgramEPvP13ANEDeviceInfoP4task_block_invoke",
                "__ZN11ANEHWDevice23ANE_AddClientForProgramEPvP13ANEDeviceInfoP4task"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: invalid hint type %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: skip hint. No program handle\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: got hint %u for program 0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Unable to set session hint. ret = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: totalPagesNeedWired %llu residentPages %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: sessionStatus %u",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22ANE_SessionHintRequestEP18ANESessionHintArgsP20ANESessionHintOutputP4task",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: pProgramResource->machoFilePath=%s pathFromClient=%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: patchedWeightInfo->weightFilePath[weightFileIndex]=%s pathFromClient=%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: patchedWeightInfo->weightFilePath[weightFileIndex]=%s pathFromClient=%s startingPathMatched=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: process->weightFilePath[instanceProcID][weightFileIndex]=%s pathFromClient=%s startingPathMatched=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: startingPathMatched %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice26lookupProgramWithAssetPathEP12OSCollectionPKcPP18ANEProgramResourcePP10ANEProcessP5OSSet_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice26lookupProgramWithAssetPathEP12OSCollectionPKcPP18ANEProgramResourcePP10ANEProcessP5OSSet",
                "____ZN11ANEHWDevice42setClientHintInitialChecksAndLookups_gatedEP13ANEClientHint_block_invoke_2",
                "__ZN11ANEHWDevice42setClientHintInitialChecksAndLookups_gatedEP13ANEClientHint",
                "____ZN11ANEHWDevice13setClientHintEP13ANEClientHint_block_invoke",
                "__ZN11ANEHWDevice13setClientHintEP13ANEClientHint"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Freeing buffers after sleep wake or DART power up - fSleepInProgress(%d) fSystemInitiatedSleep(%d) fDriverInitiatedSleep(%d) IsDartActive(%d) - fNonPersistentSharedMemorySurfacesPendingRelease(%d), fPersistentSharedMemorySurfacesPendingRelease(%d), fPeerSharedMemorySurfacesPendingRelease(%d), fProgramResourcePendingRelease(%d) \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Enabling DART\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Skip cleanup - nothing in the pending queue\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice42ANE_CleanupAllocationsPendingRelease_gatedEb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: fNumFWToFWProcedureCallCacheHandles: %u \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: fNumProcedureCallCacheHandles: %u \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice32decProcedureCallCacheHandleCountEb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: error! invalid cur_segment",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: error! invalid cur_section",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: error! section addr > segment addr ",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24ZinAneLoadProgramSegmentEP21ComputeProgramSegmentmmy",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: vnode_rdadvise vnode: %p fileOffset: %lld fileSize: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice23aneVnodeAsyncReadAdviseEP5vnodexi20ANEResourceUsageTypey_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice23aneVnodeAsyncReadAdviseEP5vnodexi20ANEResourceUsageTypey"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Firmware does not support RTGraph macho. Program Load Skipped!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: programResource is nullptr\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice21createProgramResourceERK20ANEProgramCreateArgsRK32ANEProgramCreateAdditionalParamsRP18ANEProgramResource",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice17ANE_ProgramCreateEP20ANEProgramCreateArgsP26ANEProgramCreateArgsOutputP4taskPvPy"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Exceeded max number of programs loaded on ANE - fANEMaxPrograms=%d \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANECore->fSleepInProgress on dataChaining client\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DEBUG: ANEHWDevice: Program added to client (%p) programs for ANED programId: %d programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23ANE_ProgramCreate_gatedEP18ANEProgramResourceP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice17ANE_ProgramCreateEP20ANEProgramCreateArgsP26ANEProgramCreateArgsOutputP4taskPvPy_block_invoke_2",
                "__ZN11ANEHWDevice17ANE_ProgramCreateEP20ANEProgramCreateArgsP26ANEProgramCreateArgsOutputP4taskPvPy"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: invalid arguments instanceParams: %p, programOutput: %p additionalParams:%p \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: number of procedures (%u) exceeds max (%u) supported\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: number of weightsBuffers (%u) exceeds max (%u) supported\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: couldn't create programHandle\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fSleepInProgress on dataChaining client\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Max process count reached (%d) - Cannot create anymore\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: program not found for base programHandle: 0x%llx, baseModelIdentifier: %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: program release is in progress, could not create instance\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Program instance created programId: %d processId: %d programHandle: 0x%llx for baseModel programHandle: 0x%llx, owningTask: %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: logical procedure id: %u mapped to procedure id: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Not all procedure info for the procedures were copied to the outputArgs\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Not creating instance as ANE is already off \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Process released while waiting for ANE to power ON. ProgramHandle=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Patching failed for the Instance Weights Buffers\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Total new instance procedures: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Process params not found for the newly created programHandle 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: new process instance create failed for base programHandle: 0x%llx, baseModelIdentifier: %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: program not loaded, programId: %d for programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice31ANE_ProgramCreateInstance_gatedEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP32ANEProgramCreateAdditionalParams",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice25ANE_ProgramCreateInstanceEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP4taskPvPy_block_invoke",
                "__ZN11ANEHWDevice25ANE_ProgramCreateInstanceEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP4taskPvPy"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE%d: %s :info: ANEHWDevice: ANE is already off.. Retry power ON \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ANEHWDevice: No intermediate buffer sharing boot-args is set(requsted sharing handle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Cannot find program or process programHandle=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: Process is invalid programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Network doesn't requre intermediate buffer, return 0 for sharedIntermediateHandle\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Network is a large network MachOSize=%llu IntermediateBufferSize=%lld IOSize=%zu totalProgramSize=%lld, so will run only when no other requests are running at the ANE\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24ANE_ProgramPrepare_gatedEP21ANEProgramPrepareArgsyb",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice18ANE_ProgramPrepareEP21ANEProgramPrepareArgsyb_block_invoke",
                "__ZN11ANEHWDevice18ANE_ProgramPrepareEP21ANEProgramPrepareArgsyb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Found procedureCall request with uuid (0x%llx) enabledFwToFwSignal: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice30findProcedureCallRequestByUUIDEPP10ANERequesty",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Found requests with cacheHandle 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: no matching requests with cacheHandle: 0x%llx uuid: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice29findProcedureCallCacheRequestEPP10ANERequestyy",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice28processTargetToHostIOCommandEyyy",
                "__ZN11ANEHWDevice23aneInterruptHandlerPrivEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice19aneInterruptHandlerEP22IOInterruptEventSourcei"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s no firmware chaining cacheReqParams: %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: cacheHandle:0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: programId:0x%llx,processId: 0x%x,procedureId: 0x%x  \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: priority:0x%x, fwEnqueDelayNs: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: totalNbrOfInputBuffers:%d, totalNbrOfOutputBuffers: %d, nbrOfOutputBufferSets: %d, nbrOfIOBuffers:%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: buf%d: surfaceID: 0x%x, outsetid:%d, ioBufferType: %d \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: bufferindex: %d, bufferaddres: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice27dumpFirmwareChainingRequestEP25ANEChainingCacheReqParams",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice34sendChainingCacheRequestToFirmwareEP25ANEChainingCacheReqParams",
                "__ZN11ANEHWDevice32ANE_ProgramChainingPrepare_gatedEP29ANEProgramChainingPrepareArgsP31ANEProgramChainingPrepareOutput",
                "____ZN11ANEHWDevice26ANE_ProgramChainingPrepareEP29ANEProgramChainingPrepareArgsP31ANEProgramChainingPrepareOutput_block_invoke",
                "__ZN11ANEHWDevice26ANE_ProgramChainingPrepareEP29ANEProgramChainingPrepareArgsP31ANEProgramChainingPrepareOutput"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s not valid cahce request for firmware,cacheReqParams: %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s cacheHandle response from the firmware: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s CSNE_CMD_PROCEDURE_CALL_CACHE_REQUEST failed: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice34sendChainingCacheRequestToFirmwareEP25ANEChainingCacheReqParams",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice32ANE_ProgramChainingPrepare_gatedEP29ANEProgramChainingPrepareArgsP31ANEProgramChainingPrepareOutput",
                "____ZN11ANEHWDevice26ANE_ProgramChainingPrepareEP29ANEProgramChainingPrepareArgsP31ANEProgramChainingPrepareOutput_block_invoke",
                "__ZN11ANEHWDevice26ANE_ProgramChainingPrepareEP29ANEProgramChainingPrepareArgsP31ANEProgramChainingPrepareOutput"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE%d: %s : CSNE_CMD_PROCEDURE_CALL_CACHE_REQUEST procedure id=%d bGroupRequest=0x%d cacheHandle=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s : Input buffer(surfaceID:0x%x): CSNE_CMD_PROCEDURE_CALL_CACHE_REQUEST [%d] plane: %d valid=%d bufferIndex=%d type=%d size=%llu offset=%llu bufferaddr=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: raw stat buffer CSNE_CMD_PROCEDURE_CALL_CACHE_REQUEST [%d] valid=%d bufferIndex=%d type=%d size=%llu buffer=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s : output buffer CSNE_CMD_PROCEDURE_CALL_CACHE_REQUEST [%d] plane: %d offset=%llu bufferIndex=%d size=%llu buffer=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s : intermediate buffer CSNE_CMD_PROCEDURE_CALL_CACHE_REQUEST [%d] valid=%d bufferIndex=%d type=%d size=%llu buffer=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Totoal number of buffers to firmware is: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice33buildFirmwareChainingCacheRequestEP25ANEChainingCacheReqParamsP26ANEProgramCreateArgsOutput",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice32ANE_ProgramChainingPrepare_gatedEP29ANEProgramChainingPrepareArgsP31ANEProgramChainingPrepareOutput",
                "____ZN11ANEHWDevice26ANE_ProgramChainingPrepareEP29ANEProgramChainingPrepareArgsP31ANEProgramChainingPrepareOutput_block_invoke",
                "__ZN11ANEHWDevice26ANE_ProgramChainingPrepareEP29ANEProgramChainingPrepareArgsP31ANEProgramChainingPrepareOutput"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: fDataChainingSleepInProgress on dataChaining client\n ",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: not able to find client: 0x%llx\n ",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Info: Not preparing program as ANE is already off \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: program not found for programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: INFO: %d pending requests for programHandle: 0x%llx programId: %d processId: %d. Waiting for them to complete\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: INFO: programHandle: 0x%llx processId: %d. Done waiting result: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: Timed out waiting for requests to complete..Not freeing intermediate buffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: process already terminated for programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26ANE_ProgramUnprepare_gatedEP21ANEProgramPrepareArgs",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice20ANE_ProgramUnprepareEP21ANEProgramPrepareArgs_block_invoke",
                "__ZN11ANEHWDevice20ANE_ProgramUnprepareEP21ANEProgramPrepareArgs"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Not processing request for program as ANE is already off \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Not all fences have been acquired even after we were signaled = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice21blockOnFencesAcquiredEP10ANERequest",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Client (%p) Not found, dropping the inference request for processId: %u, transactionId: 0x%llx, ioFenceCallback=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: program not valid, dropping the inference request for processId: %u, transactionId: 0x%llx, ioFenceCallback=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Acquired all fences for cacheHandle: 0x%llx, programId: %u, processId: %u, transactionId: 0x%llx, ioFenceCallback=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Failed to acquire dartMapLock\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Skipping request - uuid: 0x%llx cacheHandle: 0x%llx programId: %d processId: %d transactionId: 0x%llx acquiredAllFences: %d acquiredAllWaitEvents: %d ioFenceCallback: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: uuid: 0x%llx property: 0x%x programId: %u, processId: %u, transactionId: 0x%llx requestNotSent: %d enableFWToFWSignal: %d cacheHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programResource pendingUpdate is in progress\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE DARTRemap in progress, fDartRemapInProgress: %d, fDartRemapInProgressForProgramHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Failed to remap the process for programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: process became invalid for programHandle=0x%llx programId=%u processId=%u uuid=0x%llx transactionId=0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Failed to update the FirmwareRequest for programHandle: 0x%llx, transactionId: 0x%llx, uuid: %llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Sending CSNE_CMD_PROCEDURE_CALL ioFenceCallback=%d \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CSNE_CMD_PROCEDURE_CALL failed = 0x%x ioFenceCallback=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: No space in command queue, retry request later = 0x%x ioFenceCallback=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE got power gated while waiting for command to complete ioFenceCallback=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Skipping request - uuid: 0x%llx cacheHandle: 0x%llx programId: %d processId: %d transactionId: 0x%llx acquiredAllFences(%d) acquiredAllWaitEvents(%d) isFirmwareResourceAvailable(%d) ioFenceCallback(%d) isIntermediateUnionReady(%d)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Skipping request as cacheHandle is unavailable programId: %d, processId: %d, transactionId: 0x%llx enableFWToFW: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Skipping request as intermediateUnion is used with priority: %d reqPriority: %u",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: process Not valid after PROCEDURE_CALL_CACHE_REQUEST for programId: %d, processId: %d, transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: CSNE_CMD_PROCEDURE_CALL_CACHE_REQUEST failed: 0x%x for  programId: %d, processId: %d, transactionId: 0x%llx, procCallCacheHandles:%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CSNE_CMD_PROCEDURE_CALL_CACHE_REQUEST success: cacheHandle: 0x%llx, programId: %d, processId: %d, transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: FW shared event doorbell uuid: 0x%llx cachehandle: 0x%llx, transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: process Not Valid afer INVALIDATE_CACHE_REQUEST cacheHandle: 0x%llx, programId: %d, processId: %d, transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Request freed while waiting for INVALIDATE_CACHE_REQUEST cacheHandle: 0x%llx, programId: %d, processId: %d, transactionId: 0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CSNE_CMD_PROCEDURE_CALL_INVALIDATE_CACHE_REQUEST success cacheHandle: 0x%llx, programId: %d, processId: %d, transactionId: 0x%llx, numCacheHandles: %d \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: CSNE_CMD_PROCEDURE_CALL_INVALIDATE_CACHE_REQUEST Failed cacheHandle: 0x%llx, programId: %d, processId: %d, transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[INFO] %s: %s: Request is blocked on fences. Skipping - cacheHandle: 0x%llx, programId: %d, processId: %d, transactionId: 0x%llx, ioFenceCallback(%d)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: INFO: F2F cache request sent already - cacheHandle: 0x%llx, programId: %d, processId: %d, transactionId: 0x%llx, ioFenceCallback(%d)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: requestNotSent is false - cacheHandle: 0x%llx, programId: %d, processId: %d, transactionId: 0x%llx, ioFenceCallback(%d)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Signaling client of failure and freeing the request, result = 0x%x, cacheHandle: 0x%llx, programId: %d, processId: %d, transactionId: 0x%llx, ioFenceCallback=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: failed result=0x%x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Pending Request not present in the requests list for cacheHandle: 0x%llx, programId: %d, processId: %d, transactionId: 0x%llx, ioFenceCallback=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programResource: %p, ProcessParams: %p  is not valid for cacheHandle: 0x%llx, programId: %d, processId: %d, transactionId: 0x%llx, ioFenceCallback=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Request not found for cacheHandle: 0x%llx, programId: %d, processId: %d, transactionId: 0x%llx, ioFenceCallback=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice27SendRequestToFirmware_gatedEP10ANERequestP9IOSurfaceibb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: Request not found for traceId: %#llx, with value: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Program or process is no longer valid. req->property: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: SetTimeout: %u ms req programId: %d, processId: %d, transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Received traceId: %#llx, with value: %#llx while Sleep in progress\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice29sharedEventNotification_gatedEP20IOSurfaceSharedEventyy",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice23sharedEventNotificationEP20IOSurfaceSharedEventyy",
                "__ZN10ANERequest16initSharedEventsEP15ANESharedEventsyRb",
                "__ZN10ANERequest4initER11ANEHWDeviceR37ANEProgramSendRequestAdditionalParamsR21ANEProgramRequestArgsyP15ANESharedEventsRb",
                "__ZN10ANERequest6createER11ANEHWDeviceR37ANEProgramSendRequestAdditionalParamsR21ANEProgramRequestArgsyP15ANESharedEventsRb"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: Request FW commands is not set yet, skip update\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22updateRequestFWCommandEP10ANERequest",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice27SendRequestToFirmware_gatedEP10ANERequestP9IOSurfaceibb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: numofRelocations: %u, numCircularBuffer: %u numLiveInParam : %u, numKernelSplitSections: %u, programInfo: %p, procedureID: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: cmdWithCustomBars for procedureID: %d: config: %d, type: %d, barId: %d. fieldBitOffset: %d, fieldSizeInBits:%d, DSID: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: cmdWithCustomBars mcacheIntermediateHi for procedureID: %d: config: %d, type: %d, barId: %d. fieldBitOffset: %d, fieldSizeInBits:%d, DSID: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: cmdWithCustomBars mcacheIntermediateLo for procedureID: %d: config: %d, type: %d, barId: %d. fieldBitOffset: %d, fieldSizeInBits:%d, DSID: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s num of relocation(numofRelocations: %d) for mcache doesn't match num: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: Unsupported 64-bit BAR passed by compiler on H13 arch, changing to physical BAR  customBarInfo[num].config=%d customBarInfo[num].barId = %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice18buildCustomBarInfoEP18ANEProgramResourcejP18sCSneCustomBarInfoP10ANERequestb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: buildFirmwareProcedureCallCacheRequest failed. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: buildFirmwareProcedureCallRequest failed. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice20buildFirmwareRequestER10ANERequest",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice40ANE_ProgramPrepareAndSubmitRequest_gatedEP21ANEProgramRequestArgsP15ANESharedEventsP37ANEProgramSendRequestAdditionalParams",
                "__ZN11ANEHWDevice28ANE_ProgramSendRequest_gatedEP21ANEProgramRequestArgsP15ANESharedEventsP37ANEProgramSendRequestAdditionalParams",
                "____ZN11ANEHWDevice22ANE_ProgramSendRequestEP21ANEProgramRequestArgsPyPvbP18ANEReqCallbackDataP4taskP15ANESharedEvents_block_invoke_2",
                "__ZN11ANEHWDevice22ANE_ProgramSendRequestEP21ANEProgramRequestArgsPyPvbP18ANEReqCallbackDataP4taskP15ANESharedEvents"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: IO Collection in request is nullptr\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programHandle: 0x%llx, procedureID: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: buildFirmwareSignalEvents() failed. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: buildFirmwareWaitEvents() failed. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to allocate sCSneCmdProcedureCallCacheRequestCommon\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: LiveinParam map failed. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Total number of buffers to firmware is: %d, ioBufferIdxCount: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice38buildFirmwareProcedureCallCacheRequestEP10ANERequest",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice20buildFirmwareRequestER10ANERequest",
                "__ZN11ANEHWDevice40ANE_ProgramPrepareAndSubmitRequest_gatedEP21ANEProgramRequestArgsP15ANESharedEventsP37ANEProgramSendRequestAdditionalParams",
                "__ZN11ANEHWDevice28ANE_ProgramSendRequest_gatedEP21ANEProgramRequestArgsP15ANESharedEventsP37ANEProgramSendRequestAdditionalParams",
                "____ZN11ANEHWDevice22ANE_ProgramSendRequestEP21ANEProgramRequestArgsPyPvbP18ANEReqCallbackDataP4taskP15ANESharedEvents_block_invoke_2",
                "__ZN11ANEHWDevice22ANE_ProgramSendRequestEP21ANEProgramRequestArgsPyPvbP18ANEReqCallbackDataP4taskP15ANESharedEvents"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: resources passed in request is nullptr\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: procedureCallCommandPtr is null\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Not enough buffer descriptors in firmware struct\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: nbrIOBuffers=%u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DEBUG: nbrIOBuffers: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: LiveinParam map() failed. result: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: procedureCallCommand.programId: %d procedureCallCommand.processId: %d procedureCallCommand.procedureId: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice33buildFirmwareProcedureCallRequestEP10ANERequest",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice20buildFirmwareRequestER10ANERequest",
                "__ZN11ANEHWDevice40ANE_ProgramPrepareAndSubmitRequest_gatedEP21ANEProgramRequestArgsP15ANESharedEventsP37ANEProgramSendRequestAdditionalParams",
                "__ZN11ANEHWDevice28ANE_ProgramSendRequest_gatedEP21ANEProgramRequestArgsP15ANESharedEventsP37ANEProgramSendRequestAdditionalParams",
                "____ZN11ANEHWDevice22ANE_ProgramSendRequestEP21ANEProgramRequestArgsPyPvbP18ANEReqCallbackDataP4taskP15ANESharedEvents_block_invoke_2",
                "__ZN11ANEHWDevice22ANE_ProgramSendRequestEP21ANEProgramRequestArgsPyPvbP18ANEReqCallbackDataP4taskP15ANESharedEvents"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: total i/o buffers calculation overflowed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Invalid number of i/o buffers, programHandle: 0x%llx, totInputBuffers: %u, totOutputBuffers: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to allocate memory for input IOSurface array, programHandle: 0x%llx, totInputBuffers: %d, totOutputBuffers: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to allocate memory for output IOSurface array, programHandle: 0x%llx, totInputBuffers: %d, totOutputBuffers: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Could not lookup input IOSurface id %d. Returning error 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Could not lookup output IOSurface id %d. Returning error 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22ANE_ProgramSendRequestEP21ANEProgramRequestArgsPyPvbP18ANEReqCallbackDataP4taskP15ANESharedEvents",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Client Not found, dropping the inference request\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programRequestArgs:\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programHandle: 0x%llx, transactionId: 0x%llx, procedureId: %u, priority: %u, qos: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: totInputBuffers=%d totOutputBuffers=%d totIntermediateBuffers=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: inputBufferSymbolIndex[%d] = 0x%x inputBufferSurfaceId[%d]=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: outputBufferSymbolIndex[%d] = 0x%x outputBufferSurfaceId[%d]=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: weightsBufferSurfaceId= 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: inputBufferSurfaceId[%d]=0x%x is invalid\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: outputBufferSurfaceId[%d]=0x%x is invalid\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: IOSurface protection check failed! inputProtectionOptions: 0x%llx outputProtectionOptions: 0x%llx programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: No inference Request for LLM base model network with programHandle 0x%llx, procedureId: %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Single Request Mode for network programHandle 0x%llx...Block here waiting for ANE Requests to Finish, requestCountWithFirmware: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Process invalid after waiting for ANE Requests to finish. programResource: %p ProcessParams: %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: programHandle: 0x%llx, Timed out waiting for ANE Requests to finish.Retrying...retries=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Exhausted all retries waiting for ANE Requests to finish. Exiting\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: waitForPendingUpdate failed result = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to remap/relocate the program for programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to reload the program for programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Cannot find program or program info for  programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: process is not prepared\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Process invalid after trying to restore, programHande: 0x%llx. programId: %d, processId: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Process not restored, programId: %d, processId: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Shifting request priority for realtime client programHandle: 0x%llx programId: %d, original priority: %d new priority: %d clientName: %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: High priority request present, returning error, result = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Externally allocated intermediate buffers are not allowed on customer installs\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[INFO] %s: %s: cannot update intermediate union handle: 0x%llx useCount: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: %d sec sleep timed out waiting intermediate buffer becomes available\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Exceed max intermidiate buffer wait time: %llu sec, result: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programHandle: 0x%llx intermediateUnionHandle: 0x%llx useCount: %d inUseIndex: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: cannot find intermediateUnion programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: procedureId: 0x%x not found!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Number of inputs passed (%d) does not match expected (%d) for procedure %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Number of outputs passed (%d) does not match expected (%d) for procedure %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Total number of inputs (%d) + outputs (%d) + weights (%d) is larger than kANEMaxBuffers (%d)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Invalid Config - BlockonFences cannot be set with Shared Events, Ignoring blockOnFences\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice51ANE_ProgramSendRequestInitialChecksAndLookups_gatedEP21ANEProgramRequestArgsP15ANESharedEventsP37ANEProgramSendRequestAdditionalParams",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice28ANE_ProgramSendRequest_gatedEP21ANEProgramRequestArgsP15ANESharedEventsP37ANEProgramSendRequestAdditionalParams",
                "____ZN11ANEHWDevice22ANE_ProgramSendRequestEP21ANEProgramRequestArgsPyPvbP18ANEReqCallbackDataP4taskP15ANESharedEvents_block_invoke_2",
                "__ZN11ANEHWDevice22ANE_ProgramSendRequestEP21ANEProgramRequestArgsPyPvbP18ANEReqCallbackDataP4taskP15ANESharedEvents"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: memoryMapRequest allocation failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: MemoryMapRequest for %u buffers, result: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice39ANE_ProgramCheckandPrewireBuffers_gatedEP14ANEBufferCacheP21ANEProgramRequestArgsP37ANEProgramSendRequestAdditionalParamsRNSt3__110unique_ptrI21ANEResourceCollectionNS6_14default_deleteIS8_EEEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Process invalid. programId: %d, processId: %d, transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANERequest::create() allocation failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DEBUG: Input %d - Symbol:%s BufferIndex = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DEBUG: Output %d - Symbol:%s BufferIndex = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to get shared memory Cluster mutable index: %d for request with procId: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: ProcessParams is not valid for programHandle: 0x%llx, programId: %u, processId: %u, transactionId: 0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: buildFirmwareRequest failed. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Queuing request as cacheHandle is unavailable programId: %d, processId: %d, transactionId: 0x%llx enableFWToFW: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Queuing F2F request as intermediateUnion is unavailable programId: %d, processId: %d, transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: programId: %d, processId: %d, transactionId: 0x%llx, process freed while waiting for the CSNE_CMD_PROCEDURE_CALL_CACHE_REQUEST\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CSNE_CMD_PROCEDURE_CALL_CACHE_REQUEST success: uuid: 0x%llx cacheHandle: 0x%llx programId: %d processId: %d transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: CSNE_CMD_PROCEDURE_CALL_CACHE_REQUEST failed: 0x%x for uuid: 0x%llx programId: %d processId: %d transactionId: 0x%llx numProcCacheHandles: %d numF2FProcCacheHandles: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: FW shared event doorbell uuid: 0x%llx cachehandle: 0x%llx, transactionId: 0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Queuing request at driver - acquiredAllFences(%d), acquiredAllWaitEvents(%d), programId: %d, processId: %d, transactionId: 0x%llx \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ProcessParams is not valid for programHandle: 0x%llx, programId: %u, processId: %u, transactionId: 0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: CSNE_CMD_PROCEDURE_CALL failed = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANE got power gated while waiting for command to complete\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Queuing request at driver - acquiredAllFences(%d), acquiredAllWaitEvents(%d), isFirmwareResourceAvailable(%d), programDartMapped: %d, processDartMapped: %d, programId: %d, processId: %d, transactionId: 0x%llx, pendingUpdate: %u isIntermediateUnionReady(%d)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice40ANE_ProgramPrepareAndSubmitRequest_gatedEP21ANEProgramRequestArgsP15ANESharedEventsP37ANEProgramSendRequestAdditionalParams",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice28ANE_ProgramSendRequest_gatedEP21ANEProgramRequestArgsP15ANESharedEventsP37ANEProgramSendRequestAdditionalParams",
                "____ZN11ANEHWDevice22ANE_ProgramSendRequestEP21ANEProgramRequestArgsPyPvbP18ANEReqCallbackDataP4taskP15ANESharedEvents_block_invoke_2",
                "__ZN11ANEHWDevice22ANE_ProgramSendRequestEP21ANEProgramRequestArgsPyPvbP18ANEReqCallbackDataP4taskP15ANESharedEvents"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[INFO] %s: %s: ANEHWDevice: ANE is already off.. Retry power ON \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: programHandle: 0x%llx, Not setting up the MemoryMap for the BufferCache as ANE is already off \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: programHandle: 0x%llx, Client Not found, dropping the memoryMap request\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programHandle: 0x%llx, procedureId: %u not found!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: buffercache for programHandle: 0x%llx, is currently used for MemoryMap requests. Remaining IOs will be wired now\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Procedure has coalesced IOs, pretend to pre-wire since autoPrewiring will handle it %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: buffercache for programHandle: 0x%llx, is currently used for autoPrewired requests, cannot be re-used for MemoryMap requests\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programHandle: 0x%llx, programId: %u, processId: %u, procedureId %u, bufferCount: %u, numCachedResources: %u useState: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to allocate inputBuffersMappingInfo\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to allocate outputBuffersMappingInfo\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to allocate ANERequest\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Input %d - Symbol:%s SymbolIndex: %u UsageType: %u SurfaceId: %u BufferIndex: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Input buffer surface id:%u for symbol:%s Plane Count not Match, count=%d expected=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Input buffer surface id:%u for symbol:%s, plane:%u, smaller than expected! surfaceSize=%d expected=%d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Input buffer surface id:%u has plane offset with circularBuffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Input IOSurface for surface-Id: %d is nullptr\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed when processing input buffers\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: coalescing case should not have compressed Input\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: coalescing case should not have multi-plane Input\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: coalescing case should not have circular buffer Input\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Coalesced Input BufferIndex=%d SurfaceID: %u Symbol=%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Input BufferIndex=%d SurfaceID: %u Symbol=%s UsageType: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Output %d - Symbol:%s SymbolIndex: %u SurfaceId: %u BufferIndex: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Output buffer surface id:%u for symbol:%s Plane Count not Match, count=%d expected=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Output buffer surface id:%u for symbol:%s, plane:%u, smaller than expected! surfaceSize=%d expected=%d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Output buffer surface id:%u has plane offset with circularBuffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Output IOSurface for surface-Id: %d is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed when processing output buffers\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: coalescing case should not have compressed Output\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: coalescing case should not have multi-plane Output\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: coalescing case should not have circular buffer Output\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Coalesced Output BufferIndex=%d SurfaceID: %u Symbol=%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Output BufferIndex=%d SurfaceID: %u Symbol=%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to wire request resources. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to dartMap request resources. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26ANE_MemoryMapRequest_gatedEPK18ANEMemoryMapParamsbbRNSt3__110unique_ptrI21ANEResourceCollectionNS3_14default_deleteIS5_EEEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: programHandle: 0x%llx, Not performing the MemoryUnMap for the BufferCache as ANE is already off \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: programHandle: 0x%llx, Client Not found, dropping the memoryUnMap request\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: programHandle: 0x%llx, procedureId: %u not found!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Procedure has coalesced IOs, pretend to unwire since autoPrewiring will handle it %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programHandle: 0x%llx, programId: %u, processId: %u, procedureId %u, bufferCount: %u, numCachedResources: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programHandle: 0x%llx, usageType: %d, symbolIndex: %u, surfaceId: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: No resource in the buffer cache for programHandle: 0x%llx, surfaceId: %u, type: %d, symbolIndex: %u. Skipping\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice28ANE_MemoryUnMapRequest_gatedEPK18ANEMemoryMapParams",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice22ANE_MemoryUnMapRequestEPK18ANEMemoryMapParams_block_invoke",
                "__ZN11ANEHWDevice22ANE_MemoryUnMapRequestEPK18ANEMemoryMapParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: fDataChainingSleepInProgress on dataChaining client\n ",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: not able to find client: 0x%llx\n ",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[INFO] %s: %s: ANE is off.. fANEDriverInitiatedSleepSupported=%d fFirmwareTimeout=%d fIsPowered=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Still destroying program, even with ANE already off\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Firmware is suspended, force coldboot so that we restore the correct FW state on power up\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ERROR: Program NOT Found programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: pProgramResource->programId: %d destroyArgs->programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE_ProcessDestroy_gated failed with status=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: refCountDecrement=%d, clientTotalRefCount=%u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: metaDataBufferUserMap release\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ReleaseProgramResource failed with status=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZN11ANEHWDevice22ReleaseProgramResourceEP18ANEProgramResourceb"
                },
                {
                    "string": "%s: %s: Removing programHandle: 0x%llx from client program list. client: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24ANE_ProgramDestroy_gatedEP21ANEProgramDestroyArgsb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: Program not found for createArgs->programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: program is being released, could not create process\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: client not specified, createArgs->programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: createProcessStatus: %x, programHandle: 0x%llx programId: %d processId: %d isProcessRecreate: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: Process recreate failed to complete, program/process cleaned up in the middle of re-creating it result: %x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Client went away in the middle of processCreate\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: Program became invalid in the middle of processCreate result: %x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: process create failed for programid: %d programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23ANE_ProcessCreate_gatedEP20ANEProcessCreateArgsP26ANEProcessCreateArgsOutputP18ANEProgramResource",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: WARN: client not exists in the process\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23ANE_ProcessCreate_gatedEP20ANEProcessCreateArgsP26ANEProcessCreateArgsOutputP18ANEProgramResource.cold.3",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice23ANE_ProcessCreate_gatedEP20ANEProcessCreateArgsP26ANEProcessCreateArgsOutputP18ANEProgramResource"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: WARN: Process recreate failed to complete, client went away in the middle of re-creating it result: %x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23ANE_ProcessCreate_gatedEP20ANEProcessCreateArgsP26ANEProcessCreateArgsOutputP18ANEProgramResource.cold.2",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice23ANE_ProcessCreate_gatedEP20ANEProcessCreateArgsP26ANEProcessCreateArgsOutputP18ANEProgramResource"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Program not found\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: processList is uninitialized\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: Timed out waiting for all processes created before program release programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Program not valid\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Program handle 0x%llx not found for client %p clientName %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Destroying programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ProcessAbort failed. result = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Process already freed while waiting CSNE_CMD_TERMINATE_PROCESS command for Program handle 0x%llx not found for client %p clientName %s. Exiting..\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24ANE_ProcessDestroy_gatedEP21ANEProcessDestroyArgsbbP18ANEProgramResourcePjS4_",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: processList is empty\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24ANE_ProcessDestroy_gatedEP21ANEProcessDestroyArgsbbP18ANEProgramResourcePjS4_.cold.3",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice24ANE_ProcessDestroy_gatedEP21ANEProcessDestroyArgsbbP18ANEProgramResourcePjS4_"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Removed client %s from programHandle: 0x%llx. Num clients for process: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice24ANE_ProcessDestroy_gatedEP21ANEProcessDestroyArgsbbP18ANEProgramResourcePjS4__block_invoke.cold.1",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice24ANE_ProcessDestroy_gatedEP21ANEProcessDestroyArgsbbP18ANEProgramResourcePjS4__block_invoke",
                "__ZN11ANEHWDevice24ANE_ProcessDestroy_gatedEP21ANEProcessDestroyArgsbbP18ANEProgramResourcePjS4_"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: remove program with handle (0x%llx) from client's (%s) program list\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice24ANE_ProcessDestroy_gatedEP21ANEProcessDestroyArgsbbP18ANEProgramResourcePjS4__block_invoke.67",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice24ANE_ProcessDestroy_gatedEP21ANEProcessDestroyArgsbbP18ANEProgramResourcePjS4_"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: %d clients still using programHandle: 0x%llx, not destroying it\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24ANE_ProcessDestroy_gatedEP21ANEProcessDestroyArgsbbP18ANEProgramResourcePjS4_.cold.1",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice24ANE_ProcessDestroy_gatedEP21ANEProcessDestroyArgsbbP18ANEProgramResourcePjS4_"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: buffer[%d] valid=%d bufferIndex=%d type=%d(input) size=%llu buffer=0x%llx, surfaceId: 0x%x, offset: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZZN11ANEHWDevice38buildFirmwareProcedureCallCacheRequestEP10ANERequestENK3$_0clERNSt3__110shared_ptrI11ANEResourceEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: DEBUG: procedureCallCommand buffer valid=%d bufferIndex=%d type=%d size=%llu buffer=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZZN11ANEHWDevice33buildFirmwareProcedureCallRequestEP10ANERequestENK3$_0clERNSt3__110shared_ptrI11ANEResourceEER21sCSneBufferDescriptor",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s %d: could not fetch the DART capability object\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s %d: Setting next allocation address to %x, offset %x, pagesizeshift %x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16ANEInVMAllocator17setNextAllocationEy",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice22ANE_MapMPMMemory_gatedEyP24IOBufferMemoryDescriptor"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s %d: Could not initialize the superclass\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16ANEInVMAllocator4initEP8IOMapperj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "fANEMessageEnqueueFunction is null\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN21ANEDriverMessageQueue26ANE_enqueueMsgForANEDriverEP10ANEMessage",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: Invalid thread cmd flavor",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeProgramValidateLCThread",
            "prototype": "",
            "backtrace": [
                "__Z34ZinComputeProgramSharedValidHeaderI17ZinComputeProgramEbPKvmm",
                "__Z35ZinComputeProgramMakeWithMappedSizePKvmmPP17ZinComputeProgram"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: ZinComputeInitSneProgramOperationBuf failed with code %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: ZinComputeInitSneProgramProcedureBuf failed with code %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: ZinComputeInitSneProgramSegmentPropertyBuf failed with code %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: ZinComputeInitSneProgramTdPropertyBuf failed with code %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal section",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Error: calculating sne procedure section buffer size",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeInitSneProgram",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "DEBUG: H11ANEIn: segment segs_operations->tot = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG:H11ANEIn: segment Op %d: opType=%d nbrOfLocalBarSetup=%d nbrNE=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG:H11ANEIn: segment barSetup[%d] barIndex=%d bufferIndex=%d \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG: H11ANEIn: tds_operations->tot = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG:H11ANEIn: Op %d: opType=%d startTDAddress=%d endTDAddress=%d tdSize=%d nbrOfLocalBarSetup=%d nbrNE=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG:H11ANEIn: Op %d: opType=%d startTDIndex=%d endTDIndex=%d startTDSize=%d nbrOfLocalBarSetup=%d nbrNE=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Invalid FW operation optype",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputePrintOperationSection",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: ZinComputeInitSegmentPropertySection failed with %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: ZinComputeInitTdPropertySection failed with %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: ZinComputeInitSneSegmentPropertySection failed with st=%d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Illegal Segment address: seg_addr=%llu  section addr=%llu ",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal segment id at op_idx=%zu",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: ZinComputeInitSneTdPropertySection failed with st=%d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal (null) 'td' at op_idx=%zu, td_idx=%zu",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeInitTextPropertySection",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "DEBUG: H11ANEIn: SegProperty[%d] : segmentId %d , numofTdInSeg: %d, firstTd: %d, offset %llu len %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG: H11ANEIn:tds_prop->tot = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DEBUG: H11ANEIn: TDProperty[%d] : taskId %d offset %u len %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputePrintTextPropertySection",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: ZinComputeInitGenericSection failed with %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: ZinComputeInitOperationSection failed with %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: ZinComputeInitProcedureSection failed with %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: ZinComputeInitTextPropertySection failed with %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeInitAllSections",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "ZinComputeLookupBuffer: invalid input parameters \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeLookupBuffer",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ZinComputeGetProgramSections: invalid input parameters \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ZinComputeGetProgramSections: allocation failed \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ZinComputeGetProgramSections: invalid section \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ZinComputeGetProgramSections: error! section addr > segment addr \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ZinComputeGetProgramSections: allocated wrong size\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeGetProgramSections",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource25initMutableKernelSectionsEP26ANEProgramCreateArgsOutputP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams",
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "Out of range procedure count",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZL37ZinComputeInitSneGetNumOfFWOperationsPK17ZinComputeProgram",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: illegal (null) operation or thread with op_idx=%zu",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal operation with op_idx=%zu : incorrect thread 'flavor'",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZL37ZinComputeInitSneProgramTdPropertyBufPK17ZinComputeProgramP20ZinComputeProgramSne",
            "prototype": "",
            "backtrace": [
                "_ZinComputeInitSneProgram"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: Illegal TD address: td_addr=%llu   section end addr=%llu TD addreess over \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZL36ZinComputeProgramAneOperationTdCountPK17ZinComputeProgramPK18ProcedureOperation",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: illegal section parameter = NULL",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeProgramFindFvmlibSpan",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: illegal program parameter = NULL",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Unable to find the init section",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeProgramMakeInitInfo",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 2,
            "anchors": [
                {
                    "string": "Could not determine TD partition of operation",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "The number of operations that scheduled next cannot be more than two",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "The next operation id could not be found",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Allocation error while collecting operation schedule info",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Failed memory allocation: prev_operations",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeProgramCollectOperationScheduleInfo",
            "prototype": "",
            "backtrace": [
                "__ZL31ZinComputeProgramMakeProceduresP17ZinComputeProgram",
                "__Z35ZinComputeProgramMakeWithMappedSizePKvmmPP17ZinComputeProgram"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "Inconsistent ANE operations count.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeProgramProcedureGetAneOperations",
            "prototype": "",
            "backtrace": [
                "_ZinComputeInitProcedureSection"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: illegal 'data' parameter",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal 'segments' parameter",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal 'segment_count' parameter = %zu",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal segment_index=%zu, (segment_count=%zu)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z39ZinComputeProgramSharedMakeSegmentsInitRNSt3__14spanI21ComputeProgramSegmentLm18446744073709551615EEEPKvS5_",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: illegal segment parameters: segments=%p segment_count=%zu",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal (null) 'symtab' parameter",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal (null) 'symbols' parameter",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal symbol idx=%u, symtab_cmd->nsyms=%u",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z38ZinComputeProgramSharedMakeSymbolsInitPKvS0_RKNSt3__14spanI21ComputeProgramSegmentLm18446744073709551615EEEPK14symtab_commandRNS2_I20ComputeProgramSymbolLm18446744073709551615EEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: illegal symbol parameters: symbols=%p symbol_count=%zu",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal reloc info",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z42ZinComputeProgramSharedMakeRelocationsInitPKvS0_RNSt3__14spanI21ComputeProgramSegmentLm18446744073709551615EEERNS2_I20ComputeProgramSymbolLm18446744073709551615EEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: LC_LOADFVMLIB command in RT program",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: LC_LOADFVMLIB_64 command in RT program",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z34ZinComputeProgramSharedValidHeaderI19ZinComputeProgramRTEbPKvmm",
            "prototype": "",
            "backtrace": [
                "__Z37ZinComputeProgramRTMakeWithMappedSizePKvmmPP19ZinComputeProgramRT"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Resource is already cached\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: No capacity available to cache the resource. CurrentResourceCount: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN14ANEBufferCache13cacheResourceENSt3__110shared_ptrI11ANEResourceEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: programHandle: 0x%llx bufferCache full! Failed to LRU remove buffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programHandle: 0x%llx currentCacheWiredMemorySize: %u + new buffer size: %u > maxCacheWiredMemorySize: %u. Freeing buffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: programHandle: 0x%llx current wired: %u memory exceeds max limit: %u. Failed to LRU remove buffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN14ANEBufferCache20hasAvailableCapacityEj",
            "prototype": "",
            "backtrace": [
                "__ZN14ANEBufferCache13cacheResourceENSt3__110shared_ptrI11ANEResourceEE"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: LRU release candidate: programHandle: 0x%llx, lruResourceId: 0x%llx, currentResourceCount: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Freed %u resources for programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN14ANEBufferCache24freeAutoPrewiredResourceEb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Sub-blocks already powered up\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Subblocks Successfully powered up \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Subblocks powered up failed. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice29EnableSubblocksClocksAndPowerEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: CPU already powered up\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CPU Successfully powered up \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CPU powered up failed. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23EnableCPUClocksAndPowerEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: kIODARTFunctionSetActive -> true\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Failed Tunable programming",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23EnableANEClocksAndPowerEbb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Already off\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: AXI2DTF (companion to ASC) is NOT idle retries=%d. ASCWRAP_IDLE_STATUS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: AXI2DTF (companion to ASC) is idle. retries=%d ASCWRAP_IDLE_STATUS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24DisableCPUClocksAndPowerEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice24DisableANEClocksAndPowerEb"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: fIsClocksPowerOn:%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Firmware timeout, indicate dirty shutdown to DART driver\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: DisableSubblocksClocksAndPower result = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: DisableCPUClocksAndPower result = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24DisableANEClocksAndPowerEb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: enableDeviceClock took = %lld uS\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: %d :ANE_CPU_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Power is already ON %d fIsClocksPowerOn=%d fIsAneSysClockOn=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice17enableAneSysClockEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Not disabling clock due to fIsPowered=%d or fDeInitInProgress=%d or fInitInProgress=%d or fFirmwareTimeout=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Power is already OFF %d fIsClocksPowerOn=%d fIsAneSysClockOn=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: %d: ANE_CPU_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: res=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice18disableAneSysClockEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice38ANEDynSysPowerGatingTimerTimeOut_gatedEv",
                "__ZN11ANEHWDevice32ANEDynSysPowerGatingTimerTimeOutEP18IOTimerEventSource",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: task=%p clientContext->fOwningTask=%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Matched task=%p clientContext->fOwningTask=%p name=%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  Not matched: %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22findClientByOwningTaskEP4taskP5OSSet",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice42setClientHintInitialChecksAndLookups_gatedEP13ANEClientHint",
                "____ZN11ANEHWDevice13setClientHintEP13ANEClientHint_block_invoke",
                "__ZN11ANEHWDevice13setClientHintEP13ANEClientHint"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: Bad argument codeSigningTeamId=%p codeSigningIdentity=%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Code signing matched for client %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23findClientByCodesigningEPhS0_P5OSSetb",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice42setClientHintInitialChecksAndLookups_gatedEP13ANEClientHint",
                "____ZN11ANEHWDevice13setClientHintEP13ANEClientHint_block_invoke",
                "__ZN11ANEHWDevice13setClientHintEP13ANEClientHint"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: could not find program for handle 0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Found client (%s) for program handle 0x%llx, is base model: %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: could not find client associated with program 0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice29lookupClientProgramWithHandleEyP5OSSetPP18ANEProgramResourceS1_PP16ANEClientContext",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice42setClientHintInitialChecksAndLookups_gatedEP13ANEClientHint",
                "____ZN11ANEHWDevice13setClientHintEP13ANEClientHint_block_invoke",
                "__ZN11ANEHWDevice13setClientHintEP13ANEClientHint"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Failed to open persistent client: res=0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Failed to power on persistent client: res=0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice29ANE_AddPersistentClient_gatedEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: ANE Sleep in progress...Block here waiting for ANE to come back from sleep\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Awakened on fSleepInProgress signal.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Timed out waiting for ANE to wake up. Retrying...retries=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE power on in progress...Block here waiting for ANE to be up\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Timed out waiting for ANE to be up. Retrying...retries=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE DARTUnmap in progress, fDartRemapInProgress: %d, fDartRemapInProgressForProgramHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Timed out waiting for ANE DART Unmap to be completed...retries=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE power status: isPowered: %d, fDeInitInProgress: %d, fFirmwareTimeout: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice35ANE_HandlePowerStateChecksForClientEbb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: DART map for ISP tx buffer status = 0x%08x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: IOMemoryDescriptor::withPhysicalAddress failed on ISP tx buffer \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DartMapMemoryDescriptor for ISP rx buffer status = 0x%08x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: IOMemoryDescriptor::withPhysicalAddress failed on ISP rx buffer \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DartMapMemoryDescriptor for ANE Interrupt Register status = 0x%08x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: IOMemoryDescriptor::withPhysicalAddress failed \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEISPEndPoints19dartMapIPCEndPointsE19AneIspEndpointIndexR25_IpcEndpointConfiguration",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice21ANE_SetPeerData_gatedEP8OSStringPvS2_"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: fISPEndpoints[%i] is not ready\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: EP has already been disbaled\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Send CSNE_CMD_IPC_ENDPOINT_UNSET2(index: %d) to FW!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: CSNE_CMD_IPC_ENDPOINT_UNSET2(index: %d) failed: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Send CSNE_CMD_UNLOAD_AFPP FD  networks with phy:0x%llx, size:0x%016llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: CSNE_CMD_UNLOAD_AFPP failed: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: No pIspAneNetworkSurface to Send CSNE_CMD_UNLOAD_AFPP FD\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Send CSNE_CMD_LOAD_AFPP FD networks with phy:0x%llx, size:0x%016llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: CSNE_CMD_LOAD_AFPP failed: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: No pIspAneNetworkSurface to Send CSNE_CMD_LOAD_AFPP FD\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Send CSNE_CMD_IPC_ENDPOINT_SET2(index:%d) to FW!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: CSNE_CMD_IPC_ENDPOINT_SET2/UNSET2(index:%d) failed: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEISPEndPoints19enableFWIPCEP_gatedE19AneIspEndpointIndexb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Peer service is Not available, no action\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE%d:%s - receving FD networks surfaceID: 0x%x and update flag:%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE%d: %s :ANEHWDevice: Ignore peer request for disable EP and let powerDidChange to disbale EP\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE_PowerOnByKernelClient_gated is called by ISP\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to start anePowerOnThread\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Received not supported Peer cmd: %x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN15ANEISPEndPoints26processIPCServiceMsg_gatedEP8OSStringPvS2_",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Received bad buffers from ISP\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Send interrupt info to peer. End point:%d, Reg: 0x%llx, Mask: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice21ANE_GetPeerData_gatedEP8OSStringPvS2_",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: tx buf = 0x%llx, tx size = 0x%08x, tx reg = 0x%llx, tx value = 0x%08x, rx buf = 0x%llx, rx size = 0x%08x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice21ANE_SetPeerData_gatedEP8OSStringPvS2_",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: ISP will power up, self state: %x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Peer down, disable IPC EP\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice27powerStateDidChangeTo_gatedEmmP9IOService",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice21powerStateDidChangeToEmmP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ISP-ANE: ProcStart. Event UUID: 0x%llx ClientNetworkID: %u HWTimestamp: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ISP-ANE: Work submit failed, UUID: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ISP-ANE: ProcEnd. Event UUID: 0x%llx ClientNetworkID: %u HWTimestamp: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ISP-ANE: ProcFailed. Event UUID: 0x%llx ClientNetworkID: %u HWTimestamp: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Removing ANEPerfRequest failed for UUID: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice21processISPEventReportEP25sAnsCmdProgramEventReport",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice28processTargetToHostIOCommandEyyy",
                "__ZN11ANEHWDevice23aneInterruptHandlerPrivEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice19aneInterruptHandlerEP22IOInterruptEventSourcei"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s::Peer matching failed, retrying with default AppleH10CamIn driver\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s::Found peer service(%p), register self for peer power state change\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s::Peer current power state: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s(self)::Peer(%s) matching failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16IPCEndPoint_Base16GetPeerIOServiceEP9IOService",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Error: couldn't create pDartDeviceMemoryManager for SharedMallocSize\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Error: couldn't create fDartInfoListLock\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice14setupDartRemapEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Invalid inMemDescriptor size\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: No available IODMACommand in pool. Allocating another.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: retrying mapping after flushing inactive cache entries, result=0x%08x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: failed to gen segments: 0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Dartmap fIOVMAddr address: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23dartMapMemoryDescriptorEP18IOMemoryDescriptorPP12IODMACommandPyP8IOMapperb20ANEResourceUsageTypeNSt3__110shared_ptrI11ANEResourceEEyPP20RTBuddyVisibleMemory",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: programResource is NULL",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE DARTRemap in progress, fDartRemapInProgress: %d, fDartRemapInProgressForProgramHandle: 0x%llx, programHandle: 0x%llx, retries: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Timed out waiting for ANE DART Unmap to be completed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE DARTRemap is done, fDartRemapInProgress: %d, fDartRemapInProgressForProgramHandle: 0x%llx, programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR Timed out waiting for ANE DART Unmap to be completed, absoluteTime: 0x%llx, deadline: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Failed to map buffer in DART, try to remove some mappings for programHandle: 0x%llx, programId: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: FreeUpDartSpace result: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: dartMapMemoryDescriptor success after FreeUpDartSpace for programHandle: 0x%llx, programId: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Failed to map buffer in DART after FreeUpDartSpace for programHandle: 0x%llx, programId: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice33dartMapMemoryDescriptorForProgramEP18IOMemoryDescriptorPP12IODMACommandPyP18ANEProgramResourceP8IOMapperb20ANEResourceUsageTypeNSt3__110shared_ptrI11ANEResourceEEb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: DartDeviceMemoryManager: No Memory\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: iovmInsert failed: 0x%x with dmaAddress: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: physOffset: 0x%llx, descriptorSize: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DartMap: DVA: 0x%llx\n, descrSize: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice41dartMapMemoryDescriptorSharedMallocRegionEP18IOMemoryDescriptorPyb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Freeing DVA: 0x%llx, size: %lu in sharedMalloc Dart Region\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: iovmInsert failed: 0x%x with dmaAddress: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: physOffset: 0x%llx, descriptorSize: 0x%lx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice43dartUnMapMemoryDescriptorSharedMallocRegionEP18IOMemoryDescriptoryjjm20ANEResourceUsageType",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: fDartInfoListInUseUnGated: %d, waiting\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fDartInfoListInUseUnGated: %d, retry: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fDartInfoListInUseGated: %d, waiting\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fDartInfoListInUseGated: %d, retry: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice19acquireDartInfoLockEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: usageType: %d, same as requested intermediateUnion, buffer:programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: usageType: %d, same as requested programResource, buffer:programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: usageType: %d, same as requested programResource, buffer:programHandle: 0x%llx, clientBufferType: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: clientBufferType:  0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: usageType: %d, score: %d, refCount: %lu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: usageType: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24getDartBufferFreeUpScoreEP21ANEDartAllocationInfoP18ANEProgramResource20ANEResourceUsageTypeNSt3__110shared_ptrI11ANEResourceEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Invalid parameter startIndex: %u, endIndex: %u, dartBufferCount: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Freeing index: %u, dva: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice27ANE_FreeUpDartBuffers_gatedEjj",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice21ANE_FreeUpDartBuffersEjj"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Removing mappings for programId: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Did not match program id %u due to size\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice25FreeUpDartByProgramUnloadEP18ANEProgramResourcem.cold.1",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice25FreeUpDartByProgramUnloadEP18ANEProgramResourcem",
                "__ZN11ANEHWDevice15FreeUpDartSpaceEP18ANEProgramResourcem20ANEResourceUsageTypeNSt3__110shared_ptrI11ANEResourceEE"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Did not match program id: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZN11ANEHWDevice25FreeUpDartByProgramUnloadEP18ANEProgramResourcem.cold.1"
                }
            ],
            "symbol": "__ZN11ANEHWDevice25FreeUpDartByProgramUnloadEP18ANEProgramResourcem",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice15FreeUpDartSpaceEP18ANEProgramResourcem20ANEResourceUsageTypeNSt3__110shared_ptrI11ANEResourceEE"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: trying to freeup dart Space for size: %zu for usageType: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: fFirmwareTimeout: %d, fIsPowered: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: trying to freeup dart Space for usageType: %d, size: %lluK, with requested size: %zuK, programHandle: 0x%llx, numWindowsNeeded: %u, retries: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: i:%d, windowIndex: %u, score: %u, windowScore[%u]: %u, for programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: i:%d, score: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Selected windows: %d-%d to unmap, windowSize: 0x%llx, windowsAdddressRange: [0x%llx - 0x%llx) , score: %u, programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: No window available for unmapping, for programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: sleeping to wait for event: programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: timed out waiting for ANE Requests to finish.Retrying...retries: %u, programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: commandWake from fDartRemapInProgress, retries: %u, programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: unmapping windows index %d - %d, for pramHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Freeing programHandle: 0x%llx, i: %u, dva: 0x%llx, size: %llu, windowIndex: %u, windowEndIndex: %u, selectedWindowIndex: %d-%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed FreeUpDartBuffer result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice15FreeUpDartSpaceEP18ANEProgramResourcem20ANEResourceUsageTypeNSt3__110shared_ptrI11ANEResourceEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: makeMemoryVisible Not supported in legacy mode\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Invalid Input parameter(s) inMemDescriptor %p pOutPhysicalAddress %p pVisibleMemory %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to DART map the memory\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Dartmap fIOVMAddr address: 0x%llx *pVisibleMemory %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice17makeMemoryVisibleEP18IOMemoryDescriptorPyPP20RTBuddyVisibleMemoryb20ANEResourceUsageTypeNSt3__110shared_ptrI11ANEResourceEEy",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: Timedout waiting for dartRemap Lock, startTime: 0x%llx, deadline: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Timedout waiting for dartRemap Lock, startTime: 0x%llx, currentTime: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: retry: %d, dartMapLock: %d, startTime: 0x%llx, currentTime: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZNK11ANEHWDevice12commandSleepEPvj"
                }
            ],
            "symbol": "__ZN11ANEHWDevice18acquireDartMapLockEPv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Throttle value changed Old=%d New=%d ioFenceCallback=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: WorkSubmit failed!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice13timeOut_gatedEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice7timeOutEP18IOTimerEventSource",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE%d: %s - No capability parameters\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s messageType=0x%x changeFlags=0x%x capabilities=(0x%x -> 0x%x)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s Warning: no target\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice21ANEPowerChangeHandlerEPvS0_jP9IOServiceS0_m",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: fDriverInitiatedSleepAssertions =1, disabling  driver initiated sleep timer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Disabled driver initiated sleep timer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fAneSysClockAssertions =1, enabling ane sys clock\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE SYS clock enable time = %lld uS\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24DisableDriverSleepTimersEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: fDriverInitiatedSleepAssertions=0, checking other conditions now\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Enabled driver initiated sleep timer! fANEDriverInitiatedSleepTimerPeriodMs=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Not re-enabling driver initiated sleep timer, IsLatencySensitiveClientPresent=%d pendingRequests=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Not re-enabling driver initiated sleep timer, fSystemInitiatedSleep=%d fSleepInProgress = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Not starting driver initiated sleep timer, fDriverInitiatedSleepAssertions=%u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fAneSysClockAssertions=0, setting off timer to disable ane sys clock\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24RestartDriverSleepTimersEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Boot-arg override of ANE sleep timer set to %d ms, ignoring config value from userland\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Client passed -1 for driver initiated sleep timer period, ignoring\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Client passed 0 for driver initiated sleep timer period, disabling sleep timer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice44ANE_SetDriverInitiatedSleepTimerPeriod_gatedEj",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice38ANE_SetDriverInitiatedSleepTimerPeriodEj_block_invoke",
                "__ZN11ANEHWDevice38ANE_SetDriverInitiatedSleepTimerPeriodEj"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: fDriverInitiatedSleepAssertions(%d) is non-zero, not powering off ANE in the sleep timer callback\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: Latency sensitive client present, not powering off ANE in DriverInitiatedSleepTimerTimeOut callback\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Pending requests count(%d) is not zero, not powering off ANE in DriverInitiatedSleepTimerTimeOut callback\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: outstanding commands count(%d) is not zero, not powering off ANE in DriverInitiatedSleepTimerTimeOut callback\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: procCallCacheHandles (%d) or F2FProcCallCacheHandles (%d) is not zero, not powering off ANE in DriverInitiatedSleepTimerTimeOut callback\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: There is another timeout handler is running to drain fUnwireResourceQueue\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Powering off ANE\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice38DriverInitiatedSleepTimerTimeOut_gatedEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Could not read the data section copy offset",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Could not read the data section start offset",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Could not read the data section end offset",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice21ReadPatchBayVariablesEP15RTBuddyFirmware",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Could not cast the provider to RTBuddy Service, exiting\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Could not cast rtbuddy service provider, exiting\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Could not get a matching provider, exiting\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23InitializeRTBuddyClientEP9IOService",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice18InitializeProviderEP9IOService",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANEHWDevice:: ANEDynSysPowerGatingTimerTimeOut\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice32ANEDynSysPowerGatingTimerTimeOutEP18IOTimerEventSource",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: no clocks. returning \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: polling all channels\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: pending: 0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: For IPC channel %d, driver WAS able to dequeue a message after delay/retry %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: For IPC channel %d, driver was unable to dequeue a message after delay/retry. chanReceiveResult=%d, pendingInterrupts=0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: We're done receiving packets on this pipe src=0x%x\n ",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: processSharedMallocRequest\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: processTargetToHostIOCommand, messageSize: %llu at %lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23aneInterruptHandlerPrivEP22IOInterruptEventSourcei",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice19aneInterruptHandlerEP22IOInterruptEventSourcei"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: clientname %s isPowered %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice18ANE_PowerOff_gatedEPv_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice18ANE_PowerOff_gatedEPv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: clientname:%s isPowered:%d Programs Open:%d Wired-Memory:%lld B\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice18ANE_PowerOff_gatedEPv_block_invoke.129",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice18ANE_PowerOff_gatedEPv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ANECPU Firmware:\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: surface-id=0x%08X, size=0x%016llx, dartMapBase=0x%016llx\n\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CTRR ANECPU Firmware:\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CTRR firmware starts at virtual address: 0x%llx, has length: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CTRR firmware heap has ANEHWDevice::surface-id=0x%08X, size=%-8d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Driver Heap/Pipes/Commands:\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: surface-id=0x%08X, size=%-8d, dartMapBase=0x%016llX\n\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: intermediateUnions count: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: total intermediate buffer allocation size: %lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fPersistentSharedMemorySurfaces count: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: total persistent shared allocation size: %lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: total non-persistent shared allocation size: %lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: total shared allocation size: %lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Total clients surface DART map size: %lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fPersistentSharedMemorySurfacesPendingRelease count: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: total persistent shared allocation release pending size: %lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fNonPersistentSharedMemorySurfacesPendingRelease count: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: total non-persistent shared allocation size pending release: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: total shared allocation size pending release: %lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fProgramResourcePendingRelease count: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programId: %d programSize: 0x%llu",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: kernelSectionBuffer size: 0x%llx dartMapbase: 0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: textSectionBuffer size: 0x%llx dartMapbase: 0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: mutableInitSectionBuffer size: 0x%llx dartMapbase: 0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: baseMutableSection[%d] size: 0x%llx dartMapbase: 0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Recently unmapped DART allocations :\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: free#%d dva: %p end: %p size: %d timestamp: %lld uS timestampFW: %lld programId: %d processId: %d usageType: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: current DART allocations :\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fIODMACommandCount = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  Clients DB\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  Max number of programs supported = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  Max number of processes supported = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  Max number of requests per process supported = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  Max number of requests per priority supported = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  Max cache requests supported = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  Total Number of programs = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  Total Number of processes = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  Total Number of pending requests with firmware = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  Total number of pending requests with driver = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  Total Number of outstanding commands with firmware = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  Total Number of outstanding commands with driver = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  Peak Number of outstanding commands with firmware = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  number of CacheHandles open: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  number of F2FCacheHandles open: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  number of WorkSubmitted: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  number of WorkSubmitFailed: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  number of WorkBegan: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  number of WorkEnded: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  fANEPowerManagementEnabled = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  fANEPrepowerUpEnabled = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  fANEDynPowerGateActive = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  fIsANEDynPowerGateHysteresisSupported = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  fANEDynPowerGateHysteresisEnabled = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  fANEPrePowerUpAssertions = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  fForceMapProgramBufferReadWrite = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  fEnforceModelSignatureChecks = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  fAneContextSwitchLatencyThreshold = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Statistics:\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:    _numANEStartFirmware: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:    _numANEResumes: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:    _numANEResumesFailed: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:    _numANESuspendsSuccessful: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:    _numANESuspendsFailed: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:    _numANEDeInits: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:    _numANETimeouts: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:    _numANEInitFailures: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:    _numJetsamTriggeredANEColdStarts: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice37ANE_ShowSharedMemoryAllocations_gatedEb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Found wired client surface-id:0x%08X, dartMapBase=0x%016llX\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice37ANE_ShowSharedMemoryAllocations_gatedEb_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice37ANE_ShowSharedMemoryAllocations_gatedEb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Client #%d isPowered: %d clientName: %s Programs Open: %d Wired-Memory: %lld B\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice37ANE_ShowSharedMemoryAllocations_gatedEb_block_invoke.150",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice37ANE_ShowSharedMemoryAllocations_gatedEb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "***********Starting dump hardware registers:************\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Starting scratch registers:\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_SCRATCH0 = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_SCRATCH1 = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_SCRATCH2 = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_SCRATCH3 = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_SCRATCH4 = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_SCRATCH5 = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_SCRATCH6 = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_SCRATCH7 = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Starting CPU registers:\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_ASCWRAP_IDLE_STATUS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_ASC_CPU_EDPRCR = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Starting PS registers:\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rPMGR_ANE1_SYS_CPU_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rPMGR_ANE2_SYS_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rPMGR_ANE2_SYS_CPU_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rPMGR_ANE2_BASE_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rPMGR_ANE2_SET1_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rPMGR_ANE2_SET2_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rPMGR_ANE2_SET3_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rPMGR_ANE2_SET4_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rPMGR_ANE3_SYS_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rPMGR_ANE3_SYS_CPU_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rPMGR_ANE3_BASE_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rPMGR_ANE3_SET1_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rPMGR_ANE3_SET2_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rPMGR_ANE3_SET3_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rPMGR_ANE3_SET4_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rPMGR_ANE_SET4_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rPMGR_ANE1_CPU_PS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Starting CPU_IMPL registers:\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_IO_RVBAR = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_TRACE_CORE_CFG = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_CYC_CFG = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_CYC_OVRD = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_CPU_IMPL_THID0 = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_CPU_IMPL_THID1 = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_CPU_IMPL_THID2 = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_CPU_IMPL_THID3 = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_CPU_IMPL_THID10 = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_T_LSU_ERR_STS = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_T_LSU_ERR_CTL = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_T_FED_ERR_STS = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_T_FED_ERR_CTL = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Starting ASC_IMPL registers:\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_L2C_ERR_STS = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_L2C_ERR_ADR = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_L2C_ERR_INF = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_HID5 = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_HID6 = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_PWRDNSAVE0 = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_PWRDNSAVE1 = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_HID8 = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_HID12 = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_AF_ERR_CFG0 = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_AP_ERR_CFG0 = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_L2_CPUREQVC = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_L2_CRAMCONFIG = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_DL2_DATA0 = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   rANE_CHINOOK_DL2_DATA1 = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "***********End of dump hardware registers:************\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice16DumpANERegistersEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: Failed to enable streams, bad arguments. streamInfo: 0x%llx, mcDriverStreamObj: 0x%llx \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Sent the Mcache Quota request for size: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to send Mcache Quota request for size: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN17ANEMemcacheClient16enableDataStreamEP22MCDataStreamInfoObjectPNS_24McacheDriverStreamObjectE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Found MCstream Object with stream id: 0x%x with index: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: New MCstream Object with stream id: 0x%x with index: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to find MCstream Object with stream id: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN17ANEMemcacheClient20findStreamObjectByIDE14MCDataStreamId",
            "prototype": "",
            "backtrace": [
                "__ZN17ANEMemcacheClient19mcacheUpdateRequestE14MCDataStreamIdjbj"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: CSNE_CMD_MCACHE_SIZE_GET successful, Mcache expected size: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to enable mcache stream id: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to copy DSIDs\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: kANE_Victims dsid: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: CSNE_CMD_DSID_SET Failed: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Get fMcacheStreamInfo kANE_IntermediateSpillsLo failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN17ANEMemcacheClient20powerOnMcacheRequestEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice8ANE_InitEv",
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: fMcacheHandle is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: stream Id :%d not found\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Wrong stream ID: %d for device\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to update Mcache Quota request for size: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN17ANEMemcacheClient19mcacheUpdateRequestE14MCDataStreamIdjbj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Mcache kANE_Prefetch DSID: %d is not valid",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: mcache DSID: %d streamID: 0x%x, size: 0x%x, isAdding: %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Mcache DSID: %d is not valid for MCACHE_INTERMEDIATE_SPILL_LO_DSID\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Mcache kANE_IntermediateSpillsLo DSID: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Mcache DSID: %d is not valid for MCACHE_INTERMEDIATE_SPILL_HI_DSID\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Mcache kANE_IntermediateSpillsHi DSID: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Invalid stream ID 0x%x to update Mcache request for size: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN17ANEMemcacheClient22updateStreamMcacheSizeE14MCDataStreamIdjbj",
            "prototype": "",
            "backtrace": [
                "__ZN17ANEMemcacheClient19mcacheUpdateRequestE14MCDataStreamIdjbj"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Invalid ITQ register offset\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Could not create Exclave Workloop\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Could not create Exclave CommandGate\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Could not add Exclave CommandGate to Workloop\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Setting up Exclave IOFIES failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't add Exclave IOFIES to WorkLoop\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Setting up Exclave IOIES failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't add Exclave IOIES to WorkLoop\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: exclaveStart failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: exclaveStart succeeded, driverEP: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Driver tb_endpoint in NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Driver tb_endpoint initialized\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Driver tb_endpoint_driver_debug in NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Driver tb_endpoint_driver_debug initialized\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: InterruptHandler tb_endpoint is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Firmware tb_endpoint initialized\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Driver Tightbeam init failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Firmware Tightbeam init failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Notication registered with ID: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Couldn't add Exclave Upcall IOIES to WorkLoop\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Added Exclave Upcall IOIES to Exclave WorkLoop\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Error in upcall notification registration %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice14ANEExclaveInitEP9IOService",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ITQ result: #TsInfo: %d, #Pending queries: %lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Too many pending requests, query deferred until next ITQ\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: RequestUUID: %lld startTS: %lld endTS: %lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Error (%d) during ITQ routing\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Unhandled error during ITQ routing\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice26aneExclaveInterruptHandlerEP22IOInterruptEventSourcei_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice26aneExclaveInterruptHandlerEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice14ANEExclaveInitEP9IOService",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Retry Exclave mode switch\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Removed persistent client for ANEExclave before retrying...\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Going to sleep before retrying persistent client re-registration...\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Timed out waiting for fFirmwareTimeout state to be cleared during Exclave mode switch, sleepResult=0x%x\n, retry count %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZNK11ANEHWDevice12commandSleepEPvj"
                },
                {
                    "string": "%s: %s: Firmware time state cleared... retrying Exclave mode switch sequence\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Added a persistent client for ANEExclave during retry attempt...\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Switching to Exclave mode now\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Switched to Exclave mode after retrying\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice20aneExclaveCycleRetryEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice15aneExclaveCycleEbb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Waiting for in-flight Exclave cycle to complete\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Timed out waiting for in-flight ModeSwitch to complete, sleepResult=0x%x, retry count %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ModeSwitch completed... proceeding\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Not in Exclave mode, no mode switch pending\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Added persistent client for ANEExclave\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Switching to Exclave mode\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Switched to Exclave mode\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Failed to transition into Exclave mode, (fFirmwareTimeout=%d) will retry\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: EXCLAVE mode -> SECURE mode\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Switching out of Exclave mode\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Failed to transition out of Exclave mode, (fFirmwareTimeout=%d) will not retry\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Switched out of Exclave mode\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Removed persistent client for ANEExclave\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice15aneExclaveCycleEbb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Requests to query %lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Querying status for: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: QueryResult failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: QueryResult returned %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Query duration: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice15aneExclaveQueryEy",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice22aneExclaveEventHandlerEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice14ANEExclaveInitEP9IOService",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Read property call returned %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22aneExclaveReadPropertyEjPy",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Write property call returned %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23aneExclaveWritePropertyEjj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: SaveState call failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: SaveState call returned %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice19aneExclaveSaveStateEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice20ANE_ExclaveSaveStateEv",
                "__ZN11ANEHWDevice22setPowerStateGatedPrivEmP9IOService",
                "__ZN11ANEHWDevice18setPowerStateGatedEmP9IOService",
                "__ZN11ANEHWDevice13setPowerStateEmP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: RestoreState call failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: RestoreState call returned %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22aneExclaveRestoreStateEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice23ANE_ExclaveRestoreStateEv",
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: Exclave mode not active\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Exclave state saved\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice20ANE_ExclaveSaveStateEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice22setPowerStateGatedPrivEmP9IOService",
                "__ZN11ANEHWDevice18setPowerStateGatedEmP9IOService",
                "__ZN11ANEHWDevice13setPowerStateEmP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: No exclave state to restore\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Restoring Exclave state\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Exclave state restored\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23ANE_ExclaveRestoreStateEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Exclave work paused with %d retries, %d msg send attempts\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Retrying Exclave work pause, Retry count %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Exceeded max retries. Proceeding with transition\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice16ANE_ExclavePauseEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice17ANE_PowerOn_gatedEPvb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ResumeExclaveWork call failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Exclave work resumed, status from Exclave %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice17ANE_ExclaveResumeEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice18ANE_PowerOff_gatedEPv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: EndFWRecoveryProcess call failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: EndFWRecoveryProcess call completed, status from Exclave %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice30aneExclaveEndFWRecoveryProcessEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice31ANE_ExclaveEndFWRecoveryProcessEv",
                "__ZN11ANEHWDevice22setPowerStateGatedPrivEmP9IOService",
                "__ZN11ANEHWDevice18setPowerStateGatedEmP9IOService",
                "__ZN11ANEHWDevice13setPowerStateEmP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: preparePowerOff call failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: preparePowerOff call completed, status from Exclave %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice25aneExclavePreparePowerOffEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice26ANE_ExclavePreparePowerOffEv",
                "__ZN11ANEHWDevice24DisableANEClocksAndPowerEb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: fwCpuLoadScore: %d, fwCpuThrottled: %d, fNumPendingRequestsToQueue: %d All pendingRequestCount: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fTimeOutRequestTimerActive: %d \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice32timeOutRequestTimerHandler_gatedEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice26timeOutRequestTimerHandlerEP18IOTimerEventSource",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: %s: returns: %llx, current value: %llx , cache value: %llx checkIfReset:%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Counters:%d value[%d]=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Counter:%d value[%d]=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": null
                }
            ],
            "symbol": "__ZN11ANEHWDevice23ReadPerformanceCountersEjPK14ANEPerfCounterPybbb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: disable mapper cache usage='%c%c%c%c'\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: took %llu us bufSize: %llu surfaceCreateTime: %llu us, prepareTime: %llu us, dartMapTime: %llu us\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Shared memory region mapped at DART translated address: 0x%016llx, requireMap: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Failed to map shared memory descriptor\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: dartMapMemoryDescriptor failed, result: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Failed to get shared memory buffer memory descriptor\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice27AllocateSharedMemorySurfaceEyPP28ANESharedMemorySurfaceParamsbjbbybiby",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Error: ReleaseSharedMemorySurface called on surface with no references!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Error: ReleaseSharedMemorySurface called on surface with no references\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26ReleaseSharedMemorySurfaceEy",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Error: size inconsistent: _sharedMemoryAllocationSize %llu, resource size %llu",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23FreeSharedMemorySurfaceENSt3__110shared_ptrI11ANEResourceEE",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice26cleanupAllChainingMappingsEP25ANEChainingCacheReqParams",
                "__ZN11ANEHWDevice33deleteProgramChainingCacheRequestEPP25ANEChainingCacheReqParams"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: fNonPersistentSharedMemorySurfaces: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Moved non-persistent shared surface into pending list. surface-id=0x%08X, size=%016llx, dartMapBase=%016llx usage='%c%c%c%c'\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Freed non-persistent shared surface. surface-id=0x%08X, size=0x%016llx, dartMapBase=0x%016llx usage='%c%c%c%c'\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Moved persistent shared surface into pending list. surface-id=0x%08X, size=0x%016llx, dartMapBase=0x%016llx usage='%c%c%c%c'\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Freed persistent shared surface. surface-id=0x%08X, size=0x%016llx, dartMapBase=0x%016llx usage='%c%c%c%c'\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23FreeSharedMemorySurfaceEybb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: messageANEAddress: %p, messageSize: 0x%llx, messageExtra: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE Memory free request for address: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE Memory allocation request for size: %llu, usage:'%c%c%c%c'\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: SharedMemoryAllocation failed for size: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE Memory allocation request success for size %llu bytes\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ISP SharedMallocRequest took %llu us\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: INFO: ISP SharedMallocRequest took %llu us for messageANEAddress: %p, messageSize: 0x%llx, messageExtra: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26processSharedMallocRequestEyyy",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice23aneInterruptHandlerPrivEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice19aneInterruptHandlerEP22IOInterruptEventSourcei"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Moved peer shared surface into pending list, surface-id=0x%08X, size=0x%016llx, dartMapBase=0x%016llx usage='%c%c%c%c'\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Freed mapped ISP surface. surface-id=0x%08X, size=0x%016llx, dartMapBase=0x%016llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Surface with PA (%p) not found in the ISP mapped surface list!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice33ANE_processISPSurfaceUnMapRequestEybb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: has surfaceID %d for FD Networks\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: No bForceUpdate update for FD Networks\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: No ANE_processIspAneNetworkSurfaceRemap update for FD Networks, surface ID is 0\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ISP surface(surface-id=0x%08X) doesn't exist\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Remapp FD network surface: Shared memory  region mapped at DART translated address: 0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ISP FD netorks remmapped surface ID(%d) virtual address: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to remap FD netowrks shared memory descriptor\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: dartMapMemoryDescriptor failed to remap ISP surface\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to get ISP remap memory buffer memory descriptor\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to remapped ISP surface(%d), clean up\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Successfully remap ISP surface. surface-id=0x%08X, surface address: %p, size=0x%016llx, dartMapBase=%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice36ANE_processIspAneNetworkSurfaceRemapEjb",
            "prototype": "",
            "backtrace": [
                "__ZN15ANEISPEndPoints26processIPCServiceMsg_gatedEP8OSStringPvS2_"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ISP peer surface %4d: surface-id=0x%08X, size=0x%016llx, dartMapBase=0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "%s: %s: total ISP remapped allocation size: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fPeerSharedMemorySurfaces count: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23ANE_showISPPeerSurfacesEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice37ANE_ShowSharedMemoryAllocations_gatedEb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Freed mapped ISP surface. surface-id=0x%08X, size=0x%016llx, dartMapBase=0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: dartUnMapMemoryDescriptorSharedMallocRegion failed. error: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26ANE_releaseAllPeerSurfacesEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice18power_off_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Freed mapped FD networks ISP surface. surface-id=0x%08X, size=0x%016llx, dartMapBase=0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: FD networks surface PA (%p) not found in fPersistentSharedMemorySurfaces list\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice36ANE_processIspAneNetworkSurfaceUnMapEy",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice36ANE_processIspAneNetworkSurfaceRemapEjb",
                "__ZN15ANEISPEndPoints26processIPCServiceMsg_gatedEP8OSStringPvS2_"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Couldn't map %s registers\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: %s registers: %p, length: 0x%llx, phys: %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN18ANERegisterControlC2EP16AppleARMIODevicejPKc",
            "prototype": "",
            "backtrace": [
                "__ZN18ANERegisterControlC1EP16AppleARMIODevicejPKc"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Terminating with 0x%08x outstanding transactions (offset 0x%lx) \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZNK18ANERegisterControl6read32Ej"
                },
                {
                    "string": "%s: %s: %08x outstanding transactions (TLIMIT reg offset 0x%lx) \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZNK18ANERegisterControl6read32Ej"
                },
                {
                    "string": "%s: %s: Terminating with 0x%08x downstream outstanding transactions (offset 0x%lx) \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice32ANETLimitHandlingDuringPowerDownEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Error: Firmware Back Channel RPC Request has too many commands: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Error: Firmware Back Channel RPC Request has too many buffers: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26ANE_HandleRPCRequestFromFWEyyyP28ANESharedMemorySurfaceParamsP23sCSneControllerCmdHdrCh",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice28processTargetToHostIOCommandEyyy",
                "__ZN11ANEHWDevice23aneInterruptHandlerPrivEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice19aneInterruptHandlerEP22IOInterruptEventSourcei"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Not allowed on customer installs\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice30ANE_RegisterDebugWorkProcessorEP37ANEDebugWorkProcessorRegistrationArgsPyPv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Registering work processor\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Trying to re-register an already registered port\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice36ANE_RegisterDebugWorkProcessor_gatedEP37ANEDebugWorkProcessorRegistrationArgsPyPv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: ANE power assertion failed with error: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Too many dependencies specified in RPC command\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Too many buffers specified in RPC command\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Couldn't map memory descriptor. Error = %x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice35ANE_GetDebugWorkProcessorItem_gatedEPyPvjP4task",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice29ANE_GetDebugWorkProcessorItemEPyPvjP4task"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Wake up: %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Couldn't map memory descriptor\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice40ANE_CompleteDebugWorkProcessorItem_gatedEPyPvjP4task",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice34ANE_CompleteDebugWorkProcessorItemEPyPvjP4task"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Found DebugWorkProcessor to un-register\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                }
            ],
            "symbol": "__ZN11ANEHWDevice25ReleaseDebugWorkProcessorEP8ipc_port",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Returning fDebugWorkProcessorInProgressRequests item that was never completed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice29ANE_QuiesceDebugWorkProcessorEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice10ANE_deInitEv",
                "__ZN11ANEHWDevice18power_off_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE%d: %s: ERROR: Invalid version in statsBuffer: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z18processStatsBuffer27ANEProcessStatsBufferParamsP22ANEStatsLogFileManager",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: fANEDynPowerGateActive = %d is set before\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26enableDynPowerGating_gatedEb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Disabling Dynamic PowerGating\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANEDynPowerGateActive is set to false before\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Disabling Dynamic PowerGating Timer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice25disableDynamicPowerGatingEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: DEBUG: event: %d CLPC notifying work begin Timestamp: %llu mach_absolute_time(): %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR:eAnsCmdProgramEvent_ProcStart being called a second time for same work!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DEBUG: event: %d. Work submitted but not started.                                    CLPC notifying work begin mach_absolute_time(): %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DEBUG: event: %d. Work submitted but not started.                                    CLPC notifying work end mach_absolute_time(): %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DEBUG: event: %d CLPC notifying work end Timestamp: %llu mach_absolute_time(): %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice20notifyPerfControllerEP14ANEPerfRequest19eAnsCmdProgramEventy",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: Multiple workSubmit calls for same request\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Throttle value changed Old=%d New=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26submitWorkToPerfControllerEP14ANEPerfRequestbP24ThreadModeledPerformancem",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Found inference request with uuid (0x%llx)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN18ANEFirmwareManager19removeRequestByUUIDEy",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice27processANEDriverEventReportEP25sAnsCmdProgramEventReport",
                "__ZN11ANEHWDevice28processTargetToHostIOCommandEyyy",
                "__ZN11ANEHWDevice23aneInterruptHandlerPrivEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice19aneInterruptHandlerEP22IOInterruptEventSourcei"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Starting deinit\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Timed out waiting for ANECPU to write to rANE_SCRATCH0 register after CSNE_CMD_POWER_DOWN.. Continue with power down\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CSNE_CMD_SUSPEND command completed: res=0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CSNE_CMD_POWER_DOWN command completed: res=0x%08X\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CSNE_CMD_SUSPEND/CSNE_CMD_POWER_DOWN was NOT sent as res=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Forcing firmware timeout path for clean reboot\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANECPU not in WFI after CSNE_CMD_SUSPEND/CISP_CMD_POWER_DOWN. retries=%d. ASCWRAP_IDLE_STATUS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANECPU in WFI after CSNE_CMD_SUSPEND/CISP_CMD_POWER_DOWN. retries=%d ASCWRAP_IDLE_STATUS = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DartErrorHandlerInProgress\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Timed out waiting for the dartErrorHandler to complete\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Releasing program buffer programId: %d that was never unloaded\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Pending requests with firmware: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Statistics: ColdStarts: %llu, JetsamTriggeredColdStarts: %llu, Resumes: %llu, ResumesFailed: %llu, SuspendsSuccessful: %llu, SuspendsFailed: %llu FirmwareTimeouts: %llu ANEDeInits: %llu ANEInitFailures: %llu PartialShutdownsCompleted: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Work Stats:  WorkSubmitted: %u WorkSubmitFailed %u WorkBegin: %u WorkEnded: %u PendingRequests: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice10ANE_deInitEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice18power_off_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: data %p not present in fOutstandingCommands osset\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: pCommandState is NULL in fOutstandingCommands osset\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: cannot find process programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice24handleOutstandingCommandEP8OSObjectb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Bypassing panic, disabled by boot-args. Trying to recover FW\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Performing timeout recovery..\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Bad program detected (ident: %s), unloading it\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: No ISP or SEP or ExclavePersistent power assertion case\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ISP or SEP or Exclave has power assertion, so not rebooting ANE until all of them leave\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ISP has power assertion, waiting for ISP to power off\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: SEP has power assertion, waiting for SEP to power off\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Exclave has power assertion, will wait for Exclave to power off\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice27HandleFirmwareTimeout_gatedEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 3,
            "anchors": [
                {
                    "string": "%s: %s: ANE%d: %s :ANEHWDevice::ANE_LoadFirmware_gated: fw len=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Device has ANE_rtb_disable_fw_load=1 in its boot-args but without custom ANE firmware. Either remove ANE_rtb_disable_fw_load from its boot-args or copy custom firmeware to the right directory.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ANEHWDevice::ANE_LoadFirmware_gated - couldn't create memory descriptor\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANE_LoadFirmware_gated - couldn't prepare memory descriptor\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: FW reload is not allowed for CTRR enviorment, fEnableFwReload is not set in the decide tree\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Illegal ANECPU firmware \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: coredump: add region for text, data and initHeap\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ANEHWDevice::ANE_LoadFirmware_gated - couldn't create memory map\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22ANE_LoadFirmware_gatedEPvjjP4task",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice16ANE_LoadFirmwareEPvjjP4task"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Firmware cache requests max limit(%d) hit, uuid: 0x%llx transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Firmware cache requests lower limit(%d) hit, uuid: 0x%llx transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Firmware cache with shared event requests limit(%d) hit, uuid: 0x%llx transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Unidentified cache request limit\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice30firmwareCacheHandleIsAvailableEP10ANERequestj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: fANEFirmwareCpuThrottled: %d, fANEFirmwareCpuLoadScore: %u, numSlowPathOutstandingCmds: %u, isPoweredByISP: %d, isPoweredByPearlSEP: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Firmware MaxRequestsHighPriorityChannel: %d hit programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Firmware per process queue limit(%d) hit programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Firmware per priority queue limit(%d) for priority: %d hit programHandle: 0x%llx, waiting to send request to firmware\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE Throttling limit(%d) hit programHandle: 0x%llx pendingRequestsWithFW: %u, waiting to send request to firmware\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: fANEThrottlePercentage=%d aneBusyTimeElapsedNs=%lld aneFreeTimeNs=%lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE Throttling time limit hit freeTime(%lld) busyTime(%lld) programHandle: 0x%llx, waiting to send request to firmware\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice27firmwareResourceIsAvailableEP10ANEProcessjb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: INFO: Saving state for programResource->programId: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: INFO: Saving state for programResource->programId: %d process->processId: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice13ANE_SaveStateEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice22setPowerStateGatedPrivEmP9IOService",
                "__ZN11ANEHWDevice18setPowerStateGatedEmP9IOService",
                "__ZN11ANEHWDevice13setPowerStateEmP9IOService"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: Creating program for program#%d programResource->programId: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Process creation failed for program#%d. ANE failed to restore correctly for programHandle: 0x%llx result: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Program restored on ANE - programHandle: 0x%llx, programId: %d, processId: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Program creation failed for program#%dx. ANE failed to restore correctly result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Skipping creating program for program#%d needProgramRemap (%d) pendingUpdate (%d)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice16ANE_RestoreStateEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice8ANE_InitEv",
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR:  No valid client exists for programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice16ANE_RestoreStateEv.cold.1",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice16ANE_RestoreStateEv",
                "__ZN11ANEHWDevice8ANE_InitEv",
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Firmware in timeout state, completing command (opcode: 0x%04X) as timed out\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: invalid process with programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: DeviceMemoryManager: No Memory\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANECPU Command Packet Sent:\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Sent debug command to SNE. opcode: 0x%04X timestampFw=%lld command=%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Sent command to SNE. opcode: 0x%04X timestampFw=%lld command=%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Failed to send cmd to SNE. res: 0x%x, data: %p, commandANEAddress: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Performance: command (opcode: 0x%04X) took %lld usec res=0x%08X ack=0x%08X timestampFw=%lld command=%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANECPU Response Packet Received:\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Ack %d error on command timestampFw=%lld command=%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22aneFirmwareCommandSendERK18ANEFirmwareCommandNSt3__18functionIFvPviEEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: IOProcessorChannelSend timed out - rc=%d, retries=%d command=%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: IOProcessorChannelSend failed - rc=%d retries = %d command=%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: IOProcessorChannelSend succeeded command=%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice27IOProcessorChannelSendRetryEhPKvyyb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: WARN: cannot find procedureCallRequest for UUID: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: cannot find program with programId: %d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: neither sync nor async configuration correctly setup\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: id :0x%x, programHandle: 0x%llx, progID: %d, processId::%d, procId: %d, errorcode: %x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice19processFWDebugEventEP23sCSneControllerCmdHdrCh",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice28processTargetToHostIOCommandEyyy",
                "__ZN11ANEHWDevice23aneInterruptHandlerPrivEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice19aneInterruptHandlerEP22IOInterruptEventSourcei"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Work around for PushTelemetry\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZNSt3__110__function6__funcIZN11ANEHWDevice10ANE_deInitEvE3$_0NS_9allocatorIS3_EEFvvEEclEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: Could not allocate compute program spans",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Macho header overflow",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Could not allocate compute program",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z37ZinComputeProgramRTMakeWithMappedSizePKvmmPP19ZinComputeProgramRT",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANEPrivilegedVMAccess::init\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN21ANEPrivilegedVMAccess4initEP12OSDictionary",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: illegal (null) 'descriptor' parameter",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal (null) 'symbol' parameter",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal symbol descriptor or missing symbol name",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z36ZinComputeProgramSymbolGetDescriptorPK20ComputeProgramSymbolPv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "Incorrect parameter",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Found procedure name = %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z55ZinComputeProgramGetIndexOfCompilationUnitFromDebugInfoPKhjPKc",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource22initStatsBufferSectionEP26ANEProgramCreateArgsOutputP4task"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "Invalid kernel section count in procedure %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z54ZinComputeProgramGetNumberOfKernelSectionsForProcedurePK26ZinComputeProgramProcedureRm",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource32populateProcedureSplitKernelInfoEj",
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: The compute thread %p is a nullptr",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z47ZinComputeGetNumberOfKernelSectionsForOperationPK18ProcedureOperationRm",
            "prototype": "",
            "backtrace": [
                "__Z49ZinComputeProgramGetKernelSectionInfoForOperationPK18ProcedureOperationmP27ZinComputeKernelSectionInfo"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: The info %p is a nullptr",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Loader internal error, line: %d, file: %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Invalid kernel section index, %zu",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Invalid BarId conversion factor",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "section corresponding to kernel number %zu not found for operation %p",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z49ZinComputeProgramGetKernelSectionInfoForOperationPK18ProcedureOperationmP27ZinComputeKernelSectionInfo",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "DRAM Usage for additional operations is different than earlier ops. max=%zu current=%zu",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN26ZinComputeProgramProcedure12GetDRAMUsageEv",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource10preProcessEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParamsP26ANEProgramCreateArgsOutput",
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: ane_thread_state_64 out of bounds",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: ane_seg_thread_state_64 out of bounds",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal thread state flavor",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZL31ZinComputeProgramMakeOperationsP17ZinComputeProgram",
            "prototype": "",
            "backtrace": [
                "__Z35ZinComputeProgramMakeWithMappedSizePKvmmPP17ZinComputeProgram"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "Inconsistent relocation command size among operations.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Inconsistent DSID offset among operations.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Inconsistent DSID size in bits among operations.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZL19SetMCacheCommonInfoR33ZinComputeMCacheCommonInformationPK38ane_thread_argument_relocation_payload",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: access outside of runtime section data",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: runtime data section overrun",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ZinRtDeserializeUtil22CheckRuntimeDataAccessEPKvmRKNSt3__14spanIKjLm18446744073709551615EEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: Command overflows data buffer",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ZinRtDeserializeUtil20ZinRtCommandIterator14IsValidCommandERKNSt3__14spanIKjLm18446744073709551615EEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: Procedure adjacency has illegal type",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Procedure adjacency specifies unknown address %llu",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Procedure has self-edge",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ZinRtDeserializeUtil23ParseProcedureAdjacencyEP19ZinComputeProgramRTP20RtProcedureGraphNodeRNS_20ZinRtCommandIteratorE",
            "prototype": "",
            "backtrace": [
                "__Z13RtDeserializeP19ZinComputeProgramRT",
                "__Z37ZinComputeProgramRTMakeWithMappedSizePKvmmPP19ZinComputeProgramRT"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: null arguments",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Procedure graph does not contain a root",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ZinRtDeserializeUtil23MakeProcedureGraphRootsEP19ZinComputeProgramRT",
            "prototype": "",
            "backtrace": [
                "__Z13RtDeserializeP19ZinComputeProgramRT",
                "__Z37ZinComputeProgramRTMakeWithMappedSizePKvmmPP19ZinComputeProgramRT"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: Operation has more than one joined adjacency",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Found joined adjacencies on non-operation node",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ZinRtDeserializeUtil29ParseJoinedOperationAdjacencyEP16RtOperationGraphRNS_20ZinRtCommandIteratorERbRP29RtOperationGraphOperationNode",
            "prototype": "",
            "backtrace": [
                "__ZL32RtDeserializeParseOperationGraphP19ZinComputeProgramRTRKNSt3__14spanIKjLm18446744073709551615EEEjjRP16RtOperationGraphRj"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: Duplicate synchronous adjacency",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Duplicate asynchronous adjacency",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Unrecognized operation adjacency type",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Operation graph node has self-edge",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ZinRtDeserializeUtil27ParseNonJoinedNodeAdjacencyEPK16RtOperationGraphP20RtOperationGraphNodeRNS_20ZinRtCommandIteratorE",
            "prototype": "",
            "backtrace": [
                "__ZL32RtDeserializeParseOperationGraphP19ZinComputeProgramRTRKNSt3__14spanIKjLm18446744073709551615EEEjjRP16RtOperationGraphRj"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: Operation graph does not contain a root",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ZinRtDeserializeUtil23MakeOperationGraphRootsEP16RtOperationGraph",
            "prototype": "",
            "backtrace": [
                "__ZL32RtDeserializeParseOperationGraphP19ZinComputeProgramRTRKNSt3__14spanIKjLm18446744073709551615EEEjjRP16RtOperationGraphRj"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: Out of memory when allocating ANE random seeds",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Out of memory when allocating IO bind information",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Unrecognized bind operation type",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: BarAssign operation not yet implemented",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Unrecognized runtime operation opcode",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Unrecognized operation mode",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ZinRtDeserializeUtil28AllocateOperationDescriptionE15RtOperationModeb17RtOperationOpcode17RtBindOperandTypeb",
            "prototype": "",
            "backtrace": [
                "__ZL32RtDeserializeParseOperationGraphP19ZinComputeProgramRTRKNSt3__14spanIKjLm18446744073709551615EEEjjRP16RtOperationGraphRj"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: Illegal serialization of operation adjacency",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Unknown operation field %u",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Field %u cannot be deserialized to the current operation",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ZinRtDeserializeUtil22HandleOperationCommandEPK19ZinComputeProgramRTP22RtOperationDescriptionRNS_20ZinRtCommandIteratorE",
            "prototype": "",
            "backtrace": [
                "__ZL32RtDeserializeParseOperationGraphP19ZinComputeProgramRTRKNSt3__14spanIKjLm18446744073709551615EEEjjRP16RtOperationGraphRj"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: Symbol table index %u out of range of symbol table",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Could not find symbol at symbol table index %u",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: IO bind operation name longer than 256 chars",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ZinRtDeserializeUtilL37ExtractSymbolNameFromSymbolTableIndexEPK19ZinComputeProgramRTjRNSt3__117basic_string_viewIcNS3_11char_traitsIcEEEE",
            "prototype": "",
            "backtrace": [
                "__ZN20ZinRtDeserializeUtil22HandleOperationCommandEPK19ZinComputeProgramRTP22RtOperationDescriptionRNS_20ZinRtCommandIteratorE",
                "__ZL32RtDeserializeParseOperationGraphP19ZinComputeProgramRTRKNSt3__14spanIKjLm18446744073709551615EEEjjRP16RtOperationGraphRj"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: null program pointer",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: '%s' section data has size %llu, which is not a multiple of %zu",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Failed to allocate procedure graph node",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Procedure size mismatch",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Could not find symbol for procedure",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Unknown procedure field %u",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z13RtDeserializeP19ZinComputeProgramRT",
            "prototype": "",
            "backtrace": [
                "__Z37ZinComputeProgramRTMakeWithMappedSizePKvmmPP19ZinComputeProgramRT"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "Out of range segment id",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Out of range next segment id [0]",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Out of range next segment id [1]",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Out of range next segment count",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Error: ZinComputeProgramGetAneTDPartitionScheduleInfo",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Error: thread argument is not supported.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "Out of range next count",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z46ZinComputeProgramGetAneTDPartitionScheduleInfoPK13ident_commandbPKvjPKcRiS6_RA2_i",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: Freeing program resource surface. programId: %d, size: %llu, refCount: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Release baseMutableSections size: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programBufferCollection contains text:%d kernel:%d Add memory:%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Release vnode iocount: %d usecount: %d machoFilePath=%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN18ANEProgramResource4freeEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Failed wireResources result=0x%x resourceId=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed asyncWire() result=0x%x resourceId=0x%llx usageType=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Couldn't wire resource result=0x%x resourceId=0x%llx usageType=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed kernelSplitSection wire() result=0x%x resourceId=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed kernelSplitSection asyncWire() failed result=0x%x resourceId=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Couldn't wire kernelSplitSection result=0x%x resourceId=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN18ANEProgramResource13wireResourcesEb",
            "prototype": "",
            "backtrace": [
                "__ZN18ANEProgramResource12ProgramReMapEPS_12ANEResidencyb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE: %s %s filesize: %llu fileoffset: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZL25enablePartialLoadingMachoP36ZinComputeProgramBasicInfoOfSectionsyPjS1_",
            "prototype": "",
            "backtrace": [
                "__ZN18ANEProgramResource23ANE_ProgramInitialSetupEP11ANEHWDeviceP20ANEProgramCreateArgsP26ANEProgramCreateArgsOutputP32ANEProgramCreateAdditionalParams",
                "__ZN11ANEHWDevice17ANE_ProgramCreateEP20ANEProgramCreateArgsP26ANEProgramCreateArgsOutputP4taskPvPy"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: clientProgramAddress: is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Program with NO qoSConstraint kANEQoSConstraintPowerSensitiveLatencyInsensitive. Disabling sleep timer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Program with qoSConstraint kANEQoSConstraintPowerSensitiveLatencyInsensitive set\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: No computeProgram!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Program Identifier: %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Data chaining matting model\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Data chaining gaze model\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: zinReturnStatus: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programHandle: 0x%llx, Model Identifier: length: %d, string: ",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ZinComputeProgramGetMachoCompilationMode is JIT! User passed AOT CacheUrlIdentifier is 0x%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ZinComputeProgramGetMachoCompilationMode is AOT!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Neither AOT not JIT tag found in ZinComputeProgramGetMachoCompilationMode!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Copied cacheUrlIdentifier passed from client for this program : %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ANEProgramRTResource10preProcessEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParamsP26ANEProgramCreateArgsOutput",
            "prototype": "",
            "backtrace": [
                "__ZN20ANEProgramRTResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: Macho likely malformed: plane name spans out of client program %s %zu %llx %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ANEProgramRTResource14populateBindIOEPvjP22ANEProgramIOInfoStructPcRj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: preProcess failed result: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: dartMap kernelSectionBuffer failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: dartMap textSectionBuffer failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: number of procedure(%d) in the program exceeds max number(%d) supported\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: :WARN: ANEHWDevice: Intermediate buffer size is zero \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Program Load/Parse Status:%d programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Powered down while waiting for program setup to complete on ANE!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANE_ProgramCreate_gated Powered down while waiting for process create to complete on ANE!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Client went away in the middle of process creation\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DEBUG: ANEHWDevice: Program created programId: %d processId: %d programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Program Create Done@ result: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ANEProgramRTResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Enter \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: invalid procedure Id: %u for processInstance programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Entering %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Process invalid after kernel split wiring and DART map. programId: %d, processId: %d, transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Input %d - Symbol:%s BufferIndex = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Result is not expected: 0x%x \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Output %d - Symbol:%s BufferIndex = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s:  failed to get shared memory Cluster mutable index: %d for request with procId: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR:ANE Op graph traversal failed!! Inference Abort\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE Op graph traversal succeeded to get next node \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: buildFirmwareRTInferenceCallRequest failed. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ProcessParams is not valid for programHandle: 0x%llx, programId: %u, processId: %u, transactionId: 0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CSNE_CMD_PROCEDURE_CALL failed = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE got power gated while waiting for command to complete\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Queuing request at driver - acquiredAllFences(%d), acquiredAllWaitEvents(%d), isFirmwareResourceAvailable(%d), processDartMapped: %d, programId: %d, processId: %d, transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ANEProgramRTResource29programRTSendInferenceRequestEP21ANEProgramRequestArgsP15ANESharedEventsP37ANEProgramSendRequestAdditionalParams",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: numOperationsPerLiveInParam = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: inferenceCallCommand.programId: %d inferenceCallCommand.processId: %d inferenceCallCommand.procedureId: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: addr=%llx size=%u offset=%u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ANEProgramRTResource35buildFirmwareRTInferenceCallRequestEP10ANERequest",
            "prototype": "",
            "backtrace": [
                "__ZN20ANEProgramRTResource29programRTSendInferenceRequestEP21ANEProgramRequestArgsP15ANESharedEventsP37ANEProgramSendRequestAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: ZinComputeProgramMake Failed!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ANEProgramRTResource18makeComputeProgramERK20ANEProgramCreateArgsRK32ANEProgramCreateAdditionalParams",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s:  ANEResourceUsageType=%u bindId=%u d=%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: aneId %u deviceId %u Intermediate buff size = %llu offset =%llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZZN20ANEProgramRTResource35buildFirmwareRTInferenceCallRequestEP10ANERequestENK3$_0clEyjyy20ANEResourceUsageType"
                },
                {
                    "string": "%s: %s: Found bonded at idx=%zu buff addr=%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Found at idx=%zu buff addr=%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Buffer Bind not found for dva=%llx\n ",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN20ANEProgramRTResource15populateBarInfoIZNS_35buildFirmwareRTInferenceCallRequestEP10ANERequestE3$_0EEbjjy20ANEResourceUsageTypehT_jj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: inferenceCallCommandProperty BarId:%u bufferIndex=%d type=%d size=%llu buffer=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Not enough buffer descriptors in firmware struct\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZZN20ANEProgramRTResource35buildFirmwareRTInferenceCallRequestEP10ANERequestENK3$_0clEyjyy20ANEResourceUsageType",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: ANEUnionResource: resourceCollection is empty\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: ANEUnionResource: buffer is in use useCount: %u size of IOMD: 0x%llx required resource size: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[DEBUG] %s: %s: ANEUnionResource: skip update memoryDescriptor current size (0x%llx) is larger than the required resource size (0x%llx\n)",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16ANEUnionResource22updateMemoryDescriptorENSt3__110shared_ptrI11ANEResourceEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: ANEUnionResource: resource is nullptr\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEUnionResource: unsupported resource type (0x%x), kANEResourceTypeDefault only supported\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEUnionResource: Resource size should be non-zero\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: collection add fails\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16ANEUnionResource11addResourceENSt3__110shared_ptrI11ANEResourceEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: ANEUnionResource: cannot find resource with id: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16ANEUnionResource14removeResourceEy",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice25aneFreeIntermediateBufferEP10ANEProcessb"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: ANEUnionResource: wire memory descriptor: %p size: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16ANEUnionResource4wireEj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: ANEUnionResource: cannot decrement useCount : %u useCountPerIndex[%u]: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16ANEUnionResource17decrementUseCountEh",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ANEUnionResource: mark pending requests commands to be updated\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16ANEUnionResource30markPendingRequestsToBeUpdatedEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: programHandle: 0x%llx numPendingRequests: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16ANEUnionResource30markPendingRequestsToBeUpdatedEv.cold.1",
            "prototype": "",
            "backtrace": [
                "__ZN16ANEUnionResource30markPendingRequestsToBeUpdatedEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ANEUnionResource: update memoryDescriptor size: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEUnionResource: failed to create memoryDescriptor\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANEUnionResource release original memoryDescriptor size: 0x%llx  memoryDescriptor: %p dartAddress[%u]: 0x%llx \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZZN16ANEUnionResource22updateMemoryDescriptorENSt3__110shared_ptrI11ANEResourceEEENK3$_0clEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[INFO] %s: %s: ANEGroupResource: memoryDescriptor exists already\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEGroupResource: resourceCollection is empty\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEGroupResource: cannot allocate descriptors\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEGroupResource: resource has nullptr descriptor id: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEGroupResource: failed to create subMemoryDescriptor with resourceId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEGroupResource: failed to create multiMemoryDescriptor\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16ANEGroupResource22updateMemoryDescriptorEv",
            "prototype": "",
            "backtrace": [
                "__ZN16ANEGroupResource4wireEj"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: ANEGroupResource: memoryDescriptor exists already, cannot add resource\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEGroupResource: resource is nullptr\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEGroupResource: usageType mismatch, resource usageType (0x%x) GroupResource usageType (0x%x)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEGroupResource: resource size should be non-zero\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEGroupResource: resourceId (0x%llx) is not page aligned which is not supported for GroupResource case offset=%llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEGroupResource: type mismatch, resource type (0x%x) GroupResource type (0x%x)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEGroupResource: ioDirection mismatch, resource direction (0x%x) GroupResource direction (0x%x)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEGroupResource: bufferIndex mismatch, resource bufferIndex: %u GroupResource bufferIndex: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEGroupResource: collection add fails\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANEGroupResource: added surfaceID: %u symbolIndex: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANEGroupResource: type: 0x%x ioDirection: 0x%x bufferIndex: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16ANEGroupResource11addResourceENSt3__110shared_ptrI11ANEResourceEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: ANEGroupResource: memoryDescriptor exists already, cannot remove resource\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANEGroupResource: cannot find resource with id: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16ANEGroupResource14removeResourceEy",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ANEGroupResource: wire memory descriptor: %p size: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN16ANEGroupResource4wireEj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: params.usageType >= kANEResourceUsageTypeMaxNumTypes\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: pANEIn is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: size passed in is > fANEMaxSystemMemSize=%lld size=%lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEResource6createIL15ANEResourceType0EEENSt3__110shared_ptrIS_EEP11ANEHWDeviceRK25ANEResourceCreationParams",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Failed to create ANEResource: fileBackedMappedTask is nullptr\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to create ANEResource: fileBackedMappedAddress is 0\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: sectionAddress: 0x%llx sectionOffset: 0x%llx sectionSize: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to create memoryDescriptor\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEResource6createIL15ANEResourceType4EEENSt3__110shared_ptrIS_EEP11ANEHWDeviceRK25ANEResourceCreationParams",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE: deviceLockSurface for kernel allocated IOSurface failed. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEResource6createIL15ANEResourceType2EEENSt3__110shared_ptrIS_EEP11ANEHWDeviceRK25ANEResourceCreationParams",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice27AllocateSharedMemorySurfaceEyRNSt3__110shared_ptrI11ANEResourceEEjbbybiby",
                "__ZN11ANEHWDevice32ANE_ProgramChainingPrepare_gatedEP29ANEProgramChainingPrepareArgsP31ANEProgramChainingPrepareOutput",
                "____ZN11ANEHWDevice26ANE_ProgramChainingPrepareEP29ANEProgramChainingPrepareArgsP31ANEProgramChainingPrepareOutput_block_invoke",
                "__ZN11ANEHWDevice26ANE_ProgramChainingPrepareEP29ANEProgramChainingPrepareArgsP31ANEProgramChainingPrepareOutput"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: ANEResource release in progress. dartMap() failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: No memory descriptor. dartMap() failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ANEResource not wired. dartMap() failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEResource7dartMapE12ANEResidencyb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: ANEResource release in progress. map() failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: cannot map a large kernel-allocated buffer again once unmapped before size: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: no memory descriptor\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Already mapped with different options. To use new options, please unmap() first and then map with new options.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: cannot map it\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEResource3mapEj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: ANEResource release in progress. wire() failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed, no memory descriptor resourceId=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: waitForAsyncWiring() failed. result 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed resourceId=0x%llx usageType=0x%x result 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEResource4wireEj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: ANEResource release in progress. asyncWire() failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: No memory descriptor. Async wiring failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Issuing async wiring programHandle: 0x%llx resourceId: 0x%llx usageType: %u barID: %u size: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: enqueueActionBlock() failed. result 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEResource9asyncWireEjj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: waitForAsyncWiring() failed isReleaseinProgress: %d forceRelease: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Waiting for wiring update. ProgramHandle: 0x%llx barID: %u size: %llu retries=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ANEResource release in progress. waitForAsyncWiring() failed retires: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Invalidating async wiring ActionBlock deferred release. ProgramHandle: 0x%llx barID: %u size: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Invalidating async wiring ActionBlock. ProgramHandle: 0x%llx barID: %u size: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: timed out waiting for asyncWiring\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: buffer not in wired state PreparationID: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Done waiting for wiring update retries=%d. Success!!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEResource18waitForAsyncWiringEb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: ANEResource release in progress. unwire() failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: waitForAsyncWiring() failed. 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Memory is still DART mapped. Will not unwire resourceId=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: Skipping unwiring of resource programHandle: 0x%llx resourceId: 0x%llx usageType: 0x%x",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEResource6unwireEbj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: mem size is zero\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: failed to create vm object. res: 0x%x memEntryPort: %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: failed to map vm object within kernel map. res: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice25AllocateMemoryForDirectIOEPyyi",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: Found non-mutable procedure. This LLM base model process will create intermediate buffers\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Omitted intermediate buffer allocation (programHandle:0x%llx)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Newly allocate intermediateUnion id: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: authentication fails\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Process already has intermediateResource id: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Add existing resource (id=%llx) to union (id=0x%llx)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Newly allocate intermediateResource id: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programHandle: 0x%llx sharedUnionHandle: 0x%llx intermediateUnionHandle: 0x%llx intermediateResourceId: 0x%llx bufferSize: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Could not create intermediateBuffer result: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice29aneAllocateIntermediateBufferEP18ANEProgramResourceP10ANEProcessy",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: cannot find intermediateUnion programHandle=0x%llx",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[INFO] %s: %s: intermediateResource was already freed programHandle: 0x%llx intermediateUnionHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: programHandle: 0x%llx intermediateResourceId: 0x%llx intermediateUnionId: 0x%llx resourceCount: %u retainHandle: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[INFO] %s: %s: Free intermediateUnion id: 0x%llx resourceCount: %u useCount: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Free union while it has useCount (%u)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice25aneFreeIntermediateBufferEP10ANEProcessb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: run ungated action resourceId=0x%llx retries=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Waiting for unGated action to be done resourceId=0x%llx retries=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_IORecursiveLockTryLock"
                },
                {
                    "string": "%s: %s: Failed to run unGatedAction resourceId=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZNK11ANEResource19invokeActionUnGatedENSt3__18functionIFivEEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: ANE is off\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZNK11ANEResource19invokeActionUnGatedENSt3__18functionIFivEEE.cold.1",
            "prototype": "",
            "backtrace": [
                "__ZNK11ANEResource19invokeActionUnGatedENSt3__18functionIFivEEE"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: WARN: driver will dartmap when inference\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Dart map failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZZN11ANEResource7dartMapE12ANEResidencybENK3$_1clEP16ANECoreInterface",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: ANEResource memory wire failed. result 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: vnode_rdadvise vnode: %p fileOffset: %lld fileSize: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[INFO] %s: %s: vnode read advise failed, ret=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[INFO] %s: %s: WARN: rdadvise: cannot create vfs_context\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZZN11ANEResource4wireEjENK3$_2clEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE: params.surface == nullptr\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE: params.programResource == nullptr\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Usage Type: %u cannot be multi-planar. PlaneCount: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Unknown usageType: %u passed to create ClientResource\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: deviceLockSurface for ClientResource failed. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: memory descriptor for ClientResource is nullptr\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: output surface size is greater than expected actual=%llu expected=%llu\n symbolName=%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: input surface size is greater than expected actual=%llu expected=%llu symbolName=%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Invalid bufferIndex: %d symbolName: %s planeIdx: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Invalid bufferMetaDataIdx: %d symbolName: %s planeIdx: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CompressedIO: Header offset:%u, Data offset:%u, bufferIndex: %u, planeSize: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: CompressedIO: symbolIdx: %u, planeIndex: %u, metaBufferIndex: %u, metaBufferSize: %u",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Surface plane offset is %d plane %u, plane size %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: aneResource allocation failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: aneResource Metadata allocation failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Unknown usageType: %u passed in ClientResource\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN17ANEClientResource6createEP11ANEHWDeviceRK25ANEResourceCreationParams",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: dartMap() failed. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN17ANEClientResource7dartMapE12ANEResidencyb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE%d: %s :line: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s : Program with NO qoSConstraint kANEQoSConstraintPowerSensitiveLatencyInsensitive. Disabling sleep timer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s : Program with qoSConstraint kANEQoSConstraintPowerSensitiveLatencyInsensitive set\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: No compuete program!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: %s: failed, Macho is not build for this platform %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: procId: %lu, Procedure DRAM Usage = %zu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: memory used for the procedureId: %lu is %zu, maxMemoryAllowed: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: %s: failed, ZinComputeProgramMake, get Mcache size!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: %s:, ZinComputeProgramMake, get Mcache size: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ZinComputeProgramSupportsProcStartHW failed. Status: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ZinComputeProgramSupportsSplitMutableKernelSection failed. Status: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ZinComputeProgramSupportsSplitMutableKernelSection bIsClusterKernelMutable: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ZinComputeProgramSupportsLiveinParamValidRange failed. Status: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ZinComputeProgramSupportsLiveinParamValidRange isLiveinParamRangeCheckSupported: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: %s:,Program Identifier: %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: %s:Data chaining matting model\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: %s:Data chaining gaze model\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: %s:%d, zinReturnStatus: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: %s:%d, programHandle: 0x%llx, Model Identifier: length: %d, string: ",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: %s: failed, ZinComputeProgramHasMutableOperation!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Has mutable kernel section\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANEHWDevice: Loader returned an error for ZinComputeProgramUsesSymbolicWeights:0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANEHWDevice: LLM Symbolic KernelMutable, allocate fPatchedMutableBufferList!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ANEHWDevice::kernel is non-mutable kernel section\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: %s: failed, ZinComputeProgramGetMachoCompilationMode!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: %s: , ZinComputeProgramGetMachoCompilationMode is JIT! User passed AOT CacheUrlIdentifier is 0x%s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: %s: , ZinComputeProgramGetMachoCompilationMode is AOT!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: %s: , Neither AOT not JIT tag found in ZinComputeProgramGetMachoCompilationMode!",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: %s:Copied cacheUrlIdentifier passed from client for this program : %s",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24ANEProgramLegacyResource10preProcessEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParamsP26ANEProgramCreateArgsOutput",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Failed to create ProgramAdditionalParamsBuffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: failed to wire ProgramAdditionalParamsBuffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24ANEProgramLegacyResource17initOtherSectionsEP20ANEProgramCreateArgsj",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: kernelSplitSections = NULL. programResource : %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Failed to allocate kernelSplitSectionRefs\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ZinComputeProgramGetKernelSectionInfo() error %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Number of program kernel splits: %lu is greater than maximum allowed: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Number of Program Kernel Splits: %zu does not match expected number of kernel split sections: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Number of program kernel splits: %lu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Kernel split [%u] ZinComputeProgramGetKernelSectionInfo() error %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Kernel split [%u] section pointer is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Kernel split [%u] file_offset: %lu not DART page size aligned\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Kernel split section [%u] out of bounds. file_offset: %lu section_size: %llu programSize: %zu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Kernel Split [%u] file_offset: %zu section_size: %llu bar_id: %zu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to create kernelSplitSection[%u]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24ANEProgramLegacyResource23initSplitKernelSectionsEP26ANEProgramCreateArgsOutputP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: Procedure: %u ZinComputeProgramGetNumberOfKernelSectionsForProcedure() error %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Procedure: %u Number of kernel splits: %zu is greater than maximum allowed: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Procedure: %u Number of kernel splits: %lu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Procedure: %u Kernel split [%u] ZinComputeProgramGetKernelSectionInfoForProcedure() error %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Procedure: %u Kernel Split [%u] file_offset: %zu section_size: %llu bar_id: %zu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Procedure: %u Kernel split: %u section not found in program kernel split list\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24ANEProgramLegacyResource32populateProcedureSplitKernelInfoEj",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: bIsSymbolicKernelMutable: %d bIsClusterKernelMutable: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE%d:%s Got kernel buffer \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: mutableKernelBufferOffset: 0x%x mutableKernelBufferSize = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: create mutableSectionBuffer mutableSectionFileOffset: (%d)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Failed to create mutableSectionBuffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Error Mutable kernel buffer type not matching ZinComputeLookupBufferBySection type: (%d)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  Mutable kernel buffer sDesc.sDescriptor.bufferIndex  (%d), size: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: skip mutable kernel setup\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANEHWDevice: ZinComputeLookupBufferBySection procedure_id is  -1 kIOReturnBadMedia",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ProgramHandle: 0x%x, procID: %d, mutable buffer index: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Legacy mutable no longer supported",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE%d:%s Got TD buffer \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE%d:%s Other type of network sections: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24ANEProgramLegacyResource25initMutableKernelSectionsEP26ANEProgramCreateArgsOutputP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Macho call ZinComputeProgramHasMutableProcedure failed with error code: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ZinComputeProgramHasMutableProcedure procedure id: %d mutable flag: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Macho call ZinComputeProgramGetMutableProcedureInfo failed with error code: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: mutableSectionAddress: 0x%llx mutableSectionSize 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24ANEProgramLegacyResource34populateProcedureMutableKernelInfoEP26ANEProgramCreateArgsOutputj",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE%d:%s :Bad fvmlibs, procId: %d, fvmLibIdx: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d:%s nsects for the fvmLibIdx (%d) of the procedure (%d) are %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE%d: Output found, procedure:%s, output:%s, bufferIndex:%d, output size:%d, fvmlib size:%llu, \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE%d: : Output found, procedure:%s, meta data output:%s, bufferIndex:%d, output size:%d, fvmlib size:%llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ERROR: ANEHWDevice: procedureId(%d) has numOutputs (%d), cannot use more than total number of outputs (%d)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s : Output not found, procedure:%s, output:%s, bufferIndex:%d, fvmlib size:%llu, \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE%d: Input found, procedure:%s, input:%s, inpIndex: %d, planeIndex: %d bufferIndex:%d, input size:%d, fvmlib size:%llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ANE%d: Input found, procedure:%s, meta data input:%s, bufferIndex:%d, input size:%d, fvmlib size:%llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ERROR: ANEHWDevice: procedureId(%d) has numInputs (%d), cannot use more than total number of inputs (%d)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s : Input not found, procedure:%s, meta data input:%s, bufferIndex:%d, fvmlib size:%llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24ANEProgramLegacyResource24populateProcedureFVMLibsEP26ANEProgramCreateArgsOutputP21ANEProgramBindingInfoj",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: WARN: Procedure: %u ZinComputeProgramSupportsSummaryPerformanceStats() error %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: Procedure: %u ZinComputeProgramGetModeledPerformanceScenariosCountForProcedure() error %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: Procedure: %u numModeledPerfStats(%zu) > ANEMaxNumPerfStats(%u)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: WARN: Procedure: %u ZinComputeProgramGetModeledPerformanceScenariosForProcedure() error %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24ANEProgramLegacyResource20populateCLPCPerfInfoEj",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Binding Info For Circular Buffer buffer size: %u, wrap_axis: %d, sowi_bar_id: %u, data_size: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: LiveParam: %s Procname_binding:%s Proc_name:%s ProcID:%d  Index:%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s:  Binding Info Type unknown: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Macho likely malformed: plane name spans out of client program\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Macho likely malformed: data_name spans out of client program\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Macho likely malformed: metadata_name spans out of client program\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24ANEProgramLegacyResource14populateBindIOEPvP26ANEProgramCreateArgsOutputP22ANEProgramIOInfoStructPA4_A512_cS7_",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: procedure name spans out of client program %p %u %llx %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: binding info for procedure %s, input: %u symbol:%s, data symbol:%s, type:%u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Error: Number of input buffers exceeds max supported actual=%d, max=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: binding info for procedure %s, output: %u symbol:%s, data symbol:%s, type:%u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Number of output buffers exceeds max supported actual=%d, max=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24ANEProgramLegacyResource18populateAllBindIOsEP26ANEProgramCreateArgsOutputP21ANEProgramBindingInfo",
            "prototype": "",
            "backtrace": [
                "__ZN24ANEProgramLegacyResource24programLoadFromMachoFileEP20ANEProgramCreateArgsP32ANEProgramCreateAdditionalParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: ZinComputeProgramMake failed!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN24ANEProgramLegacyResource18makeComputeProgramERK20ANEProgramCreateArgsRK32ANEProgramCreateAdditionalParams",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Resource already exists %p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN21ANEResourceCollection11addResourceENSt3__110shared_ptrI11ANEResourceEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: cannot find resource id: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN21ANEResourceCollection14removeResourceEy",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 2,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: collection passed in moveResourceFrom() is nullptr\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Passed collection doesn't contain resourceId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN21ANEResourceCollection16moveResourceFromEPS_y",
            "prototype": "",
            "backtrace": [
                "__ZN12ANEScheduler25moveResourceToUnwireQueueEP21ANEResourceCollectiony"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "allowProcessCoalitionClientHints for hint =%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Client not found via owning task\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Client has entitlement to lookup based on codesigning ID. Performing code signing lookup\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Client not found even by code signing lookup\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ERROR: client context is invalid\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: pathToModelAsset = %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: totalPagesNeedWired: %lld residentPages: %lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice42setClientHintInitialChecksAndLookups_gatedEP13ANEClientHint",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice13setClientHintEP13ANEClientHint_block_invoke",
                "__ZN11ANEHWDevice13setClientHintEP13ANEClientHint"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Found client(%s) matching asset path %s, which is detected as a MachO file\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Found client(%s) matching asset path %s, which is detected as a Weight file\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice42setClientHintInitialChecksAndLookups_gatedEP13ANEClientHint_block_invoke_2",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice42setClientHintInitialChecksAndLookups_gatedEP13ANEClientHint",
                "____ZN11ANEHWDevice13setClientHintEP13ANEClientHint_block_invoke",
                "__ZN11ANEHWDevice13setClientHintEP13ANEClientHint"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: process's program has pendingRequestCreate: %u, skipping ProcessPartialUnwire programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice19setClientHint_gatedEP13ANEClientHint_block_invoke.36",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice19setClientHint_gatedEP13ANEClientHint",
                "____ZN11ANEHWDevice13setClientHintEP13ANEClientHint_block_invoke",
                "__ZN11ANEHWDevice13setClientHintEP13ANEClientHint"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: WARN: Client %s has a session in progress hint, can't turn OFF ANE power\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice19setClientHint_gatedEP13ANEClientHint_block_invoke.40",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice19setClientHint_gatedEP13ANEClientHint",
                "____ZN11ANEHWDevice13setClientHintEP13ANEClientHint_block_invoke",
                "__ZN11ANEHWDevice13setClientHintEP13ANEClientHint"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANEHWDevice: Signaling wiring queue is empty\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "_IOLockLock"
                },
                {
                    "string": "ANEHWDevice: Cleaning up ANEResource: %p after force release.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23memoryWiringThreadEntryEPS_",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Failed to allocate ANEResourceCollection for request resources\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN10ANERequest6createER11ANEHWDevice",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice26ANE_MemoryMapRequest_gatedEPK18ANEMemoryMapParamsbbRNSt3__110unique_ptrI21ANEResourceCollectionNS3_14default_deleteIS5_EEEE"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Request init failed. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN10ANERequest6createER11ANEHWDeviceR37ANEProgramSendRequestAdditionalParamsR21ANEProgramRequestArgsyP15ANESharedEventsRb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[INFO] %s: %s: request fallback - # F2F cache request (%d): hits the limit (%d): # of current handles (%d)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ANERequest initSharedEvents() failed. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: disableIOFences_UsingSharedEventsInstead = %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN10ANERequest4initER11ANEHWDeviceR37ANEProgramSendRequestAdditionalParamsR21ANEProgramRequestArgsyP15ANESharedEventsRb",
            "prototype": "",
            "backtrace": [
                "__ZN10ANERequest6createER11ANEHWDeviceR37ANEProgramSendRequestAdditionalParamsR21ANEProgramRequestArgsyP15ANESharedEventsRb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: numWaitEvents:%d, numSignalEvents:%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Number of wait shared events: %u hits the limit: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Number of signal shared events: %u hits the limit: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: FW-FW signal enabled, must have non-zero number of signal and wait shared events. numWaitEvents: %u numSignalEvents: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: sharedEvent port: %#x eventTraceId: %#llx type: %d waitValue: %llu completedValue: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: sharedEventValue: %llu, is greater than expected valued: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[INFO] %s: %s: request fallback - wait event sharedID (%d) exceeds table limit (%d)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: acquiredAllWaitEvents: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: IOFences is enabled with shared events for programId: %d, processId: %d, transactionId: 0x%llx, uuid: 0x%llx, Disabling the iofences\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: sharedEvent port: %#x eventTraceId: %#llx type: %d signalValue: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN10ANERequest16initSharedEventsEP15ANESharedEventsyRb",
            "prototype": "",
            "backtrace": [
                "__ZN10ANERequest4initER11ANEHWDeviceR37ANEProgramSendRequestAdditionalParamsR21ANEProgramRequestArgsyP15ANESharedEventsRb",
                "__ZN10ANERequest6createER11ANEHWDeviceR37ANEProgramSendRequestAdditionalParamsR21ANEProgramRequestArgsyP15ANESharedEventsRb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: moveResourceToUnwireQueue() failed for aneResourceId: 0x%llx programHandle: 0x%llx currentResourceCount: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN10ANERequest4freeEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: creating %d IO Fences for Shared Event \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: acquiredAllFences: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN10ANERequest12createFencesEv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice29sharedEventNotification_gatedEP20IOSurfaceSharedEventyy",
                "__ZN11ANEHWDevice23sharedEventNotificationEP20IOSurfaceSharedEventyy",
                "__ZN10ANERequest16initSharedEventsEP15ANESharedEventsyRb",
                "__ZN10ANERequest4initER11ANEHWDeviceR37ANEProgramSendRequestAdditionalParamsR21ANEProgramRequestArgsyP15ANESharedEventsRb",
                "__ZN10ANERequest6createER11ANEHWDeviceR37ANEProgramSendRequestAdditionalParamsR21ANEProgramRequestArgsyP15ANESharedEventsRb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: creating IO Fence for IO buffers #%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN10ANERequest11createFenceEP9IOSurfacejyy",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Received duplicate PowerUpEvent port: %x, traceId: %#llx, value: %llx, programId: %d, processId: %d, transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Received PowerUpEvent port: %x, traceId: %#llx, value 0x%llx, expectedValue: 0x%llx programId: %d, processId: %d, transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: StartTimerEvent for req programId: %d, processId: %d, transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Received SharedEvent port: 0x%x, traceId: %#llx, value 0x%llx, expectedValue: 0x%llx programId: %d, processId: %d, transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Received SharedEvent port: 0x%x, traceId: %#llx,  value 0x%llx, expectedValue: 0x%llx programId: %d, processId: %d, transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: acquiredAllWaitEvents: %u, cacheHandle: 0x%llx, programId: %u, processId: %d, transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Disabling IO Fences for Shared Event \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN10ANERequest16updateWaitEventsEPK20IOSurfaceSharedEventyRb",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice29sharedEventNotification_gatedEP20IOSurfaceSharedEventyy",
                "__ZN11ANEHWDevice23sharedEventNotificationEP20IOSurfaceSharedEventyy",
                "__ZN10ANERequest16initSharedEventsEP15ANESharedEventsyRb",
                "__ZN10ANERequest4initER11ANEHWDeviceR37ANEProgramSendRequestAdditionalParamsR21ANEProgramRequestArgsyP15ANESharedEventsRb",
                "__ZN10ANERequest6createER11ANEHWDeviceR37ANEProgramSendRequestAdditionalParamsR21ANEProgramRequestArgsyP15ANESharedEventsRb"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: eventType: %d, symbolIndex: %x, request.property: 0x%x request.numSignalEvents: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN10ANERequest18signalSharedEventsE18ANESharedEventTypej",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: cacheHandle %llx Not valid after PROCEDURE_CALL_CACHE_REQUEST for transactionId: 0x%llx, request: 0x%p\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN10ANERequest16resetCacheHandleERj",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice16ANE_RestoreStateEv",
                "__ZN11ANEHWDevice8ANE_InitEv",
                "__ZN11ANEHWDevice17power_on_hardwareEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: aneResource wire() failed. result: 0x%x surfaceID: %u resourceID: %llu symbolIdx: %u bufferIdx: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN10ANERequest13wireResourcesEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: aneResource unwire() failed. result: 0x%x surfaceID: %u resourceID: %llu symbolIdx: %u bufferIdx: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN10ANERequest15unwireResourcesEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: aneResource dartMap() failed. result: 0x%x surfaceID: %u resourceID: %llu symbolIdx: %u bufferIdx: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN10ANERequest16dartMapResourcesEb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: Transform parsing failed.",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: corrupt vector transform: leftover vector data",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN5DeCxt15ProcessInitInfoEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: illegal procedure_info parameter = nullptr",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal kernel_section parameter = nullptr",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeProgramUpdatePrecheck",
            "prototype": "",
            "backtrace": [
                "_ZinComputeProgramUpdateMutables"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: Invalid aggregate weight buffer",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: Invalid operation info",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeProgramUpdateMutables",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: mutable weight index too large",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: aggregate weight buffer chunk too small",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN5DeCxt17FileIndexToWeightEjyyRPKc",
            "prototype": "",
            "backtrace": [
                "__ZN5DeCxt11GetFileInfoER8FileInfo"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: illegal weight_data parameter = nullptr",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: illegal kernel_segment parameter = nullptr",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeProgramUpdatePrecheckWithSymbolicWeights",
            "prototype": "",
            "backtrace": [
                "_ZinComputeProgramUpdateMutablesWithSymbolicWeights"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: Symbolic weights patcher API requires V4+ metadata",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeProgramUpdateMutablesWithSymbolicWeights",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: vector size overflow: %llu",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN5DeCxt11ParseVectorER5DvPtr",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "DumpHeader failed.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DumpWeightSymbolListWithSizes failed.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "procedure_list_offsets too short.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%d: procedure list offset = 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZN17ZinIrDeserializer10ReadUint64ERy"
                },
                {
                    "string": "ProcedureList at 0x%llx:\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "   Non mutable procedure, no ProcedureList, skipping.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "InitInfo count is 0x%llx:\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "init_info_offset overflow.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "InitInfo at 0x%llx:\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "DumpInitInfo failed.\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_ZinComputeProgramDumpMutableInitInfo",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 2,
            "anchors": [
                {
                    "string": "String list overflow\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZL29DeserializeWeightFileNameListPcmRNSt3__16vectorIPKcN3ANE12ANEAllocatorIS3_EEEE",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s:  Instance index is too big: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: patchClusterMutableInstanceProcedure with instanceProcedureIndex:%d and  programProcedureIndex:%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: symbol:%s bufferAddress:%p weight_data_size:%lld\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: baseMutableSections count: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: cannot find base mutable section buffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: isMutableKernelZeroInitialized is not set, copy baseMutableBuffer\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice36patchClusterMutableInstanceProcedureEP10ANEProcessjjP37ANEClientProgramInstanceProcedureInfoRNSt3__110shared_ptrI11ANEResourceEEij",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice45ANE_PatchClusterProcessInstanceWeightsBuffersEP10ANEProcessP30ANEClientProgramInstanceParamsP4task",
                "__ZN11ANEHWDevice31ANE_ProgramCreateInstance_gatedEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP32ANEProgramCreateAdditionalParams",
                "____ZN11ANEHWDevice25ANE_ProgramCreateInstanceEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP4taskPvPy_block_invoke",
                "__ZN11ANEHWDevice25ANE_ProgramCreateInstanceEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP4taskPvPy"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: patchMutableInstanceProcedure istance index is too big: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: patchMutableInstanceProcedure with instanceProcedureIndex:%d and  programProcedureIndex:%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: instanceProcedureMutableBuffer for procedure should not be there %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: no base mutable buffers in the list\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ZinComputeProgramUpdateMutables - Failed with error code:0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Non-cluster patching succeeded, store the URL of patched weights in process params: numWeightFile=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice29patchMutableInstanceProcedureEP10ANEProcessjjP37ANEClientProgramInstanceProcedureInfoi",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice38ANE_PatchProcessInstanceWeightsBuffersEP10ANEProcessP30ANEClientProgramInstanceParamsP4task",
                "__ZN11ANEHWDevice31ANE_ProgramCreateInstance_gatedEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP32ANEProgramCreateAdditionalParams",
                "____ZN11ANEHWDevice25ANE_ProgramCreateInstanceEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP4taskPvPy_block_invoke",
                "__ZN11ANEHWDevice25ANE_ProgramCreateInstanceEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP4taskPvPy"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Not matching ANEPatchedWeightInfo objects",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Found matching ANEPatchedWeightInfo objects",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice22ANE_isSameMutableFilesEP20ANEPatchedWeightInfoS1_",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice45ANE_PatchClusterProcessInstanceWeightsBuffersEP10ANEProcessP30ANEClientProgramInstanceParamsP4task",
                "__ZN11ANEHWDevice31ANE_ProgramCreateInstance_gatedEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP32ANEProgramCreateAdditionalParams",
                "____ZN11ANEHWDevice25ANE_ProgramCreateInstanceEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP4taskPvPy_block_invoke",
                "__ZN11ANEHWDevice25ANE_ProgramCreateInstanceEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP4taskPvPy"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: LLM procedure is not Mutable for instanceProcId:0x%x:\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: LLM weightBufferClient->bufferAddress: 0x%llx, size: 0x%zx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Not finding proc\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice38ANE_PatchProcessInstanceWeightsBuffersEP10ANEProcessP30ANEClientProgramInstanceParamsP4task",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice31ANE_ProgramCreateInstance_gatedEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP32ANEProgramCreateAdditionalParams",
                "____ZN11ANEHWDevice25ANE_ProgramCreateInstanceEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP4taskPvPy_block_invoke",
                "__ZN11ANEHWDevice25ANE_ProgramCreateInstanceEP30ANEClientProgramInstanceParamsP26ANEProgramCreateArgsOutputP4taskPvPy"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: Freeing all process references for the patched mutable buffer, programHandle: 0x%llx, leadingProcedureId: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Removing specific mutable buffers for instanceProgramHandle: 0x%llx, instance procedureId: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Removing specific mutable buffers for the program handle: 0x%llx, leadingProcedureId: %u\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Patched Mutable buffer is NULL for program handle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice37ANE_ReleasePatchedMutableMemoryBufferEP10ANEProcessP18ANEProgramResource",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ZinComputeProgramUpdateMutablesWithSymbolicWeights - Failed with error code:0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZZN11ANEHWDevice36patchClusterMutableInstanceProcedureEP10ANEProcessjjP37ANEClientProgramInstanceProcedureInfoRNSt3__110shared_ptrI11ANEResourceEEijENK3$_0clEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Model programHandle=0x%llx unwireTimerOptOut=%d pProgramInfo->processList=%p needProgramRewire(%d)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: process->qos=0x%x pProgramResource->qos=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Milli-seconds since last activity = %lld ms programHandle=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Times up. Unwiring Loaded Process programHandle=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ProcessPartialUnwire() failed. process=%p programHandle=0x%llx result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Times up. Unwiring Loaded Program programHandle=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ProgramUnload() failed. programHandle=0x%llx result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: ProgramPartialUnwire() failed for programHandle=0x%llx result: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ProgramPartialUnwire() skipped for programHandle=0x%llx isProgramValid=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Skipped unwiring model programHandle=0x%llx due to needProgramRewire(%d) processCount(%d) allProcessesUnwired(%d)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ProgramHandle: 0x%llx not valid",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice30MemoryUnwireTimerTimeOut_gatedEv_block_invoke",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice30MemoryUnwireTimerTimeOut_gatedEv",
                "__ZN11ANEHWDevice24MemoryUnwireTimerTimeOutEP18IOTimerEventSource",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Process didn't meet criteria for unwire pendingRequestCount = %d programHandle=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "____ZN11ANEHWDevice30MemoryUnwireTimerTimeOut_gatedEv_block_invoke.cold.1",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice30MemoryUnwireTimerTimeOut_gatedEv_block_invoke",
                "__ZN11ANEHWDevice30MemoryUnwireTimerTimeOut_gatedEv",
                "__ZN11ANEHWDevice24MemoryUnwireTimerTimeOutEP18IOTimerEventSource",
                "__ZN11ANEHWDevice5startEP9IOService"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: Cannot enable Memory Unwire Timer \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Enabled Memory Unwire timer!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice23EnableMemoryUnwireTimerEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Given vp is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: vfs_context is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: vp: %p address: 0x%llx vnodeAddress: 0x%lx vnodeID: 0x%x start: 0x%llx length: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: vnode from mapped address check failed, vp: %p vnodeAddress: 0x%lx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice33aneValidateVnodeFromMappedAddressEP5vnodey",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: vnode ptr is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: context ptr is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: fileSize ptr is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: vnode_attr allocation failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: vnode_getattr failed to get data size\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z19aneVnodeGetFileSizeP5vnodeP11vfs_contextPm",
            "prototype": "",
            "backtrace": [
                "__Z14aneVnodeLookupPKcPmPP11vfs_context"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: ERROR: vfs_context_create() failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: Failed to lookup macho file at %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: aneVnodeGetFileSize() failed. result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Success vnode: %p iocount: %d usecount: %d size: %lu filePath: %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__Z14aneVnodeLookupPKcPmPP11vfs_context",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE%d: %s chainingPrepare numInputFreeEvents:%d, totalOutSet:%d, totalLoopback:%d, totalInput: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :Info: ANEHWDevice: ANE is already off.. Retry power ON \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :Info: ANEHWDevice: Client Not found, ProgramChainingPrepare call\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "One chaining/program - Please call ANEProgramStop to remove the existing chainingCacheRequest for a new request\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ERROR: ANEHWDevice: Process not restored, programId: %d, processId: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ERROR: ANEHWDevice: total procedures (%d) exceed max allowed chaining procedures (%d)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ANEHWDevice:Single procedure case: Defaulting to procedure 0: %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ERROR: ANEHWDevice: procedureId: 0x%x not found!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s chainingPrepareArgs->procedureId :0x%x and procedure name: %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Could not create intermediate buffer result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Got intermediate buffer handle=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Network doesn't requre intermediate buffer, return 0 for intermediateBufferHandle\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: total chaining input buffers: %d, output sets: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: found matching input surface(0x%x) in Kernel\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: could not find matching input surface(0x%x) in Kernel\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s deviceLockSurface for chaining input surface(0x%x) failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ERROR: ANEHWDevice: memory descriptor for input mapping is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ERROR: ANEHWDevice: failed when dartmapping for input buffers\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: Input buffer surface id:%u for symbol:%s Plane Count not Match, count=%d expected=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: Input buffer surface id:%u for symbol:%s, plane:%u, smaller than expected! surfaceSize=%d expected=%d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s input: %s Plane 0 offset: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s input %d plane: %d offset: %d, bufferindex:%d, buffersize:0x%x,bufPhysicalAddr:0x%llx \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ERROR: ANEHWDevice: failed to find match inputs with inputIndex: %d from bufferSymbolIndex[%d]\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s outSet(%d) total output buffer (%d) exceeds max buffers(%d)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s data chaining set %d statsBuffer surface(0x%x) in Kernel\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s could not find matching output surface(0x%x) in Kernel\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ERROR: ANEHWDevice: memory descriptor chaining stats buffer is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: Could not create raw stats buffer result=0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s Current set(%d) totalOutput (%d) exceeds max (%d)\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s found matching output surface(0x%x) in Kernel\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s could not find matching out surface(0x%x) in Kernel\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ERROR: ANEHWDevice: memory descriptor for non-coalesced input mapping is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ERROR: ANEHWDevice: failed when dartmapping for output buffers\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: output buffer surface id:%u for symbol:%s Plane Count not Match, count=%d expected=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: Output buffer surface id:%u for symbol:%s, plane:%u, surfaceSize=%d expected=%d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANEHWDevice: Output buffer surface id:%u for symbol:%s, plane:%u, smaller than expected! surfaceSize=%d expected=%d",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s Output %d plane: %d offset: %d, bufferindex:%d, buffersize:0x%x,bufPhysicalAddr:0x%llx \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d: %s :ERROR: ANEHWDevice: output buffer NOT found bufferIndex=%d with outputSymbolIndex[%d] \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s Invalid program handle: 0x%llx, no matching programResource or process\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice32ANE_ProgramChainingPrepare_gatedEP29ANEProgramChainingPrepareArgsP31ANEProgramChainingPrepareOutput",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice26ANE_ProgramChainingPrepareEP29ANEProgramChainingPrepareArgsP31ANEProgramChainingPrepareOutput_block_invoke",
                "__ZN11ANEHWDevice26ANE_ProgramChainingPrepareEP29ANEProgramChainingPrepareArgsP31ANEProgramChainingPrepareOutput"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s enqueue output :pOutSetEnqueue is NULL or setID",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s enqueue output setID is not valid: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s open loop enqueue initial set: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s Output Set(0x%x) enqueue with value: 0x%llx,outsize: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice33ANE_ProgramOutputSetEnqueue_gatedEP30ANEBufferSetEnqueueRequestArgs",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice27ANE_ProgramOutputSetEnqueueEP30ANEBufferSetEnqueueRequestArgs_block_invoke",
                "__ZN11ANEHWDevice27ANE_ProgramOutputSetEnqueueEP30ANEBufferSetEnqueueRequestArgs"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s  :ANEChainingSetActiveProcedureParams is NULL\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s ANE_ProgramChainingSetActiveProcedure_gated programHandle=0x%llx groupCacheHandler=0x%llx activeCacheHandler=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice43ANE_ProgramChainingSetActiveProcedure_gatedEP35ANEChainingSetActiveProcedureParams",
            "prototype": "",
            "backtrace": [
                "____ZN11ANEHWDevice37ANE_ProgramChainingSetActiveProcedureEP35ANEChainingSetActiveProcedureParams_block_invoke",
                "__ZN11ANEHWDevice37ANE_ProgramChainingSetActiveProcedureEP35ANEChainingSetActiveProcedureParams"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: ProcStart for request not sent to FW. programHandle: 0x%llx UUID: 0x%llx cacheHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ProcStart: UUID: 0x%llx cacheHandle 0x%llx transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: ProcStartHw for request not sent to FW. programHandle: 0x%llx UUID: 0x%llx cacheHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ProcStartHw: Event HWTimestamp: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ProcStartHw: UUID: 0x%llx cacheHandle 0x%llx transactionId: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ProcEnd: UUID: 0x%llx cacheHandle 0x%llx programId=%d processId=%d procedureid=%d programEvent=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ProcFail: UUID: 0x%llx cacheHandle 0x%llx programId=%d processId=%d procedureid=%d programEvent=%d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: DataChainingProcEnd. HWTimestamp: %llu\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Invoking the client callback - uuid: 0x%llx cacheHandle 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: ERROR: No async ref set! Skipping callback for programid=%d async ref= 0x%llx programResource=0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: InputTriggerOverflow for cacheHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: OutputSetUnderflow for cacheHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Undefined chaining event: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26processDataChainingRequestEP10ANERequestP30sAnsCmdDataChainingEventReport",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice28processTargetToHostIOCommandEyyy",
                "__ZN11ANEHWDevice23aneInterruptHandlerPrivEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice19aneInterruptHandlerEP22IOInterruptEventSourcei"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: output set(0x%x) is larger than total set: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: chaining event 0x%llx start with output set 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: chaining event 0x%llx startHw with output set 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: chaining event 0x%llx complete with output set 0x%x statsBuf surfaceID: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: sharedEvents not required for output set: %d\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: program is unprepared, stop looping back the output sets\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: open loop output set: %d to firmware, next signal value: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: loopback output set %d send failed\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: output set: %d is not for open loop\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: send cached non-blocking inputs\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: chaining event 0x%llx failed with output set 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: chaining event 0x%llx InputTriggerOverflow with output set 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: chaining event 0x%llx OutputSetUnderflow with output set 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: chaining cacheHandle 0x%llx ProcDropped_ANEInSecureMode with output set 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: chaining cacheHandle: 0x%llx send cached non-blocking inputs eAnsCmdDataChainingEvent_ProcDropped_ANEInSecureMode\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: Ignoring undefined chaining event: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice30processDataChainingCacheHandleEP25ANEChainingCacheReqParamsP30sAnsCmdDataChainingEventReport",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice28processTargetToHostIOCommandEyyy",
                "__ZN11ANEHWDevice23aneInterruptHandlerPrivEP22IOInterruptEventSourcei",
                "__ZN11ANEHWDevice19aneInterruptHandlerEP22IOInterruptEventSourcei"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s output set(0x%x) is larger than total set: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s singal set: %d with value: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice26signalChainingSharedEventsEP25ANEChainingCacheReqParams18ANESharedEventTypejy",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ANE%d:%s: ERROR: ANEHWDevice: client ptr: %p not found \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "ANE%d:%s: ERROR: ANEHWDevice: client ptr: %p is from isRCCameraClient\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice21ANE_setRCClient_gatedEPv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice15ANE_setRCClientEPv"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s: %s: force sending CSNE_CMD_FORCE_DISABLE_CACHE_REQUESTS \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: CSNE_CMD_FORCE_DISABLE_CACHE_REQUESTS Failed, status: 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "%s: %s: clean up client for %s\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__ZN11ANEHWDevice10findClientEPvPP16ANEClientContextPP13OSValueObjectIS1_E"
                }
            ],
            "symbol": "__ZN11ANEHWDevice21cleanupRCClient_gatedEbPv",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice23RCClientDieTimerHandlerEP18IOTimerEventSource"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s: %s: Releasing client mapping \n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: No client prorams in client context!\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                },
                {
                    "string": "[ERROR] %s: %s: No iterator\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice32cleanupRCClientWithContext_gatedER16ANEClientContext",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice21cleanupRCClient_gatedEbPv",
                "__ZN11ANEHWDevice23RCClientDieTimerHandlerEP18IOTimerEventSource"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "[ERROR] %s: %s: Process not created yet for programHandle: 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "__ZN11ANEHWDevice32cleanupRCClientWithContext_gatedER16ANEClientContext.cold.1",
            "prototype": "",
            "backtrace": [
                "__ZN11ANEHWDevice32cleanupRCClientWithContext_gatedER16ANEClientContext",
                "__ZN11ANEHWDevice21cleanupRCClient_gatedEbPv",
                "__ZN11ANEHWDevice23RCClientDieTimerHandlerEP18IOTimerEventSource"
            ]
        }
    ]
}