{
    "target": "com.apple.filesystems.hfs.kext",
    "total": 184,
    "version": {
        "max": "24.5.0",
        "min": "24.4.0"
    },
    "signatures": [
        {
            "args": 1,
            "anchors": [
                {
                    "string": "hfs_extendfs: not enough space on device (vol=%s)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_extendfs: invalid size (newsize=%qu, oldsize=%qu)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_extendfs: current blockSize=%u too small for newsize=%qu\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_extendfs: old: size=%qu, blkcnt=%u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_extendfs: new: size=%qu, blkcnt=%u, addblks=%u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_extendfs: will extend \"%s\" by %d blocks\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_extendfs: old: partition_avh_sector=%qu, fs_avh_sector=%qu\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_extendfs: new: partition_avh_sector=%qu, fs_avh_sector=%qu\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_extendfs: error %d adding extents\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_extendfs: error %d clearing blocks\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_extendfs: error %d setting bitmap\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_extendfs: error %d setting bitmap (VH)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_extendfs: couldn't flush volume headers (%d)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_extendfs: Could not extend journal size\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_extendfs: extended \"%s\" to %d blocks (was %d blocks)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_extentfs: failed error=%d on vol=%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_extendfs",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_truncatefs: old: size=%qu, blkcnt=%u, freeblks=%u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_truncatefs: new: size=%qu, blkcnt=%u, reclaimblks=%u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_truncatefs: invalid size (newsize=%qu, oldsize=%qu)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_truncatefs: insufficient space (need %u blocks; have %u free blocks)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_truncatefs: couldn't reclaim space on %s (error=%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_truncatefs: didn't reclaim enough space on %s (error=%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_truncatefs: Error %d allocating new alternate volume header\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_truncatefs: shrank \"%s\" to %d blocks (was %d blocks)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_truncatefs: old: partition_avh_sector=%qu, fs_avh_sector=%qu\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_truncatefs: new: partition_avh_sector=%qu, fs_avh_sector=%qu\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_truncatefs: unexpected error flushing volume header (%d)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_truncatefs: failed error=%d on vol=%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_truncatefs",
            "prototype": "",
            "backtrace": [
                "_hfs_vnop_ioctl"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_extend_journal: not resizing the journal because it is on an external device.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_extend_journal: journal old=%u, new=%qd\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_extend_journal: Extended journal size to %u bytes on \"%s\"\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_extend_journal",
            "prototype": "",
            "backtrace": [
                "_hfs_extendfs"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_relocate_journal_file: hfs_start_transaction returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_relocate_journal_file: BlockAllocate returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_relocate_journal_file: newBlockCount != jnlBlockCount (%u, %u)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_relocate_journal_file: cat_idlookup returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_relocate_journal_file: cat_update returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_relocate_journal_file: journal_relocate returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_relocate_journal_file: Successfully relocated journal from (%u,%u) to (%u,%u)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_relocate_journal_file: hfs_end_transaction returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_relocate_journal_file: Error relocating journal file (error=%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_relocate_journal_file",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_journal_relocate_callback: failed to read JIB (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_journal_relocate_callback: failed to write JIB (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_journal_relocate_callback: hfs_flush failed (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_journal_relocate_callback",
            "prototype": "",
            "backtrace": [
                "_journal_relocate",
                "_hfs_relocate_journal_file"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_reclaimspace: Unable to determine total blocks to reclaim error=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaimspace: Total number of blocks to reclaim = %u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaimspace: hfs_reclaim_journal_file failed (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaimspace: hfs_reclaim_journal_info_block failed (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaimspace: reclaim extents b-tree returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaimspace: reclaim allocation file returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaimspace: reclaim catalog b-tree returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaimspace: reclaim attribute b-tree returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaimspace: reclaim startup file returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaimspace: hfs_reclaim_filespace returned error=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaimspace: hfs_reclaim_xattrspace returned error=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "waiting on reserved blocks",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_systemfile_lock"
                },
                {
                    "string": "hfs_reclaim_journal_file: cannot find .journal file!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_journal_file: Relocated %u blocks from journal on \"%s\"\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_journal_info_block: hfs_start_transaction returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_journal_info_block: BlockAllocate returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_journal_info_block: blockCount != 1 (%u)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_journal_info_block: failed to read JIB (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_journal_info_block: failed to write new JIB (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_journal_info_block: hfs_flush failed (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_journal_info_block: cat_idlookup returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_journal_info_block: cat_update returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_journal_info_block: hfs_flushvolumeheader returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_journal_info_block: hfs_end_transaction returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_journal_info_block: journal_flush returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_journal_info: Relocated 1 block from journal info on \"%s\"\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_journal_info_block: Successfully relocated journal info block from (%u,%u) to (%u,%u)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_journal_info_block: Error relocating journal info block (error=%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_reclaimspace",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_truncatefs: %d%% done...\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_truncatefs_progress",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "hfs_reclaim_file: reclaiming '%.*s'\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_file: journal_flush returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_file: === Start reclaiming %sfork for %sid=%u ===\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "dirlink",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_file: cat_lookup_dirlink for fileID=%u returned error=%u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_file: Will check overflow records, offset=%d, ff_blocks=%u, cur_blockCount=%u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_file: Relocated %u blocks from fileID=%u on \"%s\"\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_file: === Finished relocating %sfork for fileid=%u (error=%d) ===\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: cat_lookup_dirlink(): Error looking up file record for id=%u (error=%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: cat_lookup_dirlink(): Requested cnid=%u != found_cnid=%u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_reclaim_file",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_reclaim_extent: Split straddling extent %u:(%u,%u) for %u blocks\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_extent: Round-down newBlockCount to be multiple of nodeSize, node_allocblks=%u, old=%u, new=%u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_extent: After round-down newBlockCount=0, skip split, relocate full extent\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_extent: Split straddling extent %u:(%u,%u) for %u blocks failed, relocate full extent\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_extent: fileID=%u start=%u, %u:(%u,%u) BlockAllocate error=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_extent: Fixing extent block count, node_blks=%u, old=%u, new=%u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_extent: Not enough contiguous blocks available to relocate fileID=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_extent: fileID=%u start=%u, %u:(%u,%u) split error=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_extent: fileID=%u start=%u, %u:(%u,%u) contig BlockAllocate error=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_extent: fileID=%u start=%u, %u:(%u,%u)=>(%u,%u) hfs_copy_extent error=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_extent: fileID=%u, update record error=%u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_extent: fileID=%u start=%u, %u:(%u,%u) BlockDeallocate error=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_extent: Relocated record:%u %u:(%u,%u) to (%u,%u)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_copy_extent: vp=%p (cp=%p) not owned?\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_copy_extent: Error %d from VNOP_STRATEGY (read)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_copy_extent: Error %d from VNOP_STRATEGY (write)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_copy_extent: hfs_flush failed (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_reclaim_extent",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_split_extent: No splitting required for newBlockCount=0\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_split_extent: Split record:%u recStartBlock=%u %u:(%u,%u) for %u blocks\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_split_extent: Maximum 8 extents allowed for extents overflow btree, cannot split further.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_split_extent: Save 7:(%u,%u) to shift into overflow record\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_split_extent: Shift %u:(%u,%u) to %u:(%u,%u)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_split_extent: Split %u:(%u,%u) and ",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "%u:(%u,%u)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "overflow:(%u,%u)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_split_extent: fileID=%u BTReplaceRecord returned error=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_split_extent: No extent entry to be shifted into overflow records\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_split_extent: Will shift (%u,%u) into overflow record with startBlock=%u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_split_extent: fileID=%u startBlock=%u BTSearchRecord error=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_split_extent: No records found for startBlock=%u, will create new with startBlock=%u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_split_extent: Shift overflow=(%u,%u) to record with updated startBlock=%u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_split_extent: fileID=%u startBlock=%u BTDeleteRecord error=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_split_extent: Deleted extent record with startBlock=%u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_split_extent: fileID=%u, startBlock=%u BTInsertRecord error=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_split_extent: Inserted extent record with startBlock=%u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_split_extent",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_reclaim_filespace: hfs_vget(%u) failed.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaimspace: Error reclaiming datafork blocks of fileid=%u (error=%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaimspace: Error looking up rvp for fileid=%u (error=%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaimspace: Error reclaiming rsrcfork blocks of fileid=%u (error=%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_filespace: Relocated %u blocks from %u files on \"%s\"\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_reclaim_filespace",
            "prototype": "",
            "backtrace": [
                "_hfs_reclaimspace"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_reclaim_xattrspace: Error relocating xattrs for fileid=%u (error=%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_xattrspace: Relocated %u xattr blocks from %u files on \"%s\"\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_xattr: === Start reclaiming xattr for id=%u ===\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_xattr",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_vnode_waitforwrites"
                },
                {
                    "string": "hfs_reclaim_xattr: fileID=%u hfs_reclaim_extent error=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_reclaim_xattr: === Finished relocating xattr for fileid=%u (error=%d) ===\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_reclaim_xattrspace",
            "prototype": "",
            "backtrace": [
                "_hfs_reclaimspace"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"hfs_chown: lost quota\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_hfs_chown",
            "prototype": "",
            "backtrace": [
                "_hfs_vnop_setattr"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_fsync",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_buf_flushdirtyblks"
                }
            ],
            "symbol": "_hfs_fsync",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"hfs: symlink bp @ %p is not marked meta-data!\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_hfs_removefile_callback",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "hfs_removefile: deleting file %s (id=%d) vol=%s err=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_removefile",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_vnop_rename: error updating parent chain for %u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_vnop_renamex",
            "prototype": "",
            "backtrace": [
                "_hfs_vnop_rename"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_vnop_readdir: repairing valence to non-zero! \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_vnop_readdir",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"hfs: ff_blocks %d is less than unalloc blocks %d\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_hfs_prepare_fork_for_update",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "hfs_vgetrsrc: couldn't get resource fork for %s, vol=%s, err=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_vgetrsrc",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_move_data: encountered error %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_move_data",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "blockSize >= kMinNodeSize",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                }
            ],
            "symbol": "_SetBTreeBlockSize",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"hfs: ModifyBlockStart: null bp  for blockdescptr %p?!?\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_ModifyBlockStart",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"hfs: btree_swap_node: about to write corrupt node!\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_btree_swap_node",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"hfs: releaseblock: modified is 0 but forcewrite set! bp %p\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"hfs: releaseblock: modified is 0 but markdirty set! bp %p\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_ReleaseBTreeBlock",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"hfs: btree file eof %lld less than orig size %lld!\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"hfs: truncate file didn't! fcbEOF %lld nsize %d fcb %p\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"hfs: error truncating btree files (sz 0x%llx, trim %lld, ret %ld)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"hfs: extendbtree: fcb %p has eof 0x%llx not a multiple of 0x%x (trim %llx)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_ExtendBTreeFile",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_create_attr_btree",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_lck_mtx_lock"
                },
                {
                    "string": "\"hfs_create_attr_btree: bad buffer size (%d)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_create_attr_btree: vol=%s init_attrdata_vnode() error=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_create_attr_btree",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: BTIterateRecord() found invalid btree node on volume %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_BTIterateRecord",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: BTIterateRecords() found invalid btree node on volume %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_BTIterateRecords",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "jnl-mutex",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_lck_grp_alloc_init"
                },
                {
                    "string": "cnode_hash",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_lck_grp_alloc_init"
                },
                {
                    "string": "hfs-mutex",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_lck_grp_alloc_init"
                },
                {
                    "string": "hfs-rwlock",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_lck_grp_alloc_init"
                },
                {
                    "string": "hfs-spinlock",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_lck_grp_alloc_init"
                },
                {
                    "string": "btree_node_reserve",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_lck_grp_alloc_init"
                }
            ],
            "symbol": "_hfs_init",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "jnl: %s: create: journal size %lld looks bogus.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: create: journal size (%lld) too small given sector size of (%u)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: create: error: phys blksize %u bigger than min fs blksize %zd\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: create: journal size 0x%llx is not an even multiple of block size 0x%ux\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: create: avoiding old sequence number 0x%x (0x%x)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: journal_create: failed to write journal header.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_journal_create",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "jnl: %s: open: error: phys blksize %u bigger than min fs blksize %zd\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: open: journal size %lld looks bogus.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: open: journal size (%lld) too small given sector size of (%u)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: open: journal size 0x%llx is not an even multiple of block size 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: open: could not read %u bytes for the journal header.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: open: bad jhdr size (%d) \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: open: journal magic is bad (0x%x != 0x%x)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: open: journal checksum is bad (0x%x != 0x%x)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: open: temporarily switched block size from %u to %u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: open: jhdr start looks bad (0x%llx max size 0x%llx)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: open: jhdr end looks bad (0x%llx max size 0x%llx)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: open: jhdr size looks bad (0x%llx)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: open: journal start (0x%llx) not a multiple of 512?\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: open: journal end (0x%llx) not a multiple of block size (0x%x)?\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl %s: open: blhdr size looks bogus! (%d) \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: journal start/end pointers reset! (s 0x%llx e 0x%llx)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: journal_open: Error replaying the journal!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: open: failed to update journal header size\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: open: jhdr size and blhdr size are not compatible (0x%llx, %d, %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: open: restored block size after error\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_journal_open",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "jnl: %s: is_clean: failed to get device block size.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: is_clean: error: phys blksize %d bigger than min fs blksize %zd\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: is_clean: journal size %lld looks bogus.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: is_clean: journal size 0x%llx is not an even multiple of block size 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: is_clean: could not read %d bytes for the journal header.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: is_clean: journal magic is bad (0x%x != 0x%x)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: is_clean: journal checksum is bad (0x%x != 0x%x)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_journal_is_clean",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "jnl_close",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_tsleep"
                },
                {
                    "string": "jnl: %s: close: buffer flushing didn't seem to flush out all the transactions! (0x%llx - 0x%llx)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: close: journal is invalid.  aborting outstanding transactions\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"jnl: %s: close: jnl @ %p had both an active and cur tr\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_journal_close",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"jnl: start_tr: active_tr is NULL (jnl @ %p, owner %p, current_thread %p\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: start_tr: owner %p, nested count %d, active_tr %p jnl @ %p\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_hfs_start_transaction",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"jnl: modify_block_start: bp @ %p is not a meta-data block! (jnl %p)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: modify_block_start: called w/out a transaction! jnl %p, owner %p, curact %p\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: mod block start: phys blksz %d is too small (%d, %d)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "jnl: %s: phys blksz got bigger (was: %d/%d now %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"jnl: mod block start: bufsize %d not a multiple of block size %d\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: transaction too big (%d >= %lld bytes, bufsize %d, tr %p bp %p)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_journal_modify_block_start",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"jnl: modify_block_end: bp %p not locked! jnl @ %p\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: modify block end: no way man, prev == NULL?!?, jnl %p, bp %p\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: modify_block_end: i = %d, max_blocks %d\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: modify_block_end: old func %p / arg %p (func %p)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_journal_modify_block_end",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"jnl: modify_block_end: called with bp not B_LOCKED\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_journal_kill_block",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 4,
            "anchors": [
                {
                    "string": "\"jnl: trim_add_extent: called w/out a transaction! jnl %p, owner %p, curact %p\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "jnl: trim_add_extent: out of memory!",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: BlockMarkFreeInternal() trying to free non-existent blocks starting at %u (numBlock=%u) on volume %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: BlockMarkFreeInternal() trying to free unallocated blocks on volume %s <%u, %u>\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_unmap_free_ext: ignoring trim vol=%s @ off %lld len %lld \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_unmap_free_extent: error %d from journal_trim_add_extent for vol=%s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_BlockMarkFreeInternal",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 4,
            "anchors": [
                {
                    "string": "\"jnl: trim_remove_extent: called w/out a transaction! jnl %p, owner %p, curact %p\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_unmap_alloc_extent: error %d from journal_trim_remove_extent for vol=%s",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_BlockMarkAllocatedInternal",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"jnl: end_tr: I'm not the owner! jnl %p, owner %p, curact %p\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: jnl @ %p has negative nested count (%d). bad boy.\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: journal @ %p has active tr (%p) and cur tr (%p)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_journal_end_transaction",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "jnl: %s: relocate: bad jhdr size (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: relocate: offset 0x%llx is not an even multiple of block size 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: relocate: journal size 0x%llx is not an even multiple of block size 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"jnl: relocate: Not the owner! jnl %p, owner %p, curact %p\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "jnl: %s: relocate: end_transaction failed (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_journal_relocate",
            "prototype": "",
            "backtrace": [
                "_hfs_relocate_journal_file"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "jnl: %s: enabling FUA writes (features 0x%x)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_get_io_info",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"jnl: do_jnl_io: bad offset 0x%llx (max 0x%llx)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: do_jnl_io: curlen == %lld, offset 0x%llx len %zd\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: request for i/o to jnl-header without JNL_HEADER flag set! (len %lld, data %p)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "jnl: %s: do_jnl_io: strategy err 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_do_journal_io",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hw.memsize",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_sysctlbyname"
                },
                {
                    "string": "jnl->jhdr->jhdr_size > 0",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                }
            ],
            "symbol": "_size_up_tbuffer",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "jnl: %s: flushing fs disk buffer returned 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: write_journal_header: error writing the journal header!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_write_journal_header",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "jnl: %s: replay_journal: from: %lld to: %lld (joffset 0x%llx)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: replay_journal: Could not read block list header block @ 0x%llx!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: Extra txn replay stopped @ %lld / 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: replay_journal: bad block list header @ 0x%llx (checksum 0x%x != 0x%x)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: 2: extra replay stopped @ %lld / 0x%llx (seq %d < %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: txn sequence numbers out of order in txn @ %lld / %llx! (%d < %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: pre-sequence-num-enabled txn's - can not go further than end (%lld %lld).\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: examining extra transactions starting @ %lld / 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: replay_journal: bad looking journal entry: max: %d num: %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: replay_journal: bogus block number 0x%llx\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: replay_journal: invalid bsize\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: txn starting at %lld (%lld) @ index %3d bnum %lld (%d) with disk cksum != blhdr cksum (0x%.8x 0x%.8x)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: 0x%.8x 0x%.8x 0x%.8x 0x%.8x  0x%.8x 0x%.8x 0x%.8x 0x%.8x\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: replay_journal: trouble adding block to co_buf\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: no known good txn start offset! aborting journal replay.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: repeated errors replaying journal! aborting journal replay.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: restarting journal replay (%lld - %lld)!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: start %lld != end %lld.  resetting end.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: journal replay done.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: blhdr num blocks looks suspicious (%d / blhdr size %d).  not swapping.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"jnl: do_overlap: overlap with previous entry not a multiple of %zd\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: do_overlap: overlap of %lld is not multiple of %zd\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: do_overlap: after overlap, new block size is invalid (%u)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "jnl: %s: update_fs_block: error reading fs block # %lld! (ret %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_do_journal_io"
                },
                {
                    "string": "jnl: %s: update_fs_block: buf_getblk() for %lld failed! failing update.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: update_fs_block: failed to update block %lld (ret %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_replay_journal",
            "prototype": "",
            "backtrace": [
                "_journal_open"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"jnl: insert_block: bad size in insert_block (%zd)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_insert_block",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "jnl: trim_realloc: unable to grow extent list!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_trim_realloc",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "jnl: trim_remove_extent: out of memory!",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_trim_remove_extent",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"jnl: jnl @ %p already has cur_tr %p, new tr: %p\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: end_transaction: async_trim already non-NULL!\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: end_transaction: end is bogus 0x%llx (sz 0x%llx)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: inconsistent binfo (NULL bp w/bnum %lld; jnl @ %p, tr %p)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"could not acquire bp %p (err %d)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: end_tr: !!!DANGER!!! bp %p flags (0x%x) not LOCKED & DELWRI\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: buf_create_shadow returned NULL\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: check_free_space: buffer flushing isn't working \" \"(jnl @ %p s %lld e %lld f %lld [active start %lld]).\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"jnl: check_free_space: tr starting @ 0x%llx not flushing (jnl %p).\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "check_free_space1",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_free_space"
                },
                {
                    "string": "check_free_space2",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_tsleep"
                }
            ],
            "symbol": "_end_transaction",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "journal for dev %s:",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "  jdev_offset %.8llx\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "  magic: 0x%.8x\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "  start: 0x%.8llx\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "  end:   0x%.8llx\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "  size:  0x%.8llx\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "  blhdr size: %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "  jhdr size: %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "  chksum: 0x%.8x\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "  completed transactions:\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "    0x%.8llx - 0x%.8llx\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_dump_journal",
            "prototype": "",
            "backtrace": [
                "_end_transaction"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "jnl: %s: end_tr: bad news! buffer w/null vp and l/blkno = %qd/%qd.  aborting the transaction.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: end_tr: vnop_blktooff failed\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: end_tr: can't blockmap the buffer\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: end_tr: blk not physically contiguous on disk\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "jnl: %s: end_transaction: only wrote %d of %d bytes to the journal!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"jnl: end_transaction: bad tr journal start/end: 0x%llx 0x%llx\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_finish_end_transaction",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"jnl: buffer_flushed: did not find tr w/start @ %lld (tr %p, jnl %p)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_buffer_flushed_callback",
            "prototype": "",
            "backtrace": [
                "_finish_end_transaction"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ISSET(buf_flags(tbp), B_LOCKED)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                },
                {
                    "string": "\"jnl: abort_tr: got back a different bp! (bp %p should be %p, jnl %p\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "jnl: %s: abort_tr: could not find block %lld for vnode!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_abort_transaction",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_chash_getvnode",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_lck_mtx_lock_spin"
                }
            ],
            "symbol": "_hfs_chash_getvnode",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_chash_getcnode",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_lck_mtx_lock_spin"
                },
                {
                    "string": "\"%s - should never get here when skiplock is set \\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_chash.c",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"hfs_getnewvnode: orphaned vnode (data)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"hfs_getnewvnode: orphaned rsrc fork\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"hfs_getnewvnode: orphaned vnode (rsrc)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"hfs_getnewvnode: orphaned data fork\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_hfs_getnewvnode",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_getxattr: vol=%s %d,%s invalid record size %d (expecting %lu)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_getxattr: %s missing extents, only %d blks of %d found\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_getxattr_internal",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_setxattr: write_attr_data vol=%s err (%d) %s:%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_setxattr: remove_attribute_records vol=%s err (%d) %s:%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_setxattr: BTInsertRecord(): vol=%s %d,%s err=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_setxattr: BTInsertRecord() overflow: vol=%s %d,%s err=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_setxattr_internal",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "system.xattrextents",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_buildattrkey"
                }
            ],
            "symbol": "_hfs_set_volxattr",
            "prototype": "",
            "backtrace": [
                "_hfs_vnop_ioctl"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: remove_attribute_records: bad record size %d (expecting %lu)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs: remove_attribute_records: corruption...\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs: remove_attribute_records: BTSearchRecord: vol=%s, err=%d (%d), totalblks %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_remove_attribute_records",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "bm_valid_index(from, len)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "bm_valid_index(i, len)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_bm_find",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "iter->i < iter->len",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"cannot find xattr fext for %llu\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_hfs_vnop_blockmap",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "!*ret",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_xattr_fext_alloc",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: unexpected error from SearchBTreeRecord\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: can't insert record -- already exists\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: error from DeleteExtents (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_MoveExtents",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "hfs_swap_BTNode: invalid forward link (0x%08x >= 0x%08x)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_swap_BTNode: invalid backward link (0x%08x >= 0x%08x)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_swap_BTNode: invalid forward link (0x%08x == 0x%08x)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_swap_BTNode: invalid backward link (0x%08x == 0x%08x)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_swap_BTNode: invalid node kind (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_swap_BTNode: invalid node height (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_swap_BTNode: invalid record count (0x%04X)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_swap_BTNode: offset #%d invalid (0x%04X) (blockSize 0x%x numRecords %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_swap_BTNode: offsets %d and %d out of order (0x%04X, 0x%04X)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_UNswap_BTNode: invalid forward link (0x%08X)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"hfs_UNswap_BTNode: invalid forward link (0x%08x == 0x%08x)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"hfs_UNswap_BTNode: invalid backward link (0x%08X)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"hfs_UNswap_BTNode: invalid backward link (0x%08x == 0x%08x)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"hfs_UNswap_BTNode: invalid node kind (%d)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"hfs_UNswap_BTNode: invalid node height (%d)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"hfs_UNswap_BTNode: invalid record count (0x%04X)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"hfs_UNswap_BTNode: offset #%d invalid (0x%04X) (blockSize 0x%x numRecords %d)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"hfs_UNswap_BTNode: offsets %d and %d out of order (0x%04X, 0x%04X)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs: node=%lld fileID=%u volume=%s device=%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: extents key #%d offset too big (0x%04X)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: extents key #%d offset too big (0x%04X)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: extents key #%d invalid length (%d)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: extents key #%d invalid length (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: catalog key #%d offset too big (0x%04X)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: catalog key #%d offset too big (0x%04X)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: catalog key #%d invalid length (%d)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: catalog key #%d invalid length (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: catalog key #%d too big\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: catalog key #%d too big\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: catalog record #%d keyLength=%d expected=%lu\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: catalog record #%d keyLength=%d expected=%lu\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: catalog folder record #%d too big\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: catalog folder record #%d too big\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: catalog file record #%d too big\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: catalog file record #%d too big\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: catalog thread record #%d too big\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: catalog thread record #%d too big\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: catalog thread record #%d name too big\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: catalog thread record #%d name too big\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: unrecognized catalog record type (0x%04X; record #%d)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: unrecognized catalog record type (0x%04X; record #%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: attr key #%d offset too big (0x%04X)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: attr key #%d offset too big (0x%04X)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: attr key #%d too big (%d)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: attr key #%d too big (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: attr key #%d keyLength=%d attrNameLen=%d\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: attr key #%d keyLength=%d attrNameLen=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: attr inline #%d too big\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: attr inline #%d too big\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: attr inline #%d too big (attrSize=%u)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: attr inline #%d too big (attrSize=%u)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: attr fork data #%d too big\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: attr fork data #%d too big\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: attr extents #%d too big\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: attr extents #%d too big\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: hotfile #%d offset too big (0x%04X)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: hotfile #%d offset too big (0x%04X)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: hotfile #%d incorrect keyLength %d\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_swap_HFSPlusBTInternalNode: hotfile #%d incorrect keyLength %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_swap_HFSPlusBTInternalNode: fileID %u is not a system B-tree\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_hfs_swap_BTNode",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_vnop_ioctl: Marking the boot volume corrupt.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: Disabling metadata zone on %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: fsctl() could not initialize summary table for %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_vnop_ioctl",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"hfs: hfs_ubc_setsize called without exclusive truncate lock!\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs: hfs_ubc_setsize called without exclusive truncate lock!",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_ubc_setsize",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"decmpfs_pagein_compressed: couldn't ubc_upl_map a single page\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_hfs_vnop_pagein",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"hfs_vnop_pageout: unforeseen clean page @ index %d for UPL %p\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_hfs_vnop_pageout",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"hfs_vnop_bwrite: about to write corrupt node!\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"hfs: CLEARING the lock bit on bp %p\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_hfs_vnop_bwrite",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "hfs: can't pin vnode of type %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: can't pin a vnode w/unalloced blocks (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_pin_vnode",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_relocate: allocation failed id=%u, vol=%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_relocate",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "cp->c_lockowner == current_thread()",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                },
                {
                    "string": "cp->c_truncatelockowner == current_thread()",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                }
            ],
            "symbol": "_hfs_flush_invalid_ranges",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "VTOC(vp)->c_lockowner != current_thread()",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                },
                {
                    "string": "VTOC(vp)->c_truncatelockowner == current_thread()",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                }
            ],
            "symbol": "_hfs_zero_eof_page",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"hfs_truncate: invoked on non-UBC object?!\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_do_hfs_truncate",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_clonefile: cluster_read failed - %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_clonefile: cluster_read: uio_resid = %lld\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_clonefile: cluster_write failed - %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_clonefile: cluster_write failed - uio_resid not zero\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_clonefile",
            "prototype": "",
            "backtrace": [
                "_hfs_relocate"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_clonesysfile: meta_bread error %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_clonesysfile: b_bcount is only %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_clonesysfile: getblk failed on blk %qd\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_clonesysfile",
            "prototype": "",
            "backtrace": [
                "_hfs_relocate"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "CheckBTreeKey: bad key length!",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_ReplaceBTreeRecord",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: cat_idlookup: Requested cnid (%d / %08x) != dcnid (%d / %08x)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_cat_idlookup",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: cat_create() failed to delete thread record id=%u on vol=%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_cat_create",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: cat_create: could not undo (BTInsert = %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: cat_create: could not undo (BTDelete = %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs: getparentcnid: unknown recordType (crp @ %p)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_cat_rename",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: cat_delete() failed to delete thread record id=%u on vol=%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_cat_delete",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: cat_check_link_ancestry: getkey failed id=%u, vol=%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_getkey"
                },
                {
                    "string": "hfs: cat_check_link_ancestry: cannot find id=%u, vol=%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_getkey"
                }
            ],
            "symbol": "_cat_check_link_ancestry",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: cat_update_siblinglinks: couldn't resolve cnid=%d, vol=%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_cat_update_siblinglinks",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: cat_createlink: err %d from buildkey\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: cat_createlink: BTInsertRecord err=%d, vol=%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: cat_createlink() failed to delete thread record on volume %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: createindirectlink: linknum is zero!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_createindirectlink",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: cat_resolvelink: can't find inode=%s on vol=%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_cat_resolvelink",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: set hardlink bit on vol=%s cnid=%u inoid=%u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: clear hardlink bit on vol=%s cnid=%u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: set linkcount=1 on vol=%s cnid=%u old=%u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_cat_lookupbykey",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: catrec_update: id %d != %d, vol=%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs: catrec_update: rsrc fork == data fork\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_catrec_update",
            "prototype": "",
            "backtrace": [
                "_cat_update_internal"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: update_siblinglinks_callback: unexpected rec type %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: update_siblinglinks_callback: file %d isn't a chain\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_update_siblinglinks_callback",
            "prototype": "",
            "backtrace": [
                "_cat_update_siblinglinks"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: cat_findposition: invalid record type %d in dir %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_cat_findposition",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_recording_suspend: err %d opening btree\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_recording_suspend",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: failed to open the btree err=%d.  Unable to re-pin hotfiles.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_repin_hotfiles",
            "prototype": "",
            "backtrace": [
                "_hfs_vnop_ioctl"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": ".hotfile-suspend",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_GetFileInfo"
                },
                {
                    "string": "hfs: %s: %s: hotfiles explicitly disabled!  remove /.hotfiles-suspend to re-enable\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": ".hotfile-reset",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_GetFileInfo"
                },
                {
                    "string": "hfs: failed to open the btree err=%d.  Recreating hotfile btree.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: hotfile btree is zero bytes long?!  recreating it.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: %s: %s: creating the hotfile btree\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_recording_init: hfc_filevp exists (vp = %p)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_recording_init: err %d BTScanInit\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_recording_init: err %d BTScanNext\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_recording_init: BTInsertRecord failed %d (fileid %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_hotfile_reset: err %d BTScanNext\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: cleared HotFileCache related bits on %d files out of %d (dircount %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: hotfile_reset: deleting existing hotfile btree\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_recording_init",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: failed to delete record for file-id %d : err %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs:2: failed to delete record for file-id %d : err %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfc_btree_delete_record",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "hfs: %s: %s: hotfile freeblocks: %d, max: %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_recording_start",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_recording_stop: hfc_filevp exists (vp = %p)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "!hfsmp->hfc_filelist",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                },
                {
                    "string": "hfs_agehotfiles: BTIterateRecord: %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_agehotfiles: out of order keys!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_agehotfiles: invalid record length %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_agehotfiles: invalid key length %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_agehotfiles: %d of %d BTIterateRecord: %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_agehotfiles: BTDeleteRecord failed %d (file %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_agehotfiles: BTInsertRecord failed %d (file %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_agehotfiles: %d of %d BTUpdateRecord failed %d (file %d, %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: hotfiles_refine: BTUpdateRecord failed %d (file %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: hotfiles_refine: BTDeleteRecord failed %d (file %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: hotfiles_refine: BTInsertRecord failed %d (file %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: hotfiles_adopt:1: BTInsertRecord failed %d/%d (fileid %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: hotfiles_adopt:2: BTInsertRecord failed %d/%d (fileid %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: hotfiles_evict: invalid key length %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: hotfiles_evict: err %d getting file %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_sync",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "mdworker",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strncmp"
                },
                {
                    "string": "mds_stores",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strncmp"
                },
                {
                    "string": "makewhatis",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strncmp"
                }
            ],
            "symbol": "_hf_ignore_process",
            "prototype": "",
            "backtrace": [
                "_hfs_addhotfile_internal"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: hfc_btree_open: cat_lookup error %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: hfc_btree_open: hfs_getnewvnode error %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: hfc_btree_open: BTOpenPath error %d; filesize %lld\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs: hfc_btree_open: not a system file (vp = %p)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_hfc_btree_open_ext",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: error %d removing HFBT on %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfc_btree_delete",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"hfs: hfc_btree_create: hfc_filevp exists (vp = %p)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs: error %d creating HFBT on %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: created HFBT on %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: error %d growing HFBT on %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: error %d writing HFBT on %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfc_btree_create",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_lookup",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_tsleep"
                }
            ],
            "symbol": "_hfs_vnop_lookup",
            "prototype": "",
            "backtrace": [
                "_hfs_setup_default_cf_hotfiles",
                "_hfs_recording_init"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "searchInfo != NULL",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                }
            ],
            "symbol": "_UnpackSearchAttributeBlock",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "hfs_mount: copyin returned %d for fs\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mount: hfs_reload returned %d on %s \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mount: MNT_RELOAD not supported on rdwr filesystem %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mount: VFS_SYNC returned %d during b-tree sync of %s \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mount: hfs_flushfiles returned %d on %s \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mount: FSYNC on devvp returned %d for fs %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mount: attempting to mount inconsistent non-root volume %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mount: journal_open == NULL; couldn't be opened on %s \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mount: hfs_erase_unused_nodes returned %d for fs %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mount: hfs_flushvolumeheader returned %d for fs %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mount: hfs_changefs returned %d for %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mount: hfs_mountfs returned error=%d for device %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "unknown-dev",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs_mount: error - kext resource count is non-positive: %d but at least one active mount\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"hfs_reload: dirty1\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_hfs_mount",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "hfs_mountfs: DKIOCGETBLOCKSIZE failed\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: logical block size 0x%x looks bad.  Not mounting.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: DKIOCGETPHYSICALBLOCKSIZE failed\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: physical block size 0x%x looks bad.  Not mounting.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: DKIOCSETBLOCKSIZE failed \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: DKIOCGETBLOCKCOUNT failed\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: DKIOCSETBLOCKSIZE (2) failed\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: DKIOCGETBLOCKCOUNT (2) failed\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: buf_meta_bread failed with %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: embedded volume offset not a multiple of physical block size (%d); switching to 512\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: DKIOCSETBLOCKSIZE (3) failed\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: DKIOCGETBLOCKCOUNT (3) failed\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: buf_meta_bread (2) failed with %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: failed to mount non-root inconsistent disk\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: hfs_early_journal_init indicated external jnl \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: hfs_early_journal_init failed, setting to FSK \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs(1): Journal replay fail.  Writing lastMountVersion as FSK!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: hfs_early_journal_init failed, erroring out \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: could not use physical block size (%d) switching to 512\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: DKIOCSETBLOCKSIZE (4) failed \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: DKIOCGETBLOCKCOUNT (4) failed \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: hfs_early_journal_init (2) resetting.. \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs(2): Journal replay fail.  Writing lastMountVersion as FSK!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: hfs_early_journal_init (2) failed \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_MountHFSPlusVolume (late) returned %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mountfs: encountered failure %d \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: mounted %s on device %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_mountfs",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "hfs: unmount initiated on %s on device %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "TAILQ_EMPTY(&hfsmp->hfs_reserved_ranges[HFS_TENTATIVE_BLOCKS]) && TAILQ_EMPTY(&hfsmp->hfs_reserved_ranges[HFS_LOCKED_BLOCKS])",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                },
                {
                    "string": "!hfsmp->lockedBlocks",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                }
            ],
            "symbol": "_hfs_unmount",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_sync_metadata: can't read volume header at %d! (retval 0x%x)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_sync_metadata",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "hfs: can't make a plain hfs volume journaled.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: volume %s is already journaled!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: volume has a btree w/non-contiguous nodes.  can not enable journaling.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: FAILED to create the journal!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: cannot disable journaling on volumes with directory hardlinks\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: disabling journaling for %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: %s resize debug\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "enabled",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "disabled",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_sysctl",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: err %d reading VH blk (vol=%s)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: corrupt VH on %s, sig 0x%04x, ver %d, blksize %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_flushVH: err %d getting block count (%s) \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_flushVH: partition size changed, partition_avh_sector=%qu, fs_avh_sector=%qu\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: trying alternate (for %s) avh_sector=%qu\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "file system",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "partition",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: err %d reading alternate VH (%s)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: corrupt alternate VH on %s, sig 0x%04x, ver %d, blksize %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_flushVH: altflush: partition size changed, partition_avh_sector=%qu, fs_avh_sector=%qu\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_flushvolumeheader",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_journal_replay",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_buf_flushdirtyblks"
                }
            ],
            "symbol": "_hfs_journal_replay",
            "prototype": "",
            "backtrace": [
                "_hfs_sysctl"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: BTZeroUnusedNodes: unable to read node %u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_erase_unused_nodes: updating volume %s.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_erase_unused_nodes",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_vnode_waitforwrites"
                },
                {
                    "string": "hfs_erase_unused_nodes: done updating volume %s.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_erase_unused_nodes",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "HFS: bitmap scan range error: %d on vol=%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_ScanUnmapBlocks",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: summary table not allowed on FS with block size of %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_init_summary",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 4,
            "anchors": [
                {
                    "string": "hfsmp->freeBlocks >= hfsmp->tentativeBlocks",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                },
                {
                    "string": "hfs: _DKIOCCSMAP error: %d, bytes_mapped: %llu\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfsmp->lockedBlocks >= extent->blockCount",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                }
            ],
            "symbol": "_BlockAllocate",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 5,
            "anchors": [
                {
                    "string": "hfs: found more blocks than are indicated free!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "\"hfs: blk allocation overflow on \\\"%s\\\" sb:0x%08x eb:0x%08x cb:0x%08x fb:0x%08x stop:0x%08x min:0x%08x found:0x%08x\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_BlockFindContiguous",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "hfs: BlockAllocateKnown() found allocation overflow on \"%s\"",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_BlockFindKnown",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 4,
            "anchors": [
                {
                    "string": "\"hfs: BlockFindAnyBitmap: allocation overflow on \\\"%s\\\"\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_BlockFindAny",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: remove_free_extent_list: %p: index (%d) out of range (0, %u)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_remove_free_extent_list",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "a < buf_count(bp) * 8",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                },
                {
                    "string": "b < buf_count(bp) * 8",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                },
                {
                    "string": "b >= a",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                }
            ],
            "symbol": "_process_reservations",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 2,
            "anchors": [
                {
                    "string": "\"hfs: ReleaseBitmapBlock: missing bp\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "\"Modified read-only bitmap buffer!\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_ReleaseBitmapBlock",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfsmp->lockedBlocks >= rl_len(range)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                }
            ],
            "symbol": "_hfs_release_reserved",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "start_bit % 8 == 0",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                },
                {
                    "string": "iosize != 0",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                }
            ],
            "symbol": "_get_more_bits",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"hfs_vnop_reclaim: vp points to wrong cnode (vp=%p cp->c_vp=%p cp->c_rsrc_vp=%p)\\n\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_hfs_vnop_reclaim",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"hfs_lock: locking against myself!\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_hfs_lock",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"hfs_lock_truncate: cnode %p locked!\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_hfs_lock_truncate",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "!(cp->c_lockowner == thread && ISSET(cp->c_flag, C_NEED_DATA_SETSIZE | C_NEED_RSRC_SETSIZE))",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                }
            ],
            "symbol": "_hfs_unlock_truncate",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_inactive: deleting non-empty%sfile %d, blks %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": " rsrc ",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_inactive: couldn't delete a truncated file!",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_cnode_teardown",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "com_apple_filesystems_hfs",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN11OSMetaClassC2EPKcPKS_j"
                }
            ],
            "symbol": "__GLOBAL__sub_I_hfs_iokit.cpp",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: vfs_fsadd failed: %d!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hw.physicalcpu",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_sysctlbyname"
                }
            ],
            "symbol": "__ZN25com_apple_filesystems_hfs5startEP9IOService",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "Ejectable",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                }
            ],
            "symbol": "_hfs_is_ejectable",
            "prototype": "",
            "backtrace": [
                "_hfs_mountfs"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "Content",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN12OSDictionary9setObjectEPKcRK11OSSharedPtrIK15OSMetaClassBaseE"
                },
                {
                    "string": "00000000-0000-0000-0000-000000000000",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_journal_open_cb"
                },
                {
                    "string": "hfs: open_journal_dev: uuid %s not found.  waiting 10sec.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: open_journal_dev: no available external journal partition found.  waiting 10sec.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: volume: %s: did not find jnl device uuid: %s from machine serial number: %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_open_journal_dev",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IOPlatformExpertDevice",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN9IOService15serviceMatchingEPKcP12OSDictionary"
                },
                {
                    "string": "IOPlatformSerialNumber",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                }
            ],
            "symbol": "_hfs_get_platform_serial_number",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "MapFileBlockC: tmpOff <= 0 (%lld)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_MapFileBlockC",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "hfs: HeadTruncateFile: problems finding extents %s (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_HeadTruncateFile",
            "prototype": "",
            "backtrace": [
                "_hfs_relocate"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"hfs: nr_delete: invalid NR (%p)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "BTreeNodeReserve.c",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_BTReleaseReserve",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_ValidateHFSPlusVolumeHeader: invalid HFS+ version: %x\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_ValidateHFSPlusVolumeHeader: invalid HFSX version: %x\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_ValidateHFSPlusVolumeHeader: unknown Volume Signature : %x\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_ValidateHFSPlusVolumeHeader: invalid blocksize (%d) \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_ValidateHFSPlusVolumeHeader: invalid physical blocksize (%d), hfs_logical_blocksize (%d) \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_ValidateHFSPlusVolumeHeader",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_mounthfsplus: cannot mount dirty non-journaled volumes\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mounthfsplus: hfs_logical_blocksize (%d) \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_MountHFSPlusVolume: partition_avh_sector=%qu, fs_avh_sector=%qu\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mounthfsplus: hfs_getnewvnode returned (%d) getting extentoverflow BT\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mounthfsplus: BTOpenPath returned (%d) getting extentoverflow BT\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mounthfsplus: hfs_getnewvnode returned (%d) getting catalog BT\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mounthfsplus: BTOpenPath returned (%d) getting catalog BT\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mounthfsplus: hfs_getnewvnode returned (%d) getting bitmap\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mounthfsplus: hfs_getnewvnode returned (%d) getting EA BT\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mounthfsplus: BTOpenPath returned (%d) getting EA BT\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mounthfsplus: init_attrdata_vnode returned (%d) for virtual EA file\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mounthfsplus: hfs_getnewvnode returned (%d) getting startup file\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mounthfsplus: cat_idlookup returned (%d) getting rootfolder \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_scan_blocks",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_msleep"
                },
                {
                    "string": "hfs_mounthfsplus: hfs_late_journal_init returned (%d), maybe an external jnl?\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs(3): Journal replay fail.  Writing lastMountVersion as FSK!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mounthfsplus: hfs_late_journal_init returned (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: danger! couldn't find the file-id's for the journal or journal_info_block\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: jnlfileid %d, jnlinfoblkid %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_mounthfsplus: hfs_erase_unused_nodes returned (%d) for %s \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_hotfile_bitmap_interlock",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_msleep"
                },
                {
                    "string": "hfs_mounthfsplus: encountered error (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_MountHFSPlusVolume",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: failed to pin extents overflow file %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: failed to pin catalog file %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: failed to pin bitmap file %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: failed to pin extended attr file %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_pin_fs_metadata",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"hfs_lock_global: locking against myself!\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_lock_global (frozen)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_lck_mtx_unlock"
                }
            ],
            "symbol": "_hfs_lock_global",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_remove_orphans: cat_preflight failed\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: error truncating data fork!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: error truncating rsrc fork!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_remove_orphans: error deleting cat rec for id %d!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: Removed %d orphaned / unlinked files and %d directories \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_remove_orphans",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "logBlockSize > 0",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                }
            ],
            "symbol": "_GetLogicalBlockSize",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "\"hfs_insertdirhint: hint %p already on list!\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_hfs_insertdirhint",
            "prototype": "",
            "backtrace": [
                "_hfs_readdirattr_internal"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "unknown-machine-uuid",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strlcpy"
                },
                {
                    "string": "hfs: early journal init: volume on %s is read-only and journal is dirty.  Can not mount volume.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: failed to reload the mdb after opening the journal (retval %d)!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: early jnl init: failed to open/create the journal (retval %d).\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_early_journal_init",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": ".quota.user",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strncmp"
                },
                {
                    "string": ".quota.group",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strncmp"
                }
            ],
            "symbol": "_hfs_virtualmetafile",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "!hfsmp->jnl || journal_owner(hfsmp->jnl) == current_thread()",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                },
                {
                    "string": "hfsmp->hfs_transaction_nesting > 0",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                }
            ],
            "symbol": "_hfs_end_transaction",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: dataless file encountered\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_check_for_dataless_file",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs freeze 1",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_msleep"
                },
                {
                    "string": "hfs freeze 2",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_msleep"
                },
                {
                    "string": "hfs freeze 3",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_vnode_waitforwrites"
                },
                {
                    "string": "hfs freeze 4",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_vnode_waitforwrites"
                },
                {
                    "string": "hfs freeze 5",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_vnode_waitforwrites"
                },
                {
                    "string": "hfs freeze 6",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_vnode_waitforwrites"
                },
                {
                    "string": "hfs freeze 7",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_vnode_waitforwrites"
                }
            ],
            "symbol": "_hfs_freeze",
            "prototype": "",
            "backtrace": [
                "_hfs_vnop_ioctl"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: journal open cb: error %d looking up device %s (dev uuid %s)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_journal_open_cb",
            "prototype": "",
            "backtrace": [
                "_open_journal_dev"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "hfs: can't find the .journal_info_block! disabling journaling (start: %d).\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: The journal_info_block moved (was: %d; is: %d).  Fixing up\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: can't read journal info block. disabling journaling.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: can't find the journal file! disabling journaling (start: %d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: The journal file moved (was: %lld; is: %d).  Fixing up\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: The journal file changed size! (was %lld; is %lld).  Fixing up.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "unknown-machine-serial-num",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_strlcpy"
                },
                {
                    "string": "hfs: late journal init: volume on %s is read-only and journal is dirty.  Can not mount volume.\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: late jnl init: failed to open/create the journal (retval %d).\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_late_journal_init",
            "prototype": "",
            "backtrace": [
                "_hfs_MountHFSPlusVolume"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs freeze 8",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_vnode_waitforwrites"
                }
            ],
            "symbol": "_hfs_freezewrite_callback",
            "prototype": "",
            "backtrace": [
                "_hfs_freeze",
                "_hfs_vnop_ioctl"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "(attrlist->volattr & ~ATTR_VOL_VALIDMASK) == 0",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                },
                {
                    "string": "(attrlist->dirattr & ~ATTR_DIR_VALIDMASK) == 0",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                },
                {
                    "string": "(attrlist->fileattr & ~ATTR_FILE_VALIDMASK) == 0",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_hfs_assert_fail"
                }
            ],
            "symbol": "_hfs_attrblksize",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%s : repairing valence to non-zero!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_readdirattr_internal",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_readdirattr_internal",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: FindNextLeafNode: Error from hfs_swap_BTNode (node %u)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_FindNextLeafNode",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs: set VeryLowDisk: vol:%s, freeblks:%d, dangerlimit:%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: set VeryLowDisk: vol:%s, backingstore b_avail:%lld, tag:%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: set LowDisk: vol:%s, freeblks:%d, warninglimit:%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: set NearLowDisk: vol:%s, freeblks:%d, nearwarninglimit:%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: clear NearLowDisk: vol:%s, freeblks:%d, nearwarninglimit:%d, desiredlevel:%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs: clear LowDisk: vol:%s, freeblks:%d, warninglimit:%d, desiredlevel:%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_generate_volume_notifications",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "hfs_vnop_link: error updating destination parent chain for id=%u, vol=%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_vnop_link: error %d updating tdvp %p\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_vnop_link: error %d updating fdvp %p\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_vnop_link: error updating source parent chain for id=%u, vol=%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_vnop_link: error %d updating vp @ %p\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_vnop_link",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "\"hfs_unlink: dir not empty (id %d, %d entries)\" @%s:%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                },
                {
                    "string": "hfs_link.c",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_panic"
                }
            ],
            "symbol": "_hfs_unlink",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "hfs_makelink: cat_rename to %s failed (%d) fileid=%d, vol=%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_makelink: error %d from cat_rename backout 1",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_makelink: createindirectlink (1) failed: %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_makelink: error %d from cat_rename backout 2",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_makelink: createindirectlink (2) failed: %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                },
                {
                    "string": "hfs_makelink: cat_update of privdir failed! (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_printf"
                }
            ],
            "symbol": "_hfs_makelink",
            "prototype": "",
            "backtrace": [
                "_hfs_vnop_link"
            ]
        }
    ]
}