{
    "target": "com.apple.driver.AppleEmbeddedLightSensor",
    "total": 62,
    "version": {
        "max": "24.3.0",
        "min": "24.2.0"
    },
    "signatures": [
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleALSColorSensor::handleStart entered\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%s: Failed to create timer event source!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "Failed to get IOInterruptEventSource",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%s: Failed to create interrupt event source!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%s: Failed to create command gate!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "channel-ratio-mitigation",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "ChannelRatioMitigation",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "Channel ratio mitigation = %d.",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "Driver %s is using %s to dispatch als events\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "interrupts",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN19AppleALSColorSensor11handleStartEP9IOService",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "AppleALSColorSensor::setPropertiesGated: requested ReportInterval=0 turn OFF sensor\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleALSColorSensor::setPropertiesGated: state is suspended; setting report interval is discarded\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%s: Support color is %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleALSColorSensor::%s: override %s \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleALSColorSensor::%s:: override value: %u \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN19AppleALSColorSensor14_setPropertiesEP8OSObject",
            "prototype": "",
            "backtrace": [
                "__ZN19AppleALSColorSensor13setPropertiesEP8OSObject"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "AppleALSColorSensor::%s failed with error (%s)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "copyEvent",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN19AppleALSColorSensor9copyEventEjP10IOHIDEventj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleALSColorSensor::%s failed to create event\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "_copyEvent",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN19AppleALSColorSensor10_copyEventERP10IOHIDEvent",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "skip-sensor-calibration",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_PE_parse_boot_argn"
                },
                {
                    "string": "useAABPlugin",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN10IOWorkLoop8workLoopEv"
                }
            ],
            "symbol": "__ZN27AppleEmbeddedI2CLightSensor11handleStartEP9IOService",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleEmbeddedI2CLightSensor::preEmptiveSensorStartup. Turning on early\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN27AppleEmbeddedI2CLightSensor23preEmptiveSensorStartupEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "AppleEmbeddedI2CLightSensor::%s - Not powered yet or not open yet. Caching properties\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleEmbeddedI2CLightSensor::_setProperties - could not initWithDictionary \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleEmbeddedI2CLightSensor::_setProperties - could not merge \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleEmbeddedI2CLightSensor::setPropertiesGated: request to turn OFF the sensor\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleEmbeddedI2CLightSensor::setPropertiesGated: requested ReportInterval=0 turn OFF sensor\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleEmbeddedI2CLightSensor::setPropertiesGated: override %s \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleEmbeddedI2CLightSensor::setPropertiesGated: override value: %u \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN27AppleEmbeddedI2CLightSensor14_setPropertiesEP8OSObject",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleEmbeddedI2CLightSensor::setReportingThresholdPercentage -- Could not power on the sensor error:(%s)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN27AppleEmbeddedI2CLightSensor31setReportingThresholdPercentageEt",
            "prototype": "",
            "backtrace": [
                "__ZN27AppleEmbeddedI2CLightSensor17_updatePowerStateEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleEmbeddedI2CLightSensor::%s: ktrace first sample (0x%X) \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN27AppleEmbeddedI2CLightSensor11reportEventEjjj",
            "prototype": "",
            "backtrace": [
                "__ZN10AppleCT80924_reportAmbientLightLevelEjjj",
                "__ZN10AppleCT80919_handleTimerExpiredEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleEmbeddedI2CLightSensor::_copyEvent returned error (%s)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN27AppleEmbeddedI2CLightSensor9copyEventEjP10IOHIDEventj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleEmbeddedI2CLightSensor::_updatePowerState: _parentPowered=%d isChipPowered()=%d _suspended=%lu isOpen=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN27AppleEmbeddedI2CLightSensor17_updatePowerStateEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "AppleMultitouchSPI",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZNK15OSMetaClassBase8metaCastEPKc"
                }
            ],
            "symbol": "__ZN27AppleEmbeddedI2CLightSensor8_messageEjP9IOServicePv",
            "prototype": "",
            "backtrace": [
                "__ZN27AppleEmbeddedI2CLightSensor7messageEjP9IOServicePv"
            ]
        },
        {
            "args": 2,
            "anchors": [
                {
                    "string": "%s::%s: ERROR: unable to crete button event interrupt source",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "hidMatchingNotification",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN27AppleEmbeddedI2CLightSensor23hidMatchingNotificationEPvP9IOServiceP10IONotifier",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "IOHIDEventService",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN9IOService15serviceMatchingEPKcP12OSDictionary"
                },
                {
                    "string": "PrimaryUsagePage",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSNumber10withNumberEyj"
                },
                {
                    "string": "PrimaryUsage",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN9IOService23addMatchingNotificationEPK8OSSymbolP12OSDictionaryPFbPvS5_PS_P10IONotifierES5_S5_i"
                },
                {
                    "string": "AppleSPUHIDDriver",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN9IOService15serviceMatchingEPKcP12OSDictionary"
                },
                {
                    "string": "DeviceUsagePage",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN8OSNumber10withNumberEyj"
                },
                {
                    "string": "DeviceUsage",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN7OSArray12withCapacityEj"
                },
                {
                    "string": "DeviceUsagePairs",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN9IOService23addMatchingNotificationEPK8OSSymbolP12OSDictionaryPFbPvS5_PS_P10IONotifierES5_S5_i"
                }
            ],
            "symbol": "__ZN27AppleEmbeddedI2CLightSensor25installButtonWakeListenerEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "AppleEmbeddedI2CLightSensor::%s: interrupt handling for preemptive startup \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "hidEventPreEmptiveSensorStartupHandler",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN27AppleEmbeddedI2CLightSensor38hidEventPreEmptiveSensorStartupHandlerEP22IOInterruptEventSourcei",
            "prototype": "",
            "backtrace": [
                "__ZN27AppleEmbeddedI2CLightSensor23hidMatchingNotificationEPvP9IOServiceP10IONotifier"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleEmbeddedI2CLightSensor::%s: Turn ON Sensor on %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "key press",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "wake event",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleEmbeddedI2CLightSensor::%s: preemptive startup interrupt fired \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN27AppleEmbeddedI2CLightSensor26_eventServiceCallbackGatedEP17IOHIDEventServicePvP10IOHIDEvent",
            "prototype": "",
            "backtrace": [
                "__ZN27AppleEmbeddedI2CLightSensor20eventServiceCallbackEP17IOHIDEventServicePvP10IOHIDEventj",
                "__ZN27AppleEmbeddedI2CLightSensor23hidMatchingNotificationEPvP9IOServiceP10IONotifier"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s::%s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "probe",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "probe-for-hardware",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "%s::%s: reading %s (attempts left %d) \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN19AppleALSColorSensor8readReg8EhPh"
                },
                {
                    "string": "%s::%s: Probing hardware failed (%s) devID=0x%x \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%s::%s Found device with ID = 0x%x\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT7205probeEP9IOServicePi",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "chip_id",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                },
                {
                    "string": "ALSSensorMax",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                },
                {
                    "string": "ALSSensorMin",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                },
                {
                    "string": "NumberOfChannels",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                },
                {
                    "string": "FDRCalibration",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                },
                {
                    "string": "ALSSensorType",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                }
            ],
            "symbol": "__ZN10AppleCT72011handleStartEP9IOService",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%d: CAL DATA STRUCT SIZE: %lu \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: Calibration Header -- \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: alsCalibrationHeader.size = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: alsCalibrationHeader.calibrationType = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: Cal Data for Sensor --\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: size = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: calibrationFudgeForLux = %d / 1000\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: slowModeIntegrationTime = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: fastModeIntegrationTime = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: rapidModeIntegrationTime = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: slowModeGain = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: fastModeGain = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: rapidModeGain = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: numberOfGains=%d \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: Channel %d --\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: dark counts = %d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: channel offset counts = %d/1000 \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: backlight leakage high counts = %d \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: scale factor %d = %lld / 1000\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: Lux coefficients: a1=%d/1000000 a2=%d/1000000 a3=%d/1000000 a4=%d/1000000\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d:  === Other settings === \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: Gain[%d->%d] scale factor R channel: %d/1000 \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: Gain[%d->%d] scale factor G channel: %d/1000 \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: Gain[%d->%d] scale factor B channel: %d/1000 \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: Gain[%d->%d] scale factor C channel: %d/1000 \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT72014dumpALSCalDataEv",
            "prototype": "",
            "backtrace": [
                "__ZN10AppleCT72018setPropertiesGatedEP8OSObject"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%d: %s::%s - Enabling sensor with gain %d and integration time %u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: %s::%s - Disabling the sensor \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT72016setSensorEnabledEb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "ALSSuperFastIntegrationTime",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "ALSFastIntegrationTime",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "ALSSlowIntegrationTime",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "Calibrated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "CalibrationType",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%s::%s - channel offset compensation enabled: R=%d/1000 G=%d/1000 B=%d/1000 C=%d/1000",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%s::%s - Channel coefficients set: R=%d/%d G=%d/%d B=%d/%d C=%d/%d, CCT0=%d/%d, CCT1=%d/%d",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%s::%s - Sensor with orientation %d is calibrated \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%s::%s - Calibration failed because data isn't valid\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%s::%s - Calibration failed because calibration data is size %d when %lu is expected\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT72019loadCalibrationDataEP6OSData",
            "prototype": "",
            "backtrace": [
                "__ZN10AppleCT72018setPropertiesGatedEP8OSObject"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%d: AppleCT720::setPropertiesGated\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "ALSCalibrationData",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "%d: %s::%s - ALS Calibration failed to load\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "IOHIDBacklightLevel",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "%d: %s::%s - _alsTestMode=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: %s::%s - _alsRawMode=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "IOHIDALSGain",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "%d: %s::%s - newGain = 2^%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "Ch0OverrideValue",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "%d: %s::%s: ch0 override set to %d \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "Ch1OverrideValue",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "%d: %s::%s: ch1 override set to %d \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "Ch2OverrideValue",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "%d: %s::%s: ch2 override set to %d \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "Ch3OverrideValue",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "%d: %s::%s: ch3 override set to %d \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "ChannelOverride",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "%d: %s::%s: channel override turned %s \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "ReadAZOffsets",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "%s::%s: Reading of AZ offsets turned %s \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT72018setPropertiesGatedEP8OSObject",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%s::%s - setting report interval %u us \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "setALSReportInterval",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT72020setALSReportIntervalEj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%d: %s::%s: current gain = %d, reference gain = %d, high threshold=%d, low threshold=%d \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "updateDynamicGainThresholds",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT72027updateDynamicGainThresholdsEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "%d: %s::%s: saturation - cancel integration time boost (%d -> %d us) \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: %s::%s: saturation decrease gain (%d -> %d) \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: %s::%s: decrease integration time (%u -> %u) \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: %s::%s: crossed high threshold - gain switched %d->%d \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: %s::%s: crossed low threshold - gain switched %d->%d (clear channel = %d < %d)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: %s::%s: increase integration time (%u -> %u) \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT72034updateDynamicIntegrationParametersEPtb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%d: %s::%s: integCycles=%u referenceIntegCycles=%u scaleForIntegrationTime=%d/1000 \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: %s::%s: Rscale=%d/1000 Gscale=%d/1000 Bscale=%d/1000 Cscale=%d/1000 \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: %s::%s: lux=%d R=%d/1000 G=%d/1000 B=%d/1000 C=%d/1000 \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT72014luxCalculationEPtPfh",
            "prototype": "",
            "backtrace": [
                "__ZN10AppleCT72015_handleNewEventEv"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "%d: %s::%s: read data: R=%d G=%d B=%d C=%d \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: %s::%s: AZ offsets:  R=%d G=%d B=%d C=%d \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: %s::%s: full saturation, report maximum lux \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: %s::%s: spurious interrupt \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "%d: %s::%s: result: %s (status=%d) \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT72015_handleNewEventEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "Length is not even, shouldn't be the case (%d)\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT8096chksumEPKvi",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "AppleCT809::probe\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809::probe - Probing hardware failed (%s) \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809::probe  - Wrong hardware - ID 0x%x (expedted 0x%x) \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809::probe - Probing hardware found (0x%x), %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "interrupt driven",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT8095probeEP9IOServicePi",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleCT809::start \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "als-golden-config-type",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "AppleCT809::handleStart: static config #%d  \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809::handleStart: expecting calibration \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "StaticConfigType",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AutoRateControl",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809::handleStart: joined PM tree \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT80911handleStartEP9IOService",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleCT809::handleOpen: driver configured or calibrated -> turn on \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT80910handleOpenEP9IOServicejPv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleCT809::start: invalid calibration - CAL || ALSAR invalid \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809::start: calibration slot #%d \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "set-default-interval",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "AppleCT809::start: Found set-default-interval, setting defaultInterval = %u\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809::start: calibration is too short \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT80910_calibrateEP6OSData",
            "prototype": "",
            "backtrace": [
                "__ZN10AppleCT80914_setPropertiesEP8OSObject"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleCT809 - DUMP CALIBRATION DATA \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809 - CALIBRATED \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "Lux calculation: a0=%d/1000 b0=%d/1000 a1=%d/1000 b1=%d/1000 r=%d/1000 \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "Correction factor: %d/1000 \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809 - STATIC CONFIG (type #%d) \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "Nominal integration time: %d \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "Lux calculation #%d set: A=%d/1000 B=%d/1000 R=%d/1000 \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "ERROR: no calibration or config \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": null
                }
            ],
            "symbol": "__ZN10AppleCT80915_dumpALSCalDataEv",
            "prototype": "",
            "backtrace": [
                "__ZN10AppleCT80918setPropertiesGatedEP8OSObject"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleCT809::_calculateAmbient: ratio=%d/1000 -> use A0,B0 \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809::_calculateAmbient: ratio=%d/1000 -> use A1,B1 \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT80917_calculateAmbientEjjPjS0_",
            "prototype": "",
            "backtrace": [
                "__ZN10AppleCT80916readSensorData32EPjS0_S0_"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleCT809::_calculateAmbientGC: raw (ch0=%u,ch1=%u) scalled (ch0=%u,ch1=%u) factor(ch0=%d/1000,ch1=%d/1000)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809::_calculateAmbientGC: ratio=%d/1000 -> use A/B #%d \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT80919_calculateAmbientGCEjjPjS0_",
            "prototype": "",
            "backtrace": [
                "__ZN10AppleCT80916readSensorData32EPjS0_S0_"
            ]
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleCT809::readSensorData: status=%u \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809::readSensorData: lux=%u data0=%u data1=%u -> ch0=%u ch1=%u \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT80916readSensorData32EPjS0_S0_",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleCT809::_handleTimerExpired: couldn't read sensor data. Reason: %s\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT80919_handleTimerExpiredEv",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 4,
            "anchors": [
                {
                    "string": "AppleCT809::_reportAmbientLightEvent: lux=%d ch0=%d ch1=%d \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809::_reportAmbientLightEvent: lux=%u not changed enough in compare to prev.lux=%u \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT80924_reportAmbientLightLevelEjjj",
            "prototype": "",
            "backtrace": [
                "__ZN10AppleCT80919_handleTimerExpiredEv"
            ]
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "AppleCT809::setSensorEnabled: Enabling sensor with gain 0x0%x\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809::setSensorEnabled: Disabling the sensor \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT80916setSensorEnabledEb",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleCT809::_setALSReportingInterval %d \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT80924_setALSReportingIntervalEj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleCT809::_setReportIntervalInternal: usec=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT80926_setReportIntervalInternalEj",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "::setProperties: _parentPowered=%d isChipPowered()=%d _suspended=%lu isOpen=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT80913setPropertiesEP8OSObject",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "AmbientLightSensorCalibration",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "calibrated",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN10AppleCT80926_setReportIntervalInternalEj"
                },
                {
                    "string": "ALSCalibration",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN10AppleCT80926_setReportIntervalInternalEj"
                },
                {
                    "string": "AppleCT809::setPropertiesGated: calibration %s \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "successful",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "failed",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN10AppleCT80926_setReportIntervalInternalEj"
                }
            ],
            "symbol": "__ZN10AppleCT80914_setPropertiesEP8OSObject",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 1,
            "anchors": [
                {
                    "string": "AppleCT809::setPropertiesGated: sensitivity updated (%u%%)",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "ALSGainOverride",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "AppleCT809::setPropertiesGated: _gainOverride=%d \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809::setPropertiesGated: _alsTestMode=%d \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809::setPropertiesGated: _alsRawMode=%d\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "write",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "AppleCT809::setPropertiesGated: Register write (%s): reg=0x%x value=0x%x \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809::setPropertiesGated: Error writing register (%s) \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809::setPropertiesGated: error value=%p subAddress=%p \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "read8",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "__ZN15OSMetaClassBase12safeMetaCastEPKS_PK11OSMetaClass"
                },
                {
                    "string": "AppleCT809::setPropertiesGated: Register read (%s): reg=0x%x value=0x%x \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809::setPropertiesGated: Error reading register (%s) \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                },
                {
                    "string": "AppleCT809::setPropertiesGated: Error getting address \n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT80918setPropertiesGatedEP8OSObject",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleCT809: Can't read I2C yet!!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT8099_readReg8EhPh",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "AppleCT809: Can't write I2C yet!!\n",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_IOLog"
                }
            ],
            "symbol": "__ZN10AppleCT80910_writeReg8Ehh",
            "prototype": "",
            "backtrace": []
        },
        {
            "args": 0,
            "anchors": [
                {
                    "string": "com.apple.CoreBrightness",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_os_log_create"
                },
                {
                    "string": "default",
                    "segment": "__TEXT",
                    "section": "__cstring",
                    "caller": "_os_log_create"
                },
                {
                    "string": "Failed to create CoreBrightness default log",
                    "segment": "__TEXT",
                    "section": "__os_log",
                    "caller": "__os_log_internal"
                }
            ],
            "symbol": "_init_default_corebrightness_log",
            "prototype": "",
            "backtrace": []
        }
    ]
}